// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: server_connetion.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_server_5fconnetion_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_server_5fconnetion_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3014000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3014000 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_server_5fconnetion_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_server_5fconnetion_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxiliaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[1]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_server_5fconnetion_2eproto;
namespace pb {
class SSConnectPacket;
class SSConnectPacketDefaultTypeInternal;
extern SSConnectPacketDefaultTypeInternal _SSConnectPacket_default_instance_;
}  // namespace pb
PROTOBUF_NAMESPACE_OPEN
template<> ::pb::SSConnectPacket* Arena::CreateMaybeMessage<::pb::SSConnectPacket>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace pb {

enum SS_CONNECT_CMD : int {
  SS_CONNECT_DEFAULT = 0,
  SS_CONNECT_REQ_ID = 40000,
  SS_CONNECT_RSP_ID = 40001,
  SS_CONNECT_CMD_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::min(),
  SS_CONNECT_CMD_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::max()
};
bool SS_CONNECT_CMD_IsValid(int value);
constexpr SS_CONNECT_CMD SS_CONNECT_CMD_MIN = SS_CONNECT_DEFAULT;
constexpr SS_CONNECT_CMD SS_CONNECT_CMD_MAX = SS_CONNECT_RSP_ID;
constexpr int SS_CONNECT_CMD_ARRAYSIZE = SS_CONNECT_CMD_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* SS_CONNECT_CMD_descriptor();
template<typename T>
inline const std::string& SS_CONNECT_CMD_Name(T enum_t_value) {
  static_assert(::std::is_same<T, SS_CONNECT_CMD>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function SS_CONNECT_CMD_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    SS_CONNECT_CMD_descriptor(), enum_t_value);
}
inline bool SS_CONNECT_CMD_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, SS_CONNECT_CMD* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<SS_CONNECT_CMD>(
    SS_CONNECT_CMD_descriptor(), name, value);
}
// ===================================================================

class SSConnectPacket PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:pb.SSConnectPacket) */ {
 public:
  inline SSConnectPacket() : SSConnectPacket(nullptr) {}
  virtual ~SSConnectPacket();

  SSConnectPacket(const SSConnectPacket& from);
  SSConnectPacket(SSConnectPacket&& from) noexcept
    : SSConnectPacket() {
    *this = ::std::move(from);
  }

  inline SSConnectPacket& operator=(const SSConnectPacket& from) {
    CopyFrom(from);
    return *this;
  }
  inline SSConnectPacket& operator=(SSConnectPacket&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const SSConnectPacket& default_instance();

  static inline const SSConnectPacket* internal_default_instance() {
    return reinterpret_cast<const SSConnectPacket*>(
               &_SSConnectPacket_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(SSConnectPacket& a, SSConnectPacket& b) {
    a.Swap(&b);
  }
  inline void Swap(SSConnectPacket* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SSConnectPacket* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline SSConnectPacket* New() const final {
    return CreateMaybeMessage<SSConnectPacket>(nullptr);
  }

  SSConnectPacket* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<SSConnectPacket>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const SSConnectPacket& from);
  void MergeFrom(const SSConnectPacket& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SSConnectPacket* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "pb.SSConnectPacket";
  }
  protected:
  explicit SSConnectPacket(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_server_5fconnetion_2eproto);
    return ::descriptor_table_server_5fconnetion_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSstypeFieldNumber = 1,
    kServeruidFieldNumber = 2,
  };
  // uint32 sstype = 1;
  void clear_sstype();
  ::PROTOBUF_NAMESPACE_ID::uint32 sstype() const;
  void set_sstype(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_sstype() const;
  void _internal_set_sstype(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 serveruid = 2;
  void clear_serveruid();
  ::PROTOBUF_NAMESPACE_ID::uint32 serveruid() const;
  void set_serveruid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_serveruid() const;
  void _internal_set_serveruid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:pb.SSConnectPacket)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::uint32 sstype_;
  ::PROTOBUF_NAMESPACE_ID::uint32 serveruid_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_server_5fconnetion_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// SSConnectPacket

// uint32 sstype = 1;
inline void SSConnectPacket::clear_sstype() {
  sstype_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 SSConnectPacket::_internal_sstype() const {
  return sstype_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 SSConnectPacket::sstype() const {
  // @@protoc_insertion_point(field_get:pb.SSConnectPacket.sstype)
  return _internal_sstype();
}
inline void SSConnectPacket::_internal_set_sstype(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  sstype_ = value;
}
inline void SSConnectPacket::set_sstype(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_sstype(value);
  // @@protoc_insertion_point(field_set:pb.SSConnectPacket.sstype)
}

// uint32 serveruid = 2;
inline void SSConnectPacket::clear_serveruid() {
  serveruid_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 SSConnectPacket::_internal_serveruid() const {
  return serveruid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 SSConnectPacket::serveruid() const {
  // @@protoc_insertion_point(field_get:pb.SSConnectPacket.serveruid)
  return _internal_serveruid();
}
inline void SSConnectPacket::_internal_set_serveruid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  serveruid_ = value;
}
inline void SSConnectPacket::set_serveruid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_serveruid(value);
  // @@protoc_insertion_point(field_set:pb.SSConnectPacket.serveruid)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)

}  // namespace pb

PROTOBUF_NAMESPACE_OPEN

template <> struct is_proto_enum< ::pb::SS_CONNECT_CMD> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::pb::SS_CONNECT_CMD>() {
  return ::pb::SS_CONNECT_CMD_descriptor();
}

PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_server_5fconnetion_2eproto
