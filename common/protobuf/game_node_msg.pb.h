// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: game_node_msg.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_game_5fnode_5fmsg_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_game_5fnode_5fmsg_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3014000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3014000 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "CsCmd.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_game_5fnode_5fmsg_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_game_5fnode_5fmsg_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxiliaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[16]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_game_5fnode_5fmsg_2eproto;
namespace pb {
class BattleServerMsg;
class BattleServerMsgDefaultTypeInternal;
extern BattleServerMsgDefaultTypeInternal _BattleServerMsg_default_instance_;
class SSG2NChooseLevelReq;
class SSG2NChooseLevelReqDefaultTypeInternal;
extern SSG2NChooseLevelReqDefaultTypeInternal _SSG2NChooseLevelReq_default_instance_;
class SSG2NCreateRoomReq;
class SSG2NCreateRoomReqDefaultTypeInternal;
extern SSG2NCreateRoomReqDefaultTypeInternal _SSG2NCreateRoomReq_default_instance_;
class SSG2NEnterRoomReq;
class SSG2NEnterRoomReqDefaultTypeInternal;
extern SSG2NEnterRoomReqDefaultTypeInternal _SSG2NEnterRoomReq_default_instance_;
class SSG2NLeaveRoomReq;
class SSG2NLeaveRoomReqDefaultTypeInternal;
extern SSG2NLeaveRoomReqDefaultTypeInternal _SSG2NLeaveRoomReq_default_instance_;
class SSG2NPullMsgInfoReq;
class SSG2NPullMsgInfoReqDefaultTypeInternal;
extern SSG2NPullMsgInfoReqDefaultTypeInternal _SSG2NPullMsgInfoReq_default_instance_;
class SSG2NReadyInRoomReq;
class SSG2NReadyInRoomReqDefaultTypeInternal;
extern SSG2NReadyInRoomReqDefaultTypeInternal _SSG2NReadyInRoomReq_default_instance_;
class SSG2NUserDisConnectRoomNotify;
class SSG2NUserDisConnectRoomNotifyDefaultTypeInternal;
extern SSG2NUserDisConnectRoomNotifyDefaultTypeInternal _SSG2NUserDisConnectRoomNotify_default_instance_;
class SSN2GChooseLevelRsp;
class SSN2GChooseLevelRspDefaultTypeInternal;
extern SSN2GChooseLevelRspDefaultTypeInternal _SSN2GChooseLevelRsp_default_instance_;
class SSN2GCreateRoomRsp;
class SSN2GCreateRoomRspDefaultTypeInternal;
extern SSN2GCreateRoomRspDefaultTypeInternal _SSN2GCreateRoomRsp_default_instance_;
class SSN2GEnterRoomRsp;
class SSN2GEnterRoomRspDefaultTypeInternal;
extern SSN2GEnterRoomRspDefaultTypeInternal _SSN2GEnterRoomRsp_default_instance_;
class SSN2GLeaveRoomRsp;
class SSN2GLeaveRoomRspDefaultTypeInternal;
extern SSN2GLeaveRoomRspDefaultTypeInternal _SSN2GLeaveRoomRsp_default_instance_;
class SSN2GPullBattleMsgInfoRsp;
class SSN2GPullBattleMsgInfoRspDefaultTypeInternal;
extern SSN2GPullBattleMsgInfoRspDefaultTypeInternal _SSN2GPullBattleMsgInfoRsp_default_instance_;
class SSN2GPullMsgInfoRsp;
class SSN2GPullMsgInfoRspDefaultTypeInternal;
extern SSN2GPullMsgInfoRspDefaultTypeInternal _SSN2GPullMsgInfoRsp_default_instance_;
class SSN2GReadyInRoomRsp;
class SSN2GReadyInRoomRspDefaultTypeInternal;
extern SSN2GReadyInRoomRspDefaultTypeInternal _SSN2GReadyInRoomRsp_default_instance_;
class SSN2GUserDisConnecteTimeoutNotify;
class SSN2GUserDisConnecteTimeoutNotifyDefaultTypeInternal;
extern SSN2GUserDisConnecteTimeoutNotifyDefaultTypeInternal _SSN2GUserDisConnecteTimeoutNotify_default_instance_;
}  // namespace pb
PROTOBUF_NAMESPACE_OPEN
template<> ::pb::BattleServerMsg* Arena::CreateMaybeMessage<::pb::BattleServerMsg>(Arena*);
template<> ::pb::SSG2NChooseLevelReq* Arena::CreateMaybeMessage<::pb::SSG2NChooseLevelReq>(Arena*);
template<> ::pb::SSG2NCreateRoomReq* Arena::CreateMaybeMessage<::pb::SSG2NCreateRoomReq>(Arena*);
template<> ::pb::SSG2NEnterRoomReq* Arena::CreateMaybeMessage<::pb::SSG2NEnterRoomReq>(Arena*);
template<> ::pb::SSG2NLeaveRoomReq* Arena::CreateMaybeMessage<::pb::SSG2NLeaveRoomReq>(Arena*);
template<> ::pb::SSG2NPullMsgInfoReq* Arena::CreateMaybeMessage<::pb::SSG2NPullMsgInfoReq>(Arena*);
template<> ::pb::SSG2NReadyInRoomReq* Arena::CreateMaybeMessage<::pb::SSG2NReadyInRoomReq>(Arena*);
template<> ::pb::SSG2NUserDisConnectRoomNotify* Arena::CreateMaybeMessage<::pb::SSG2NUserDisConnectRoomNotify>(Arena*);
template<> ::pb::SSN2GChooseLevelRsp* Arena::CreateMaybeMessage<::pb::SSN2GChooseLevelRsp>(Arena*);
template<> ::pb::SSN2GCreateRoomRsp* Arena::CreateMaybeMessage<::pb::SSN2GCreateRoomRsp>(Arena*);
template<> ::pb::SSN2GEnterRoomRsp* Arena::CreateMaybeMessage<::pb::SSN2GEnterRoomRsp>(Arena*);
template<> ::pb::SSN2GLeaveRoomRsp* Arena::CreateMaybeMessage<::pb::SSN2GLeaveRoomRsp>(Arena*);
template<> ::pb::SSN2GPullBattleMsgInfoRsp* Arena::CreateMaybeMessage<::pb::SSN2GPullBattleMsgInfoRsp>(Arena*);
template<> ::pb::SSN2GPullMsgInfoRsp* Arena::CreateMaybeMessage<::pb::SSN2GPullMsgInfoRsp>(Arena*);
template<> ::pb::SSN2GReadyInRoomRsp* Arena::CreateMaybeMessage<::pb::SSN2GReadyInRoomRsp>(Arena*);
template<> ::pb::SSN2GUserDisConnecteTimeoutNotify* Arena::CreateMaybeMessage<::pb::SSN2GUserDisConnecteTimeoutNotify>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace pb {

enum SSN2GPullMsgInfoRsp_RetCode : int {
  SSN2GPullMsgInfoRsp_RetCode_RET_SUCC = 0,
  SSN2GPullMsgInfoRsp_RetCode_RET_FAILED = 1,
  SSN2GPullMsgInfoRsp_RetCode_RET_ROOM_NOT_EXIST = 2,
  SSN2GPullMsgInfoRsp_RetCode_RET_SERVEICE_NOT_AVAILBLE = 3,
  SSN2GPullMsgInfoRsp_RetCode_SSN2GPullMsgInfoRsp_RetCode_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::min(),
  SSN2GPullMsgInfoRsp_RetCode_SSN2GPullMsgInfoRsp_RetCode_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::max()
};
bool SSN2GPullMsgInfoRsp_RetCode_IsValid(int value);
constexpr SSN2GPullMsgInfoRsp_RetCode SSN2GPullMsgInfoRsp_RetCode_RetCode_MIN = SSN2GPullMsgInfoRsp_RetCode_RET_SUCC;
constexpr SSN2GPullMsgInfoRsp_RetCode SSN2GPullMsgInfoRsp_RetCode_RetCode_MAX = SSN2GPullMsgInfoRsp_RetCode_RET_SERVEICE_NOT_AVAILBLE;
constexpr int SSN2GPullMsgInfoRsp_RetCode_RetCode_ARRAYSIZE = SSN2GPullMsgInfoRsp_RetCode_RetCode_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* SSN2GPullMsgInfoRsp_RetCode_descriptor();
template<typename T>
inline const std::string& SSN2GPullMsgInfoRsp_RetCode_Name(T enum_t_value) {
  static_assert(::std::is_same<T, SSN2GPullMsgInfoRsp_RetCode>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function SSN2GPullMsgInfoRsp_RetCode_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    SSN2GPullMsgInfoRsp_RetCode_descriptor(), enum_t_value);
}
inline bool SSN2GPullMsgInfoRsp_RetCode_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, SSN2GPullMsgInfoRsp_RetCode* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<SSN2GPullMsgInfoRsp_RetCode>(
    SSN2GPullMsgInfoRsp_RetCode_descriptor(), name, value);
}
enum SSN2GPullBattleMsgInfoRsp_RetCode : int {
  SSN2GPullBattleMsgInfoRsp_RetCode_RET_SUCC = 0,
  SSN2GPullBattleMsgInfoRsp_RetCode_RET_FAILED = 1,
  SSN2GPullBattleMsgInfoRsp_RetCode_RET_ROOM_NOT_EXIST = 2,
  SSN2GPullBattleMsgInfoRsp_RetCode_RET_SERVEICE_NOT_AVAILBLE = 3,
  SSN2GPullBattleMsgInfoRsp_RetCode_SSN2GPullBattleMsgInfoRsp_RetCode_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::min(),
  SSN2GPullBattleMsgInfoRsp_RetCode_SSN2GPullBattleMsgInfoRsp_RetCode_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::max()
};
bool SSN2GPullBattleMsgInfoRsp_RetCode_IsValid(int value);
constexpr SSN2GPullBattleMsgInfoRsp_RetCode SSN2GPullBattleMsgInfoRsp_RetCode_RetCode_MIN = SSN2GPullBattleMsgInfoRsp_RetCode_RET_SUCC;
constexpr SSN2GPullBattleMsgInfoRsp_RetCode SSN2GPullBattleMsgInfoRsp_RetCode_RetCode_MAX = SSN2GPullBattleMsgInfoRsp_RetCode_RET_SERVEICE_NOT_AVAILBLE;
constexpr int SSN2GPullBattleMsgInfoRsp_RetCode_RetCode_ARRAYSIZE = SSN2GPullBattleMsgInfoRsp_RetCode_RetCode_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* SSN2GPullBattleMsgInfoRsp_RetCode_descriptor();
template<typename T>
inline const std::string& SSN2GPullBattleMsgInfoRsp_RetCode_Name(T enum_t_value) {
  static_assert(::std::is_same<T, SSN2GPullBattleMsgInfoRsp_RetCode>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function SSN2GPullBattleMsgInfoRsp_RetCode_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    SSN2GPullBattleMsgInfoRsp_RetCode_descriptor(), enum_t_value);
}
inline bool SSN2GPullBattleMsgInfoRsp_RetCode_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, SSN2GPullBattleMsgInfoRsp_RetCode* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<SSN2GPullBattleMsgInfoRsp_RetCode>(
    SSN2GPullBattleMsgInfoRsp_RetCode_descriptor(), name, value);
}
enum SS_GAME_NODE_MSG_CMD : int {
  SS_GAME_MSG_DEFAULT = 0,
  SS_GAME_NODE_PULLROOMINFO_REQ = 500,
  SS_NODE_GAME_PULLROOMINFO_RSP = 501,
  SS_GAME_NODE_CREATEROOM_REQ = 502,
  SS_NODE_GAME_CREATEROOM_RSP = 503,
  SS_GAME_NODE_ENTERROOM_REQ = 504,
  SS_NODE_GAME_ENTERROOM_RSP = 505,
  SS_GAME_NODE_LEAVEROOM_REQ = 506,
  SS_NODE_GAME_LEAVEROOM_RSP = 507,
  SS_GAME_NODE_CHOOSELEVEL_REQ = 508,
  SS_NODE_GAME_CHOOSELEVEL_RSP = 509,
  SS_GAME_NODE_READYROOM_REQ = 510,
  SS_NODE_GAME_READYROOM_RSP = 511,
  SS_GAME_NODE_PULLBATTLEINFO_REQ = 512,
  SS_NODE_GAME_PULLBATTLEINFO_RSP = 513,
  SS_GAME_NODE_USER_DISCONNECT_NOTIFY = 514,
  SS_NODE_GAME_USER__DISCONNECT_TIMEOUT_NOTIFY = 515,
  SS_GAME_NODE_MSG_CMD_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::min(),
  SS_GAME_NODE_MSG_CMD_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::max()
};
bool SS_GAME_NODE_MSG_CMD_IsValid(int value);
constexpr SS_GAME_NODE_MSG_CMD SS_GAME_NODE_MSG_CMD_MIN = SS_GAME_MSG_DEFAULT;
constexpr SS_GAME_NODE_MSG_CMD SS_GAME_NODE_MSG_CMD_MAX = SS_NODE_GAME_USER__DISCONNECT_TIMEOUT_NOTIFY;
constexpr int SS_GAME_NODE_MSG_CMD_ARRAYSIZE = SS_GAME_NODE_MSG_CMD_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* SS_GAME_NODE_MSG_CMD_descriptor();
template<typename T>
inline const std::string& SS_GAME_NODE_MSG_CMD_Name(T enum_t_value) {
  static_assert(::std::is_same<T, SS_GAME_NODE_MSG_CMD>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function SS_GAME_NODE_MSG_CMD_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    SS_GAME_NODE_MSG_CMD_descriptor(), enum_t_value);
}
inline bool SS_GAME_NODE_MSG_CMD_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, SS_GAME_NODE_MSG_CMD* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<SS_GAME_NODE_MSG_CMD>(
    SS_GAME_NODE_MSG_CMD_descriptor(), name, value);
}
// ===================================================================

class SSG2NPullMsgInfoReq PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:pb.SSG2NPullMsgInfoReq) */ {
 public:
  inline SSG2NPullMsgInfoReq() : SSG2NPullMsgInfoReq(nullptr) {}
  virtual ~SSG2NPullMsgInfoReq();

  SSG2NPullMsgInfoReq(const SSG2NPullMsgInfoReq& from);
  SSG2NPullMsgInfoReq(SSG2NPullMsgInfoReq&& from) noexcept
    : SSG2NPullMsgInfoReq() {
    *this = ::std::move(from);
  }

  inline SSG2NPullMsgInfoReq& operator=(const SSG2NPullMsgInfoReq& from) {
    CopyFrom(from);
    return *this;
  }
  inline SSG2NPullMsgInfoReq& operator=(SSG2NPullMsgInfoReq&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const SSG2NPullMsgInfoReq& default_instance();

  static inline const SSG2NPullMsgInfoReq* internal_default_instance() {
    return reinterpret_cast<const SSG2NPullMsgInfoReq*>(
               &_SSG2NPullMsgInfoReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(SSG2NPullMsgInfoReq& a, SSG2NPullMsgInfoReq& b) {
    a.Swap(&b);
  }
  inline void Swap(SSG2NPullMsgInfoReq* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SSG2NPullMsgInfoReq* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline SSG2NPullMsgInfoReq* New() const final {
    return CreateMaybeMessage<SSG2NPullMsgInfoReq>(nullptr);
  }

  SSG2NPullMsgInfoReq* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<SSG2NPullMsgInfoReq>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const SSG2NPullMsgInfoReq& from);
  void MergeFrom(const SSG2NPullMsgInfoReq& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SSG2NPullMsgInfoReq* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "pb.SSG2NPullMsgInfoReq";
  }
  protected:
  explicit SSG2NPullMsgInfoReq(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_game_5fnode_5fmsg_2eproto);
    return ::descriptor_table_game_5fnode_5fmsg_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kRoomidFieldNumber = 1,
    kAccountidFieldNumber = 2,
  };
  // uint64 roomid = 1;
  void clear_roomid();
  ::PROTOBUF_NAMESPACE_ID::uint64 roomid() const;
  void set_roomid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_roomid() const;
  void _internal_set_roomid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // uint32 accountid = 2;
  void clear_accountid();
  ::PROTOBUF_NAMESPACE_ID::uint32 accountid() const;
  void set_accountid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_accountid() const;
  void _internal_set_accountid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:pb.SSG2NPullMsgInfoReq)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::uint64 roomid_;
  ::PROTOBUF_NAMESPACE_ID::uint32 accountid_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_game_5fnode_5fmsg_2eproto;
};
// -------------------------------------------------------------------

class SSN2GPullMsgInfoRsp PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:pb.SSN2GPullMsgInfoRsp) */ {
 public:
  inline SSN2GPullMsgInfoRsp() : SSN2GPullMsgInfoRsp(nullptr) {}
  virtual ~SSN2GPullMsgInfoRsp();

  SSN2GPullMsgInfoRsp(const SSN2GPullMsgInfoRsp& from);
  SSN2GPullMsgInfoRsp(SSN2GPullMsgInfoRsp&& from) noexcept
    : SSN2GPullMsgInfoRsp() {
    *this = ::std::move(from);
  }

  inline SSN2GPullMsgInfoRsp& operator=(const SSN2GPullMsgInfoRsp& from) {
    CopyFrom(from);
    return *this;
  }
  inline SSN2GPullMsgInfoRsp& operator=(SSN2GPullMsgInfoRsp&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const SSN2GPullMsgInfoRsp& default_instance();

  static inline const SSN2GPullMsgInfoRsp* internal_default_instance() {
    return reinterpret_cast<const SSN2GPullMsgInfoRsp*>(
               &_SSN2GPullMsgInfoRsp_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(SSN2GPullMsgInfoRsp& a, SSN2GPullMsgInfoRsp& b) {
    a.Swap(&b);
  }
  inline void Swap(SSN2GPullMsgInfoRsp* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SSN2GPullMsgInfoRsp* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline SSN2GPullMsgInfoRsp* New() const final {
    return CreateMaybeMessage<SSN2GPullMsgInfoRsp>(nullptr);
  }

  SSN2GPullMsgInfoRsp* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<SSN2GPullMsgInfoRsp>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const SSN2GPullMsgInfoRsp& from);
  void MergeFrom(const SSN2GPullMsgInfoRsp& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SSN2GPullMsgInfoRsp* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "pb.SSN2GPullMsgInfoRsp";
  }
  protected:
  explicit SSN2GPullMsgInfoRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_game_5fnode_5fmsg_2eproto);
    return ::descriptor_table_game_5fnode_5fmsg_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  typedef SSN2GPullMsgInfoRsp_RetCode RetCode;
  static constexpr RetCode RET_SUCC =
    SSN2GPullMsgInfoRsp_RetCode_RET_SUCC;
  static constexpr RetCode RET_FAILED =
    SSN2GPullMsgInfoRsp_RetCode_RET_FAILED;
  static constexpr RetCode RET_ROOM_NOT_EXIST =
    SSN2GPullMsgInfoRsp_RetCode_RET_ROOM_NOT_EXIST;
  static constexpr RetCode RET_SERVEICE_NOT_AVAILBLE =
    SSN2GPullMsgInfoRsp_RetCode_RET_SERVEICE_NOT_AVAILBLE;
  static inline bool RetCode_IsValid(int value) {
    return SSN2GPullMsgInfoRsp_RetCode_IsValid(value);
  }
  static constexpr RetCode RetCode_MIN =
    SSN2GPullMsgInfoRsp_RetCode_RetCode_MIN;
  static constexpr RetCode RetCode_MAX =
    SSN2GPullMsgInfoRsp_RetCode_RetCode_MAX;
  static constexpr int RetCode_ARRAYSIZE =
    SSN2GPullMsgInfoRsp_RetCode_RetCode_ARRAYSIZE;
  static inline const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor*
  RetCode_descriptor() {
    return SSN2GPullMsgInfoRsp_RetCode_descriptor();
  }
  template<typename T>
  static inline const std::string& RetCode_Name(T enum_t_value) {
    static_assert(::std::is_same<T, RetCode>::value ||
      ::std::is_integral<T>::value,
      "Incorrect type passed to function RetCode_Name.");
    return SSN2GPullMsgInfoRsp_RetCode_Name(enum_t_value);
  }
  static inline bool RetCode_Parse(::PROTOBUF_NAMESPACE_ID::ConstStringParam name,
      RetCode* value) {
    return SSN2GPullMsgInfoRsp_RetCode_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  enum : int {
    kUserlistsFieldNumber = 4,
    kRoomMsgFieldNumber = 3,
    kRetcodeFieldNumber = 1,
    kAccountidFieldNumber = 2,
  };
  // repeated .pb.InRoomUserInfo userlists = 4;
  int userlists_size() const;
  private:
  int _internal_userlists_size() const;
  public:
  void clear_userlists();
  ::pb::InRoomUserInfo* mutable_userlists(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::pb::InRoomUserInfo >*
      mutable_userlists();
  private:
  const ::pb::InRoomUserInfo& _internal_userlists(int index) const;
  ::pb::InRoomUserInfo* _internal_add_userlists();
  public:
  const ::pb::InRoomUserInfo& userlists(int index) const;
  ::pb::InRoomUserInfo* add_userlists();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::pb::InRoomUserInfo >&
      userlists() const;

  // .pb.RoomInfoMsg roomMsg = 3;
  bool has_roommsg() const;
  private:
  bool _internal_has_roommsg() const;
  public:
  void clear_roommsg();
  const ::pb::RoomInfoMsg& roommsg() const;
  ::pb::RoomInfoMsg* release_roommsg();
  ::pb::RoomInfoMsg* mutable_roommsg();
  void set_allocated_roommsg(::pb::RoomInfoMsg* roommsg);
  private:
  const ::pb::RoomInfoMsg& _internal_roommsg() const;
  ::pb::RoomInfoMsg* _internal_mutable_roommsg();
  public:
  void unsafe_arena_set_allocated_roommsg(
      ::pb::RoomInfoMsg* roommsg);
  ::pb::RoomInfoMsg* unsafe_arena_release_roommsg();

  // .pb.SSN2GPullMsgInfoRsp.RetCode retcode = 1;
  void clear_retcode();
  ::pb::SSN2GPullMsgInfoRsp_RetCode retcode() const;
  void set_retcode(::pb::SSN2GPullMsgInfoRsp_RetCode value);
  private:
  ::pb::SSN2GPullMsgInfoRsp_RetCode _internal_retcode() const;
  void _internal_set_retcode(::pb::SSN2GPullMsgInfoRsp_RetCode value);
  public:

  // uint32 accountid = 2;
  void clear_accountid();
  ::PROTOBUF_NAMESPACE_ID::uint32 accountid() const;
  void set_accountid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_accountid() const;
  void _internal_set_accountid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:pb.SSN2GPullMsgInfoRsp)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::pb::InRoomUserInfo > userlists_;
  ::pb::RoomInfoMsg* roommsg_;
  int retcode_;
  ::PROTOBUF_NAMESPACE_ID::uint32 accountid_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_game_5fnode_5fmsg_2eproto;
};
// -------------------------------------------------------------------

class BattleServerMsg PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:pb.BattleServerMsg) */ {
 public:
  inline BattleServerMsg() : BattleServerMsg(nullptr) {}
  virtual ~BattleServerMsg();

  BattleServerMsg(const BattleServerMsg& from);
  BattleServerMsg(BattleServerMsg&& from) noexcept
    : BattleServerMsg() {
    *this = ::std::move(from);
  }

  inline BattleServerMsg& operator=(const BattleServerMsg& from) {
    CopyFrom(from);
    return *this;
  }
  inline BattleServerMsg& operator=(BattleServerMsg&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const BattleServerMsg& default_instance();

  static inline const BattleServerMsg* internal_default_instance() {
    return reinterpret_cast<const BattleServerMsg*>(
               &_BattleServerMsg_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(BattleServerMsg& a, BattleServerMsg& b) {
    a.Swap(&b);
  }
  inline void Swap(BattleServerMsg* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(BattleServerMsg* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline BattleServerMsg* New() const final {
    return CreateMaybeMessage<BattleServerMsg>(nullptr);
  }

  BattleServerMsg* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<BattleServerMsg>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const BattleServerMsg& from);
  void MergeFrom(const BattleServerMsg& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(BattleServerMsg* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "pb.BattleServerMsg";
  }
  protected:
  explicit BattleServerMsg(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_game_5fnode_5fmsg_2eproto);
    return ::descriptor_table_game_5fnode_5fmsg_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kAddrFieldNumber = 1,
    kTokenFieldNumber = 3,
    kPortFieldNumber = 2,
  };
  // string addr = 1;
  void clear_addr();
  const std::string& addr() const;
  void set_addr(const std::string& value);
  void set_addr(std::string&& value);
  void set_addr(const char* value);
  void set_addr(const char* value, size_t size);
  std::string* mutable_addr();
  std::string* release_addr();
  void set_allocated_addr(std::string* addr);
  private:
  const std::string& _internal_addr() const;
  void _internal_set_addr(const std::string& value);
  std::string* _internal_mutable_addr();
  public:

  // string token = 3;
  void clear_token();
  const std::string& token() const;
  void set_token(const std::string& value);
  void set_token(std::string&& value);
  void set_token(const char* value);
  void set_token(const char* value, size_t size);
  std::string* mutable_token();
  std::string* release_token();
  void set_allocated_token(std::string* token);
  private:
  const std::string& _internal_token() const;
  void _internal_set_token(const std::string& value);
  std::string* _internal_mutable_token();
  public:

  // uint32 port = 2;
  void clear_port();
  ::PROTOBUF_NAMESPACE_ID::uint32 port() const;
  void set_port(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_port() const;
  void _internal_set_port(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:pb.BattleServerMsg)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr addr_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr token_;
  ::PROTOBUF_NAMESPACE_ID::uint32 port_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_game_5fnode_5fmsg_2eproto;
};
// -------------------------------------------------------------------

class SSN2GPullBattleMsgInfoRsp PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:pb.SSN2GPullBattleMsgInfoRsp) */ {
 public:
  inline SSN2GPullBattleMsgInfoRsp() : SSN2GPullBattleMsgInfoRsp(nullptr) {}
  virtual ~SSN2GPullBattleMsgInfoRsp();

  SSN2GPullBattleMsgInfoRsp(const SSN2GPullBattleMsgInfoRsp& from);
  SSN2GPullBattleMsgInfoRsp(SSN2GPullBattleMsgInfoRsp&& from) noexcept
    : SSN2GPullBattleMsgInfoRsp() {
    *this = ::std::move(from);
  }

  inline SSN2GPullBattleMsgInfoRsp& operator=(const SSN2GPullBattleMsgInfoRsp& from) {
    CopyFrom(from);
    return *this;
  }
  inline SSN2GPullBattleMsgInfoRsp& operator=(SSN2GPullBattleMsgInfoRsp&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const SSN2GPullBattleMsgInfoRsp& default_instance();

  static inline const SSN2GPullBattleMsgInfoRsp* internal_default_instance() {
    return reinterpret_cast<const SSN2GPullBattleMsgInfoRsp*>(
               &_SSN2GPullBattleMsgInfoRsp_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(SSN2GPullBattleMsgInfoRsp& a, SSN2GPullBattleMsgInfoRsp& b) {
    a.Swap(&b);
  }
  inline void Swap(SSN2GPullBattleMsgInfoRsp* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SSN2GPullBattleMsgInfoRsp* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline SSN2GPullBattleMsgInfoRsp* New() const final {
    return CreateMaybeMessage<SSN2GPullBattleMsgInfoRsp>(nullptr);
  }

  SSN2GPullBattleMsgInfoRsp* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<SSN2GPullBattleMsgInfoRsp>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const SSN2GPullBattleMsgInfoRsp& from);
  void MergeFrom(const SSN2GPullBattleMsgInfoRsp& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SSN2GPullBattleMsgInfoRsp* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "pb.SSN2GPullBattleMsgInfoRsp";
  }
  protected:
  explicit SSN2GPullBattleMsgInfoRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_game_5fnode_5fmsg_2eproto);
    return ::descriptor_table_game_5fnode_5fmsg_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  typedef SSN2GPullBattleMsgInfoRsp_RetCode RetCode;
  static constexpr RetCode RET_SUCC =
    SSN2GPullBattleMsgInfoRsp_RetCode_RET_SUCC;
  static constexpr RetCode RET_FAILED =
    SSN2GPullBattleMsgInfoRsp_RetCode_RET_FAILED;
  static constexpr RetCode RET_ROOM_NOT_EXIST =
    SSN2GPullBattleMsgInfoRsp_RetCode_RET_ROOM_NOT_EXIST;
  static constexpr RetCode RET_SERVEICE_NOT_AVAILBLE =
    SSN2GPullBattleMsgInfoRsp_RetCode_RET_SERVEICE_NOT_AVAILBLE;
  static inline bool RetCode_IsValid(int value) {
    return SSN2GPullBattleMsgInfoRsp_RetCode_IsValid(value);
  }
  static constexpr RetCode RetCode_MIN =
    SSN2GPullBattleMsgInfoRsp_RetCode_RetCode_MIN;
  static constexpr RetCode RetCode_MAX =
    SSN2GPullBattleMsgInfoRsp_RetCode_RetCode_MAX;
  static constexpr int RetCode_ARRAYSIZE =
    SSN2GPullBattleMsgInfoRsp_RetCode_RetCode_ARRAYSIZE;
  static inline const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor*
  RetCode_descriptor() {
    return SSN2GPullBattleMsgInfoRsp_RetCode_descriptor();
  }
  template<typename T>
  static inline const std::string& RetCode_Name(T enum_t_value) {
    static_assert(::std::is_same<T, RetCode>::value ||
      ::std::is_integral<T>::value,
      "Incorrect type passed to function RetCode_Name.");
    return SSN2GPullBattleMsgInfoRsp_RetCode_Name(enum_t_value);
  }
  static inline bool RetCode_Parse(::PROTOBUF_NAMESPACE_ID::ConstStringParam name,
      RetCode* value) {
    return SSN2GPullBattleMsgInfoRsp_RetCode_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  enum : int {
    kBattleServerMsgFieldNumber = 3,
    kAccountidFieldNumber = 2,
    kRetcodeFieldNumber = 1,
  };
  // .pb.BattleServerMsg battleServerMsg = 3;
  bool has_battleservermsg() const;
  private:
  bool _internal_has_battleservermsg() const;
  public:
  void clear_battleservermsg();
  const ::pb::BattleServerMsg& battleservermsg() const;
  ::pb::BattleServerMsg* release_battleservermsg();
  ::pb::BattleServerMsg* mutable_battleservermsg();
  void set_allocated_battleservermsg(::pb::BattleServerMsg* battleservermsg);
  private:
  const ::pb::BattleServerMsg& _internal_battleservermsg() const;
  ::pb::BattleServerMsg* _internal_mutable_battleservermsg();
  public:
  void unsafe_arena_set_allocated_battleservermsg(
      ::pb::BattleServerMsg* battleservermsg);
  ::pb::BattleServerMsg* unsafe_arena_release_battleservermsg();

  // uint64 accountid = 2;
  void clear_accountid();
  ::PROTOBUF_NAMESPACE_ID::uint64 accountid() const;
  void set_accountid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_accountid() const;
  void _internal_set_accountid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // .pb.SSN2GPullBattleMsgInfoRsp.RetCode retcode = 1;
  void clear_retcode();
  ::pb::SSN2GPullBattleMsgInfoRsp_RetCode retcode() const;
  void set_retcode(::pb::SSN2GPullBattleMsgInfoRsp_RetCode value);
  private:
  ::pb::SSN2GPullBattleMsgInfoRsp_RetCode _internal_retcode() const;
  void _internal_set_retcode(::pb::SSN2GPullBattleMsgInfoRsp_RetCode value);
  public:

  // @@protoc_insertion_point(class_scope:pb.SSN2GPullBattleMsgInfoRsp)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::pb::BattleServerMsg* battleservermsg_;
  ::PROTOBUF_NAMESPACE_ID::uint64 accountid_;
  int retcode_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_game_5fnode_5fmsg_2eproto;
};
// -------------------------------------------------------------------

class SSG2NCreateRoomReq PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:pb.SSG2NCreateRoomReq) */ {
 public:
  inline SSG2NCreateRoomReq() : SSG2NCreateRoomReq(nullptr) {}
  virtual ~SSG2NCreateRoomReq();

  SSG2NCreateRoomReq(const SSG2NCreateRoomReq& from);
  SSG2NCreateRoomReq(SSG2NCreateRoomReq&& from) noexcept
    : SSG2NCreateRoomReq() {
    *this = ::std::move(from);
  }

  inline SSG2NCreateRoomReq& operator=(const SSG2NCreateRoomReq& from) {
    CopyFrom(from);
    return *this;
  }
  inline SSG2NCreateRoomReq& operator=(SSG2NCreateRoomReq&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const SSG2NCreateRoomReq& default_instance();

  static inline const SSG2NCreateRoomReq* internal_default_instance() {
    return reinterpret_cast<const SSG2NCreateRoomReq*>(
               &_SSG2NCreateRoomReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(SSG2NCreateRoomReq& a, SSG2NCreateRoomReq& b) {
    a.Swap(&b);
  }
  inline void Swap(SSG2NCreateRoomReq* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SSG2NCreateRoomReq* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline SSG2NCreateRoomReq* New() const final {
    return CreateMaybeMessage<SSG2NCreateRoomReq>(nullptr);
  }

  SSG2NCreateRoomReq* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<SSG2NCreateRoomReq>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const SSG2NCreateRoomReq& from);
  void MergeFrom(const SSG2NCreateRoomReq& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SSG2NCreateRoomReq* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "pb.SSG2NCreateRoomReq";
  }
  protected:
  explicit SSG2NCreateRoomReq(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_game_5fnode_5fmsg_2eproto);
    return ::descriptor_table_game_5fnode_5fmsg_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kReqFieldNumber = 2,
    kAccountidFieldNumber = 1,
  };
  // .pb.TryCreateRoomCsReq req = 2;
  bool has_req() const;
  private:
  bool _internal_has_req() const;
  public:
  void clear_req();
  const ::pb::TryCreateRoomCsReq& req() const;
  ::pb::TryCreateRoomCsReq* release_req();
  ::pb::TryCreateRoomCsReq* mutable_req();
  void set_allocated_req(::pb::TryCreateRoomCsReq* req);
  private:
  const ::pb::TryCreateRoomCsReq& _internal_req() const;
  ::pb::TryCreateRoomCsReq* _internal_mutable_req();
  public:
  void unsafe_arena_set_allocated_req(
      ::pb::TryCreateRoomCsReq* req);
  ::pb::TryCreateRoomCsReq* unsafe_arena_release_req();

  // uint64 accountid = 1;
  void clear_accountid();
  ::PROTOBUF_NAMESPACE_ID::uint64 accountid() const;
  void set_accountid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_accountid() const;
  void _internal_set_accountid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:pb.SSG2NCreateRoomReq)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::pb::TryCreateRoomCsReq* req_;
  ::PROTOBUF_NAMESPACE_ID::uint64 accountid_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_game_5fnode_5fmsg_2eproto;
};
// -------------------------------------------------------------------

class SSN2GCreateRoomRsp PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:pb.SSN2GCreateRoomRsp) */ {
 public:
  inline SSN2GCreateRoomRsp() : SSN2GCreateRoomRsp(nullptr) {}
  virtual ~SSN2GCreateRoomRsp();

  SSN2GCreateRoomRsp(const SSN2GCreateRoomRsp& from);
  SSN2GCreateRoomRsp(SSN2GCreateRoomRsp&& from) noexcept
    : SSN2GCreateRoomRsp() {
    *this = ::std::move(from);
  }

  inline SSN2GCreateRoomRsp& operator=(const SSN2GCreateRoomRsp& from) {
    CopyFrom(from);
    return *this;
  }
  inline SSN2GCreateRoomRsp& operator=(SSN2GCreateRoomRsp&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const SSN2GCreateRoomRsp& default_instance();

  static inline const SSN2GCreateRoomRsp* internal_default_instance() {
    return reinterpret_cast<const SSN2GCreateRoomRsp*>(
               &_SSN2GCreateRoomRsp_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(SSN2GCreateRoomRsp& a, SSN2GCreateRoomRsp& b) {
    a.Swap(&b);
  }
  inline void Swap(SSN2GCreateRoomRsp* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SSN2GCreateRoomRsp* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline SSN2GCreateRoomRsp* New() const final {
    return CreateMaybeMessage<SSN2GCreateRoomRsp>(nullptr);
  }

  SSN2GCreateRoomRsp* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<SSN2GCreateRoomRsp>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const SSN2GCreateRoomRsp& from);
  void MergeFrom(const SSN2GCreateRoomRsp& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SSN2GCreateRoomRsp* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "pb.SSN2GCreateRoomRsp";
  }
  protected:
  explicit SSN2GCreateRoomRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_game_5fnode_5fmsg_2eproto);
    return ::descriptor_table_game_5fnode_5fmsg_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kRspFieldNumber = 2,
    kAccountidFieldNumber = 1,
  };
  // .pb.TryCreateRoomScRsp rsp = 2;
  bool has_rsp() const;
  private:
  bool _internal_has_rsp() const;
  public:
  void clear_rsp();
  const ::pb::TryCreateRoomScRsp& rsp() const;
  ::pb::TryCreateRoomScRsp* release_rsp();
  ::pb::TryCreateRoomScRsp* mutable_rsp();
  void set_allocated_rsp(::pb::TryCreateRoomScRsp* rsp);
  private:
  const ::pb::TryCreateRoomScRsp& _internal_rsp() const;
  ::pb::TryCreateRoomScRsp* _internal_mutable_rsp();
  public:
  void unsafe_arena_set_allocated_rsp(
      ::pb::TryCreateRoomScRsp* rsp);
  ::pb::TryCreateRoomScRsp* unsafe_arena_release_rsp();

  // uint64 accountid = 1;
  void clear_accountid();
  ::PROTOBUF_NAMESPACE_ID::uint64 accountid() const;
  void set_accountid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_accountid() const;
  void _internal_set_accountid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:pb.SSN2GCreateRoomRsp)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::pb::TryCreateRoomScRsp* rsp_;
  ::PROTOBUF_NAMESPACE_ID::uint64 accountid_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_game_5fnode_5fmsg_2eproto;
};
// -------------------------------------------------------------------

class SSG2NEnterRoomReq PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:pb.SSG2NEnterRoomReq) */ {
 public:
  inline SSG2NEnterRoomReq() : SSG2NEnterRoomReq(nullptr) {}
  virtual ~SSG2NEnterRoomReq();

  SSG2NEnterRoomReq(const SSG2NEnterRoomReq& from);
  SSG2NEnterRoomReq(SSG2NEnterRoomReq&& from) noexcept
    : SSG2NEnterRoomReq() {
    *this = ::std::move(from);
  }

  inline SSG2NEnterRoomReq& operator=(const SSG2NEnterRoomReq& from) {
    CopyFrom(from);
    return *this;
  }
  inline SSG2NEnterRoomReq& operator=(SSG2NEnterRoomReq&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const SSG2NEnterRoomReq& default_instance();

  static inline const SSG2NEnterRoomReq* internal_default_instance() {
    return reinterpret_cast<const SSG2NEnterRoomReq*>(
               &_SSG2NEnterRoomReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  friend void swap(SSG2NEnterRoomReq& a, SSG2NEnterRoomReq& b) {
    a.Swap(&b);
  }
  inline void Swap(SSG2NEnterRoomReq* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SSG2NEnterRoomReq* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline SSG2NEnterRoomReq* New() const final {
    return CreateMaybeMessage<SSG2NEnterRoomReq>(nullptr);
  }

  SSG2NEnterRoomReq* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<SSG2NEnterRoomReq>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const SSG2NEnterRoomReq& from);
  void MergeFrom(const SSG2NEnterRoomReq& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SSG2NEnterRoomReq* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "pb.SSG2NEnterRoomReq";
  }
  protected:
  explicit SSG2NEnterRoomReq(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_game_5fnode_5fmsg_2eproto);
    return ::descriptor_table_game_5fnode_5fmsg_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kReqFieldNumber = 3,
    kAccountidFieldNumber = 1,
    kRoomIDFieldNumber = 2,
  };
  // .pb.TryEnterRoomCsReq req = 3;
  bool has_req() const;
  private:
  bool _internal_has_req() const;
  public:
  void clear_req();
  const ::pb::TryEnterRoomCsReq& req() const;
  ::pb::TryEnterRoomCsReq* release_req();
  ::pb::TryEnterRoomCsReq* mutable_req();
  void set_allocated_req(::pb::TryEnterRoomCsReq* req);
  private:
  const ::pb::TryEnterRoomCsReq& _internal_req() const;
  ::pb::TryEnterRoomCsReq* _internal_mutable_req();
  public:
  void unsafe_arena_set_allocated_req(
      ::pb::TryEnterRoomCsReq* req);
  ::pb::TryEnterRoomCsReq* unsafe_arena_release_req();

  // uint64 accountid = 1;
  void clear_accountid();
  ::PROTOBUF_NAMESPACE_ID::uint64 accountid() const;
  void set_accountid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_accountid() const;
  void _internal_set_accountid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // uint64 RoomID = 2;
  void clear_roomid();
  ::PROTOBUF_NAMESPACE_ID::uint64 roomid() const;
  void set_roomid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_roomid() const;
  void _internal_set_roomid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:pb.SSG2NEnterRoomReq)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::pb::TryEnterRoomCsReq* req_;
  ::PROTOBUF_NAMESPACE_ID::uint64 accountid_;
  ::PROTOBUF_NAMESPACE_ID::uint64 roomid_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_game_5fnode_5fmsg_2eproto;
};
// -------------------------------------------------------------------

class SSN2GEnterRoomRsp PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:pb.SSN2GEnterRoomRsp) */ {
 public:
  inline SSN2GEnterRoomRsp() : SSN2GEnterRoomRsp(nullptr) {}
  virtual ~SSN2GEnterRoomRsp();

  SSN2GEnterRoomRsp(const SSN2GEnterRoomRsp& from);
  SSN2GEnterRoomRsp(SSN2GEnterRoomRsp&& from) noexcept
    : SSN2GEnterRoomRsp() {
    *this = ::std::move(from);
  }

  inline SSN2GEnterRoomRsp& operator=(const SSN2GEnterRoomRsp& from) {
    CopyFrom(from);
    return *this;
  }
  inline SSN2GEnterRoomRsp& operator=(SSN2GEnterRoomRsp&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const SSN2GEnterRoomRsp& default_instance();

  static inline const SSN2GEnterRoomRsp* internal_default_instance() {
    return reinterpret_cast<const SSN2GEnterRoomRsp*>(
               &_SSN2GEnterRoomRsp_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  friend void swap(SSN2GEnterRoomRsp& a, SSN2GEnterRoomRsp& b) {
    a.Swap(&b);
  }
  inline void Swap(SSN2GEnterRoomRsp* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SSN2GEnterRoomRsp* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline SSN2GEnterRoomRsp* New() const final {
    return CreateMaybeMessage<SSN2GEnterRoomRsp>(nullptr);
  }

  SSN2GEnterRoomRsp* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<SSN2GEnterRoomRsp>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const SSN2GEnterRoomRsp& from);
  void MergeFrom(const SSN2GEnterRoomRsp& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SSN2GEnterRoomRsp* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "pb.SSN2GEnterRoomRsp";
  }
  protected:
  explicit SSN2GEnterRoomRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_game_5fnode_5fmsg_2eproto);
    return ::descriptor_table_game_5fnode_5fmsg_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kRspFieldNumber = 2,
    kAccountidFieldNumber = 1,
  };
  // .pb.TryEnterRoomScRsp rsp = 2;
  bool has_rsp() const;
  private:
  bool _internal_has_rsp() const;
  public:
  void clear_rsp();
  const ::pb::TryEnterRoomScRsp& rsp() const;
  ::pb::TryEnterRoomScRsp* release_rsp();
  ::pb::TryEnterRoomScRsp* mutable_rsp();
  void set_allocated_rsp(::pb::TryEnterRoomScRsp* rsp);
  private:
  const ::pb::TryEnterRoomScRsp& _internal_rsp() const;
  ::pb::TryEnterRoomScRsp* _internal_mutable_rsp();
  public:
  void unsafe_arena_set_allocated_rsp(
      ::pb::TryEnterRoomScRsp* rsp);
  ::pb::TryEnterRoomScRsp* unsafe_arena_release_rsp();

  // uint64 accountid = 1;
  void clear_accountid();
  ::PROTOBUF_NAMESPACE_ID::uint64 accountid() const;
  void set_accountid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_accountid() const;
  void _internal_set_accountid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:pb.SSN2GEnterRoomRsp)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::pb::TryEnterRoomScRsp* rsp_;
  ::PROTOBUF_NAMESPACE_ID::uint64 accountid_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_game_5fnode_5fmsg_2eproto;
};
// -------------------------------------------------------------------

class SSG2NLeaveRoomReq PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:pb.SSG2NLeaveRoomReq) */ {
 public:
  inline SSG2NLeaveRoomReq() : SSG2NLeaveRoomReq(nullptr) {}
  virtual ~SSG2NLeaveRoomReq();

  SSG2NLeaveRoomReq(const SSG2NLeaveRoomReq& from);
  SSG2NLeaveRoomReq(SSG2NLeaveRoomReq&& from) noexcept
    : SSG2NLeaveRoomReq() {
    *this = ::std::move(from);
  }

  inline SSG2NLeaveRoomReq& operator=(const SSG2NLeaveRoomReq& from) {
    CopyFrom(from);
    return *this;
  }
  inline SSG2NLeaveRoomReq& operator=(SSG2NLeaveRoomReq&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const SSG2NLeaveRoomReq& default_instance();

  static inline const SSG2NLeaveRoomReq* internal_default_instance() {
    return reinterpret_cast<const SSG2NLeaveRoomReq*>(
               &_SSG2NLeaveRoomReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  friend void swap(SSG2NLeaveRoomReq& a, SSG2NLeaveRoomReq& b) {
    a.Swap(&b);
  }
  inline void Swap(SSG2NLeaveRoomReq* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SSG2NLeaveRoomReq* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline SSG2NLeaveRoomReq* New() const final {
    return CreateMaybeMessage<SSG2NLeaveRoomReq>(nullptr);
  }

  SSG2NLeaveRoomReq* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<SSG2NLeaveRoomReq>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const SSG2NLeaveRoomReq& from);
  void MergeFrom(const SSG2NLeaveRoomReq& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SSG2NLeaveRoomReq* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "pb.SSG2NLeaveRoomReq";
  }
  protected:
  explicit SSG2NLeaveRoomReq(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_game_5fnode_5fmsg_2eproto);
    return ::descriptor_table_game_5fnode_5fmsg_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kReqFieldNumber = 3,
    kAccountidFieldNumber = 1,
    kRoomIDFieldNumber = 2,
  };
  // .pb.TryLeaveRoomCsReq req = 3;
  bool has_req() const;
  private:
  bool _internal_has_req() const;
  public:
  void clear_req();
  const ::pb::TryLeaveRoomCsReq& req() const;
  ::pb::TryLeaveRoomCsReq* release_req();
  ::pb::TryLeaveRoomCsReq* mutable_req();
  void set_allocated_req(::pb::TryLeaveRoomCsReq* req);
  private:
  const ::pb::TryLeaveRoomCsReq& _internal_req() const;
  ::pb::TryLeaveRoomCsReq* _internal_mutable_req();
  public:
  void unsafe_arena_set_allocated_req(
      ::pb::TryLeaveRoomCsReq* req);
  ::pb::TryLeaveRoomCsReq* unsafe_arena_release_req();

  // uint64 accountid = 1;
  void clear_accountid();
  ::PROTOBUF_NAMESPACE_ID::uint64 accountid() const;
  void set_accountid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_accountid() const;
  void _internal_set_accountid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // uint64 RoomID = 2;
  void clear_roomid();
  ::PROTOBUF_NAMESPACE_ID::uint64 roomid() const;
  void set_roomid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_roomid() const;
  void _internal_set_roomid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:pb.SSG2NLeaveRoomReq)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::pb::TryLeaveRoomCsReq* req_;
  ::PROTOBUF_NAMESPACE_ID::uint64 accountid_;
  ::PROTOBUF_NAMESPACE_ID::uint64 roomid_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_game_5fnode_5fmsg_2eproto;
};
// -------------------------------------------------------------------

class SSN2GLeaveRoomRsp PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:pb.SSN2GLeaveRoomRsp) */ {
 public:
  inline SSN2GLeaveRoomRsp() : SSN2GLeaveRoomRsp(nullptr) {}
  virtual ~SSN2GLeaveRoomRsp();

  SSN2GLeaveRoomRsp(const SSN2GLeaveRoomRsp& from);
  SSN2GLeaveRoomRsp(SSN2GLeaveRoomRsp&& from) noexcept
    : SSN2GLeaveRoomRsp() {
    *this = ::std::move(from);
  }

  inline SSN2GLeaveRoomRsp& operator=(const SSN2GLeaveRoomRsp& from) {
    CopyFrom(from);
    return *this;
  }
  inline SSN2GLeaveRoomRsp& operator=(SSN2GLeaveRoomRsp&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const SSN2GLeaveRoomRsp& default_instance();

  static inline const SSN2GLeaveRoomRsp* internal_default_instance() {
    return reinterpret_cast<const SSN2GLeaveRoomRsp*>(
               &_SSN2GLeaveRoomRsp_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  friend void swap(SSN2GLeaveRoomRsp& a, SSN2GLeaveRoomRsp& b) {
    a.Swap(&b);
  }
  inline void Swap(SSN2GLeaveRoomRsp* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SSN2GLeaveRoomRsp* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline SSN2GLeaveRoomRsp* New() const final {
    return CreateMaybeMessage<SSN2GLeaveRoomRsp>(nullptr);
  }

  SSN2GLeaveRoomRsp* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<SSN2GLeaveRoomRsp>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const SSN2GLeaveRoomRsp& from);
  void MergeFrom(const SSN2GLeaveRoomRsp& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SSN2GLeaveRoomRsp* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "pb.SSN2GLeaveRoomRsp";
  }
  protected:
  explicit SSN2GLeaveRoomRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_game_5fnode_5fmsg_2eproto);
    return ::descriptor_table_game_5fnode_5fmsg_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kRspFieldNumber = 2,
    kAccountidFieldNumber = 1,
  };
  // .pb.TryLeaveRoomScRsp rsp = 2;
  bool has_rsp() const;
  private:
  bool _internal_has_rsp() const;
  public:
  void clear_rsp();
  const ::pb::TryLeaveRoomScRsp& rsp() const;
  ::pb::TryLeaveRoomScRsp* release_rsp();
  ::pb::TryLeaveRoomScRsp* mutable_rsp();
  void set_allocated_rsp(::pb::TryLeaveRoomScRsp* rsp);
  private:
  const ::pb::TryLeaveRoomScRsp& _internal_rsp() const;
  ::pb::TryLeaveRoomScRsp* _internal_mutable_rsp();
  public:
  void unsafe_arena_set_allocated_rsp(
      ::pb::TryLeaveRoomScRsp* rsp);
  ::pb::TryLeaveRoomScRsp* unsafe_arena_release_rsp();

  // uint64 accountid = 1;
  void clear_accountid();
  ::PROTOBUF_NAMESPACE_ID::uint64 accountid() const;
  void set_accountid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_accountid() const;
  void _internal_set_accountid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:pb.SSN2GLeaveRoomRsp)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::pb::TryLeaveRoomScRsp* rsp_;
  ::PROTOBUF_NAMESPACE_ID::uint64 accountid_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_game_5fnode_5fmsg_2eproto;
};
// -------------------------------------------------------------------

class SSG2NChooseLevelReq PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:pb.SSG2NChooseLevelReq) */ {
 public:
  inline SSG2NChooseLevelReq() : SSG2NChooseLevelReq(nullptr) {}
  virtual ~SSG2NChooseLevelReq();

  SSG2NChooseLevelReq(const SSG2NChooseLevelReq& from);
  SSG2NChooseLevelReq(SSG2NChooseLevelReq&& from) noexcept
    : SSG2NChooseLevelReq() {
    *this = ::std::move(from);
  }

  inline SSG2NChooseLevelReq& operator=(const SSG2NChooseLevelReq& from) {
    CopyFrom(from);
    return *this;
  }
  inline SSG2NChooseLevelReq& operator=(SSG2NChooseLevelReq&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const SSG2NChooseLevelReq& default_instance();

  static inline const SSG2NChooseLevelReq* internal_default_instance() {
    return reinterpret_cast<const SSG2NChooseLevelReq*>(
               &_SSG2NChooseLevelReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  friend void swap(SSG2NChooseLevelReq& a, SSG2NChooseLevelReq& b) {
    a.Swap(&b);
  }
  inline void Swap(SSG2NChooseLevelReq* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SSG2NChooseLevelReq* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline SSG2NChooseLevelReq* New() const final {
    return CreateMaybeMessage<SSG2NChooseLevelReq>(nullptr);
  }

  SSG2NChooseLevelReq* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<SSG2NChooseLevelReq>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const SSG2NChooseLevelReq& from);
  void MergeFrom(const SSG2NChooseLevelReq& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SSG2NChooseLevelReq* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "pb.SSG2NChooseLevelReq";
  }
  protected:
  explicit SSG2NChooseLevelReq(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_game_5fnode_5fmsg_2eproto);
    return ::descriptor_table_game_5fnode_5fmsg_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kReqFieldNumber = 3,
    kAccountidFieldNumber = 1,
    kRoomIDFieldNumber = 2,
  };
  // .pb.ChooseLevelCsReq req = 3;
  bool has_req() const;
  private:
  bool _internal_has_req() const;
  public:
  void clear_req();
  const ::pb::ChooseLevelCsReq& req() const;
  ::pb::ChooseLevelCsReq* release_req();
  ::pb::ChooseLevelCsReq* mutable_req();
  void set_allocated_req(::pb::ChooseLevelCsReq* req);
  private:
  const ::pb::ChooseLevelCsReq& _internal_req() const;
  ::pb::ChooseLevelCsReq* _internal_mutable_req();
  public:
  void unsafe_arena_set_allocated_req(
      ::pb::ChooseLevelCsReq* req);
  ::pb::ChooseLevelCsReq* unsafe_arena_release_req();

  // uint64 accountid = 1;
  void clear_accountid();
  ::PROTOBUF_NAMESPACE_ID::uint64 accountid() const;
  void set_accountid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_accountid() const;
  void _internal_set_accountid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // uint64 RoomID = 2;
  void clear_roomid();
  ::PROTOBUF_NAMESPACE_ID::uint64 roomid() const;
  void set_roomid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_roomid() const;
  void _internal_set_roomid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:pb.SSG2NChooseLevelReq)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::pb::ChooseLevelCsReq* req_;
  ::PROTOBUF_NAMESPACE_ID::uint64 accountid_;
  ::PROTOBUF_NAMESPACE_ID::uint64 roomid_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_game_5fnode_5fmsg_2eproto;
};
// -------------------------------------------------------------------

class SSN2GChooseLevelRsp PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:pb.SSN2GChooseLevelRsp) */ {
 public:
  inline SSN2GChooseLevelRsp() : SSN2GChooseLevelRsp(nullptr) {}
  virtual ~SSN2GChooseLevelRsp();

  SSN2GChooseLevelRsp(const SSN2GChooseLevelRsp& from);
  SSN2GChooseLevelRsp(SSN2GChooseLevelRsp&& from) noexcept
    : SSN2GChooseLevelRsp() {
    *this = ::std::move(from);
  }

  inline SSN2GChooseLevelRsp& operator=(const SSN2GChooseLevelRsp& from) {
    CopyFrom(from);
    return *this;
  }
  inline SSN2GChooseLevelRsp& operator=(SSN2GChooseLevelRsp&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const SSN2GChooseLevelRsp& default_instance();

  static inline const SSN2GChooseLevelRsp* internal_default_instance() {
    return reinterpret_cast<const SSN2GChooseLevelRsp*>(
               &_SSN2GChooseLevelRsp_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    11;

  friend void swap(SSN2GChooseLevelRsp& a, SSN2GChooseLevelRsp& b) {
    a.Swap(&b);
  }
  inline void Swap(SSN2GChooseLevelRsp* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SSN2GChooseLevelRsp* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline SSN2GChooseLevelRsp* New() const final {
    return CreateMaybeMessage<SSN2GChooseLevelRsp>(nullptr);
  }

  SSN2GChooseLevelRsp* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<SSN2GChooseLevelRsp>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const SSN2GChooseLevelRsp& from);
  void MergeFrom(const SSN2GChooseLevelRsp& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SSN2GChooseLevelRsp* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "pb.SSN2GChooseLevelRsp";
  }
  protected:
  explicit SSN2GChooseLevelRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_game_5fnode_5fmsg_2eproto);
    return ::descriptor_table_game_5fnode_5fmsg_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kRspFieldNumber = 2,
    kAccountidFieldNumber = 1,
  };
  // .pb.ChooseLevelScRsp rsp = 2;
  bool has_rsp() const;
  private:
  bool _internal_has_rsp() const;
  public:
  void clear_rsp();
  const ::pb::ChooseLevelScRsp& rsp() const;
  ::pb::ChooseLevelScRsp* release_rsp();
  ::pb::ChooseLevelScRsp* mutable_rsp();
  void set_allocated_rsp(::pb::ChooseLevelScRsp* rsp);
  private:
  const ::pb::ChooseLevelScRsp& _internal_rsp() const;
  ::pb::ChooseLevelScRsp* _internal_mutable_rsp();
  public:
  void unsafe_arena_set_allocated_rsp(
      ::pb::ChooseLevelScRsp* rsp);
  ::pb::ChooseLevelScRsp* unsafe_arena_release_rsp();

  // uint32 accountid = 1;
  void clear_accountid();
  ::PROTOBUF_NAMESPACE_ID::uint32 accountid() const;
  void set_accountid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_accountid() const;
  void _internal_set_accountid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:pb.SSN2GChooseLevelRsp)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::pb::ChooseLevelScRsp* rsp_;
  ::PROTOBUF_NAMESPACE_ID::uint32 accountid_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_game_5fnode_5fmsg_2eproto;
};
// -------------------------------------------------------------------

class SSG2NReadyInRoomReq PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:pb.SSG2NReadyInRoomReq) */ {
 public:
  inline SSG2NReadyInRoomReq() : SSG2NReadyInRoomReq(nullptr) {}
  virtual ~SSG2NReadyInRoomReq();

  SSG2NReadyInRoomReq(const SSG2NReadyInRoomReq& from);
  SSG2NReadyInRoomReq(SSG2NReadyInRoomReq&& from) noexcept
    : SSG2NReadyInRoomReq() {
    *this = ::std::move(from);
  }

  inline SSG2NReadyInRoomReq& operator=(const SSG2NReadyInRoomReq& from) {
    CopyFrom(from);
    return *this;
  }
  inline SSG2NReadyInRoomReq& operator=(SSG2NReadyInRoomReq&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const SSG2NReadyInRoomReq& default_instance();

  static inline const SSG2NReadyInRoomReq* internal_default_instance() {
    return reinterpret_cast<const SSG2NReadyInRoomReq*>(
               &_SSG2NReadyInRoomReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    12;

  friend void swap(SSG2NReadyInRoomReq& a, SSG2NReadyInRoomReq& b) {
    a.Swap(&b);
  }
  inline void Swap(SSG2NReadyInRoomReq* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SSG2NReadyInRoomReq* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline SSG2NReadyInRoomReq* New() const final {
    return CreateMaybeMessage<SSG2NReadyInRoomReq>(nullptr);
  }

  SSG2NReadyInRoomReq* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<SSG2NReadyInRoomReq>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const SSG2NReadyInRoomReq& from);
  void MergeFrom(const SSG2NReadyInRoomReq& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SSG2NReadyInRoomReq* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "pb.SSG2NReadyInRoomReq";
  }
  protected:
  explicit SSG2NReadyInRoomReq(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_game_5fnode_5fmsg_2eproto);
    return ::descriptor_table_game_5fnode_5fmsg_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kReqFieldNumber = 3,
    kAccountidFieldNumber = 1,
    kRoomIDFieldNumber = 2,
  };
  // .pb.ReadyInRoomCsReq req = 3;
  bool has_req() const;
  private:
  bool _internal_has_req() const;
  public:
  void clear_req();
  const ::pb::ReadyInRoomCsReq& req() const;
  ::pb::ReadyInRoomCsReq* release_req();
  ::pb::ReadyInRoomCsReq* mutable_req();
  void set_allocated_req(::pb::ReadyInRoomCsReq* req);
  private:
  const ::pb::ReadyInRoomCsReq& _internal_req() const;
  ::pb::ReadyInRoomCsReq* _internal_mutable_req();
  public:
  void unsafe_arena_set_allocated_req(
      ::pb::ReadyInRoomCsReq* req);
  ::pb::ReadyInRoomCsReq* unsafe_arena_release_req();

  // uint64 accountid = 1;
  void clear_accountid();
  ::PROTOBUF_NAMESPACE_ID::uint64 accountid() const;
  void set_accountid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_accountid() const;
  void _internal_set_accountid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // uint64 RoomID = 2;
  void clear_roomid();
  ::PROTOBUF_NAMESPACE_ID::uint64 roomid() const;
  void set_roomid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_roomid() const;
  void _internal_set_roomid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:pb.SSG2NReadyInRoomReq)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::pb::ReadyInRoomCsReq* req_;
  ::PROTOBUF_NAMESPACE_ID::uint64 accountid_;
  ::PROTOBUF_NAMESPACE_ID::uint64 roomid_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_game_5fnode_5fmsg_2eproto;
};
// -------------------------------------------------------------------

class SSN2GReadyInRoomRsp PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:pb.SSN2GReadyInRoomRsp) */ {
 public:
  inline SSN2GReadyInRoomRsp() : SSN2GReadyInRoomRsp(nullptr) {}
  virtual ~SSN2GReadyInRoomRsp();

  SSN2GReadyInRoomRsp(const SSN2GReadyInRoomRsp& from);
  SSN2GReadyInRoomRsp(SSN2GReadyInRoomRsp&& from) noexcept
    : SSN2GReadyInRoomRsp() {
    *this = ::std::move(from);
  }

  inline SSN2GReadyInRoomRsp& operator=(const SSN2GReadyInRoomRsp& from) {
    CopyFrom(from);
    return *this;
  }
  inline SSN2GReadyInRoomRsp& operator=(SSN2GReadyInRoomRsp&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const SSN2GReadyInRoomRsp& default_instance();

  static inline const SSN2GReadyInRoomRsp* internal_default_instance() {
    return reinterpret_cast<const SSN2GReadyInRoomRsp*>(
               &_SSN2GReadyInRoomRsp_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    13;

  friend void swap(SSN2GReadyInRoomRsp& a, SSN2GReadyInRoomRsp& b) {
    a.Swap(&b);
  }
  inline void Swap(SSN2GReadyInRoomRsp* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SSN2GReadyInRoomRsp* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline SSN2GReadyInRoomRsp* New() const final {
    return CreateMaybeMessage<SSN2GReadyInRoomRsp>(nullptr);
  }

  SSN2GReadyInRoomRsp* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<SSN2GReadyInRoomRsp>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const SSN2GReadyInRoomRsp& from);
  void MergeFrom(const SSN2GReadyInRoomRsp& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SSN2GReadyInRoomRsp* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "pb.SSN2GReadyInRoomRsp";
  }
  protected:
  explicit SSN2GReadyInRoomRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_game_5fnode_5fmsg_2eproto);
    return ::descriptor_table_game_5fnode_5fmsg_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kRspFieldNumber = 2,
    kAccountidFieldNumber = 1,
  };
  // .pb.ReadyInRoomScRsp rsp = 2;
  bool has_rsp() const;
  private:
  bool _internal_has_rsp() const;
  public:
  void clear_rsp();
  const ::pb::ReadyInRoomScRsp& rsp() const;
  ::pb::ReadyInRoomScRsp* release_rsp();
  ::pb::ReadyInRoomScRsp* mutable_rsp();
  void set_allocated_rsp(::pb::ReadyInRoomScRsp* rsp);
  private:
  const ::pb::ReadyInRoomScRsp& _internal_rsp() const;
  ::pb::ReadyInRoomScRsp* _internal_mutable_rsp();
  public:
  void unsafe_arena_set_allocated_rsp(
      ::pb::ReadyInRoomScRsp* rsp);
  ::pb::ReadyInRoomScRsp* unsafe_arena_release_rsp();

  // uint64 accountid = 1;
  void clear_accountid();
  ::PROTOBUF_NAMESPACE_ID::uint64 accountid() const;
  void set_accountid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_accountid() const;
  void _internal_set_accountid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:pb.SSN2GReadyInRoomRsp)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::pb::ReadyInRoomScRsp* rsp_;
  ::PROTOBUF_NAMESPACE_ID::uint64 accountid_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_game_5fnode_5fmsg_2eproto;
};
// -------------------------------------------------------------------

class SSG2NUserDisConnectRoomNotify PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:pb.SSG2NUserDisConnectRoomNotify) */ {
 public:
  inline SSG2NUserDisConnectRoomNotify() : SSG2NUserDisConnectRoomNotify(nullptr) {}
  virtual ~SSG2NUserDisConnectRoomNotify();

  SSG2NUserDisConnectRoomNotify(const SSG2NUserDisConnectRoomNotify& from);
  SSG2NUserDisConnectRoomNotify(SSG2NUserDisConnectRoomNotify&& from) noexcept
    : SSG2NUserDisConnectRoomNotify() {
    *this = ::std::move(from);
  }

  inline SSG2NUserDisConnectRoomNotify& operator=(const SSG2NUserDisConnectRoomNotify& from) {
    CopyFrom(from);
    return *this;
  }
  inline SSG2NUserDisConnectRoomNotify& operator=(SSG2NUserDisConnectRoomNotify&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const SSG2NUserDisConnectRoomNotify& default_instance();

  static inline const SSG2NUserDisConnectRoomNotify* internal_default_instance() {
    return reinterpret_cast<const SSG2NUserDisConnectRoomNotify*>(
               &_SSG2NUserDisConnectRoomNotify_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    14;

  friend void swap(SSG2NUserDisConnectRoomNotify& a, SSG2NUserDisConnectRoomNotify& b) {
    a.Swap(&b);
  }
  inline void Swap(SSG2NUserDisConnectRoomNotify* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SSG2NUserDisConnectRoomNotify* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline SSG2NUserDisConnectRoomNotify* New() const final {
    return CreateMaybeMessage<SSG2NUserDisConnectRoomNotify>(nullptr);
  }

  SSG2NUserDisConnectRoomNotify* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<SSG2NUserDisConnectRoomNotify>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const SSG2NUserDisConnectRoomNotify& from);
  void MergeFrom(const SSG2NUserDisConnectRoomNotify& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SSG2NUserDisConnectRoomNotify* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "pb.SSG2NUserDisConnectRoomNotify";
  }
  protected:
  explicit SSG2NUserDisConnectRoomNotify(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_game_5fnode_5fmsg_2eproto);
    return ::descriptor_table_game_5fnode_5fmsg_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kAccountidFieldNumber = 1,
    kRoomidFieldNumber = 2,
  };
  // uint64 accountid = 1;
  void clear_accountid();
  ::PROTOBUF_NAMESPACE_ID::uint64 accountid() const;
  void set_accountid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_accountid() const;
  void _internal_set_accountid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // uint64 roomid = 2;
  void clear_roomid();
  ::PROTOBUF_NAMESPACE_ID::uint64 roomid() const;
  void set_roomid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_roomid() const;
  void _internal_set_roomid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:pb.SSG2NUserDisConnectRoomNotify)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::uint64 accountid_;
  ::PROTOBUF_NAMESPACE_ID::uint64 roomid_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_game_5fnode_5fmsg_2eproto;
};
// -------------------------------------------------------------------

class SSN2GUserDisConnecteTimeoutNotify PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:pb.SSN2GUserDisConnecteTimeoutNotify) */ {
 public:
  inline SSN2GUserDisConnecteTimeoutNotify() : SSN2GUserDisConnecteTimeoutNotify(nullptr) {}
  virtual ~SSN2GUserDisConnecteTimeoutNotify();

  SSN2GUserDisConnecteTimeoutNotify(const SSN2GUserDisConnecteTimeoutNotify& from);
  SSN2GUserDisConnecteTimeoutNotify(SSN2GUserDisConnecteTimeoutNotify&& from) noexcept
    : SSN2GUserDisConnecteTimeoutNotify() {
    *this = ::std::move(from);
  }

  inline SSN2GUserDisConnecteTimeoutNotify& operator=(const SSN2GUserDisConnecteTimeoutNotify& from) {
    CopyFrom(from);
    return *this;
  }
  inline SSN2GUserDisConnecteTimeoutNotify& operator=(SSN2GUserDisConnecteTimeoutNotify&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const SSN2GUserDisConnecteTimeoutNotify& default_instance();

  static inline const SSN2GUserDisConnecteTimeoutNotify* internal_default_instance() {
    return reinterpret_cast<const SSN2GUserDisConnecteTimeoutNotify*>(
               &_SSN2GUserDisConnecteTimeoutNotify_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    15;

  friend void swap(SSN2GUserDisConnecteTimeoutNotify& a, SSN2GUserDisConnecteTimeoutNotify& b) {
    a.Swap(&b);
  }
  inline void Swap(SSN2GUserDisConnecteTimeoutNotify* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SSN2GUserDisConnecteTimeoutNotify* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline SSN2GUserDisConnecteTimeoutNotify* New() const final {
    return CreateMaybeMessage<SSN2GUserDisConnecteTimeoutNotify>(nullptr);
  }

  SSN2GUserDisConnecteTimeoutNotify* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<SSN2GUserDisConnecteTimeoutNotify>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const SSN2GUserDisConnecteTimeoutNotify& from);
  void MergeFrom(const SSN2GUserDisConnecteTimeoutNotify& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SSN2GUserDisConnecteTimeoutNotify* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "pb.SSN2GUserDisConnecteTimeoutNotify";
  }
  protected:
  explicit SSN2GUserDisConnecteTimeoutNotify(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_game_5fnode_5fmsg_2eproto);
    return ::descriptor_table_game_5fnode_5fmsg_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kAccountidFieldNumber = 1,
    kRoomidFieldNumber = 2,
  };
  // uint64 accountid = 1;
  void clear_accountid();
  ::PROTOBUF_NAMESPACE_ID::uint64 accountid() const;
  void set_accountid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_accountid() const;
  void _internal_set_accountid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // uint64 roomid = 2;
  void clear_roomid();
  ::PROTOBUF_NAMESPACE_ID::uint64 roomid() const;
  void set_roomid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_roomid() const;
  void _internal_set_roomid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:pb.SSN2GUserDisConnecteTimeoutNotify)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::uint64 accountid_;
  ::PROTOBUF_NAMESPACE_ID::uint64 roomid_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_game_5fnode_5fmsg_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// SSG2NPullMsgInfoReq

// uint64 roomid = 1;
inline void SSG2NPullMsgInfoReq::clear_roomid() {
  roomid_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 SSG2NPullMsgInfoReq::_internal_roomid() const {
  return roomid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 SSG2NPullMsgInfoReq::roomid() const {
  // @@protoc_insertion_point(field_get:pb.SSG2NPullMsgInfoReq.roomid)
  return _internal_roomid();
}
inline void SSG2NPullMsgInfoReq::_internal_set_roomid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  roomid_ = value;
}
inline void SSG2NPullMsgInfoReq::set_roomid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_roomid(value);
  // @@protoc_insertion_point(field_set:pb.SSG2NPullMsgInfoReq.roomid)
}

// uint32 accountid = 2;
inline void SSG2NPullMsgInfoReq::clear_accountid() {
  accountid_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 SSG2NPullMsgInfoReq::_internal_accountid() const {
  return accountid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 SSG2NPullMsgInfoReq::accountid() const {
  // @@protoc_insertion_point(field_get:pb.SSG2NPullMsgInfoReq.accountid)
  return _internal_accountid();
}
inline void SSG2NPullMsgInfoReq::_internal_set_accountid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  accountid_ = value;
}
inline void SSG2NPullMsgInfoReq::set_accountid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_accountid(value);
  // @@protoc_insertion_point(field_set:pb.SSG2NPullMsgInfoReq.accountid)
}

// -------------------------------------------------------------------

// SSN2GPullMsgInfoRsp

// .pb.SSN2GPullMsgInfoRsp.RetCode retcode = 1;
inline void SSN2GPullMsgInfoRsp::clear_retcode() {
  retcode_ = 0;
}
inline ::pb::SSN2GPullMsgInfoRsp_RetCode SSN2GPullMsgInfoRsp::_internal_retcode() const {
  return static_cast< ::pb::SSN2GPullMsgInfoRsp_RetCode >(retcode_);
}
inline ::pb::SSN2GPullMsgInfoRsp_RetCode SSN2GPullMsgInfoRsp::retcode() const {
  // @@protoc_insertion_point(field_get:pb.SSN2GPullMsgInfoRsp.retcode)
  return _internal_retcode();
}
inline void SSN2GPullMsgInfoRsp::_internal_set_retcode(::pb::SSN2GPullMsgInfoRsp_RetCode value) {
  
  retcode_ = value;
}
inline void SSN2GPullMsgInfoRsp::set_retcode(::pb::SSN2GPullMsgInfoRsp_RetCode value) {
  _internal_set_retcode(value);
  // @@protoc_insertion_point(field_set:pb.SSN2GPullMsgInfoRsp.retcode)
}

// uint32 accountid = 2;
inline void SSN2GPullMsgInfoRsp::clear_accountid() {
  accountid_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 SSN2GPullMsgInfoRsp::_internal_accountid() const {
  return accountid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 SSN2GPullMsgInfoRsp::accountid() const {
  // @@protoc_insertion_point(field_get:pb.SSN2GPullMsgInfoRsp.accountid)
  return _internal_accountid();
}
inline void SSN2GPullMsgInfoRsp::_internal_set_accountid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  accountid_ = value;
}
inline void SSN2GPullMsgInfoRsp::set_accountid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_accountid(value);
  // @@protoc_insertion_point(field_set:pb.SSN2GPullMsgInfoRsp.accountid)
}

// .pb.RoomInfoMsg roomMsg = 3;
inline bool SSN2GPullMsgInfoRsp::_internal_has_roommsg() const {
  return this != internal_default_instance() && roommsg_ != nullptr;
}
inline bool SSN2GPullMsgInfoRsp::has_roommsg() const {
  return _internal_has_roommsg();
}
inline const ::pb::RoomInfoMsg& SSN2GPullMsgInfoRsp::_internal_roommsg() const {
  const ::pb::RoomInfoMsg* p = roommsg_;
  return p != nullptr ? *p : reinterpret_cast<const ::pb::RoomInfoMsg&>(
      ::pb::_RoomInfoMsg_default_instance_);
}
inline const ::pb::RoomInfoMsg& SSN2GPullMsgInfoRsp::roommsg() const {
  // @@protoc_insertion_point(field_get:pb.SSN2GPullMsgInfoRsp.roomMsg)
  return _internal_roommsg();
}
inline void SSN2GPullMsgInfoRsp::unsafe_arena_set_allocated_roommsg(
    ::pb::RoomInfoMsg* roommsg) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(roommsg_);
  }
  roommsg_ = roommsg;
  if (roommsg) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:pb.SSN2GPullMsgInfoRsp.roomMsg)
}
inline ::pb::RoomInfoMsg* SSN2GPullMsgInfoRsp::release_roommsg() {
  
  ::pb::RoomInfoMsg* temp = roommsg_;
  roommsg_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::pb::RoomInfoMsg* SSN2GPullMsgInfoRsp::unsafe_arena_release_roommsg() {
  // @@protoc_insertion_point(field_release:pb.SSN2GPullMsgInfoRsp.roomMsg)
  
  ::pb::RoomInfoMsg* temp = roommsg_;
  roommsg_ = nullptr;
  return temp;
}
inline ::pb::RoomInfoMsg* SSN2GPullMsgInfoRsp::_internal_mutable_roommsg() {
  
  if (roommsg_ == nullptr) {
    auto* p = CreateMaybeMessage<::pb::RoomInfoMsg>(GetArena());
    roommsg_ = p;
  }
  return roommsg_;
}
inline ::pb::RoomInfoMsg* SSN2GPullMsgInfoRsp::mutable_roommsg() {
  // @@protoc_insertion_point(field_mutable:pb.SSN2GPullMsgInfoRsp.roomMsg)
  return _internal_mutable_roommsg();
}
inline void SSN2GPullMsgInfoRsp::set_allocated_roommsg(::pb::RoomInfoMsg* roommsg) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(roommsg_);
  }
  if (roommsg) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(roommsg)->GetArena();
    if (message_arena != submessage_arena) {
      roommsg = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, roommsg, submessage_arena);
    }
    
  } else {
    
  }
  roommsg_ = roommsg;
  // @@protoc_insertion_point(field_set_allocated:pb.SSN2GPullMsgInfoRsp.roomMsg)
}

// repeated .pb.InRoomUserInfo userlists = 4;
inline int SSN2GPullMsgInfoRsp::_internal_userlists_size() const {
  return userlists_.size();
}
inline int SSN2GPullMsgInfoRsp::userlists_size() const {
  return _internal_userlists_size();
}
inline ::pb::InRoomUserInfo* SSN2GPullMsgInfoRsp::mutable_userlists(int index) {
  // @@protoc_insertion_point(field_mutable:pb.SSN2GPullMsgInfoRsp.userlists)
  return userlists_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::pb::InRoomUserInfo >*
SSN2GPullMsgInfoRsp::mutable_userlists() {
  // @@protoc_insertion_point(field_mutable_list:pb.SSN2GPullMsgInfoRsp.userlists)
  return &userlists_;
}
inline const ::pb::InRoomUserInfo& SSN2GPullMsgInfoRsp::_internal_userlists(int index) const {
  return userlists_.Get(index);
}
inline const ::pb::InRoomUserInfo& SSN2GPullMsgInfoRsp::userlists(int index) const {
  // @@protoc_insertion_point(field_get:pb.SSN2GPullMsgInfoRsp.userlists)
  return _internal_userlists(index);
}
inline ::pb::InRoomUserInfo* SSN2GPullMsgInfoRsp::_internal_add_userlists() {
  return userlists_.Add();
}
inline ::pb::InRoomUserInfo* SSN2GPullMsgInfoRsp::add_userlists() {
  // @@protoc_insertion_point(field_add:pb.SSN2GPullMsgInfoRsp.userlists)
  return _internal_add_userlists();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::pb::InRoomUserInfo >&
SSN2GPullMsgInfoRsp::userlists() const {
  // @@protoc_insertion_point(field_list:pb.SSN2GPullMsgInfoRsp.userlists)
  return userlists_;
}

// -------------------------------------------------------------------

// BattleServerMsg

// string addr = 1;
inline void BattleServerMsg::clear_addr() {
  addr_.ClearToEmpty();
}
inline const std::string& BattleServerMsg::addr() const {
  // @@protoc_insertion_point(field_get:pb.BattleServerMsg.addr)
  return _internal_addr();
}
inline void BattleServerMsg::set_addr(const std::string& value) {
  _internal_set_addr(value);
  // @@protoc_insertion_point(field_set:pb.BattleServerMsg.addr)
}
inline std::string* BattleServerMsg::mutable_addr() {
  // @@protoc_insertion_point(field_mutable:pb.BattleServerMsg.addr)
  return _internal_mutable_addr();
}
inline const std::string& BattleServerMsg::_internal_addr() const {
  return addr_.Get();
}
inline void BattleServerMsg::_internal_set_addr(const std::string& value) {
  
  addr_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void BattleServerMsg::set_addr(std::string&& value) {
  
  addr_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:pb.BattleServerMsg.addr)
}
inline void BattleServerMsg::set_addr(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  addr_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:pb.BattleServerMsg.addr)
}
inline void BattleServerMsg::set_addr(const char* value,
    size_t size) {
  
  addr_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:pb.BattleServerMsg.addr)
}
inline std::string* BattleServerMsg::_internal_mutable_addr() {
  
  return addr_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* BattleServerMsg::release_addr() {
  // @@protoc_insertion_point(field_release:pb.BattleServerMsg.addr)
  return addr_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void BattleServerMsg::set_allocated_addr(std::string* addr) {
  if (addr != nullptr) {
    
  } else {
    
  }
  addr_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), addr,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:pb.BattleServerMsg.addr)
}

// uint32 port = 2;
inline void BattleServerMsg::clear_port() {
  port_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 BattleServerMsg::_internal_port() const {
  return port_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 BattleServerMsg::port() const {
  // @@protoc_insertion_point(field_get:pb.BattleServerMsg.port)
  return _internal_port();
}
inline void BattleServerMsg::_internal_set_port(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  port_ = value;
}
inline void BattleServerMsg::set_port(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_port(value);
  // @@protoc_insertion_point(field_set:pb.BattleServerMsg.port)
}

// string token = 3;
inline void BattleServerMsg::clear_token() {
  token_.ClearToEmpty();
}
inline const std::string& BattleServerMsg::token() const {
  // @@protoc_insertion_point(field_get:pb.BattleServerMsg.token)
  return _internal_token();
}
inline void BattleServerMsg::set_token(const std::string& value) {
  _internal_set_token(value);
  // @@protoc_insertion_point(field_set:pb.BattleServerMsg.token)
}
inline std::string* BattleServerMsg::mutable_token() {
  // @@protoc_insertion_point(field_mutable:pb.BattleServerMsg.token)
  return _internal_mutable_token();
}
inline const std::string& BattleServerMsg::_internal_token() const {
  return token_.Get();
}
inline void BattleServerMsg::_internal_set_token(const std::string& value) {
  
  token_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void BattleServerMsg::set_token(std::string&& value) {
  
  token_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:pb.BattleServerMsg.token)
}
inline void BattleServerMsg::set_token(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  token_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:pb.BattleServerMsg.token)
}
inline void BattleServerMsg::set_token(const char* value,
    size_t size) {
  
  token_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:pb.BattleServerMsg.token)
}
inline std::string* BattleServerMsg::_internal_mutable_token() {
  
  return token_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* BattleServerMsg::release_token() {
  // @@protoc_insertion_point(field_release:pb.BattleServerMsg.token)
  return token_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void BattleServerMsg::set_allocated_token(std::string* token) {
  if (token != nullptr) {
    
  } else {
    
  }
  token_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), token,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:pb.BattleServerMsg.token)
}

// -------------------------------------------------------------------

// SSN2GPullBattleMsgInfoRsp

// .pb.SSN2GPullBattleMsgInfoRsp.RetCode retcode = 1;
inline void SSN2GPullBattleMsgInfoRsp::clear_retcode() {
  retcode_ = 0;
}
inline ::pb::SSN2GPullBattleMsgInfoRsp_RetCode SSN2GPullBattleMsgInfoRsp::_internal_retcode() const {
  return static_cast< ::pb::SSN2GPullBattleMsgInfoRsp_RetCode >(retcode_);
}
inline ::pb::SSN2GPullBattleMsgInfoRsp_RetCode SSN2GPullBattleMsgInfoRsp::retcode() const {
  // @@protoc_insertion_point(field_get:pb.SSN2GPullBattleMsgInfoRsp.retcode)
  return _internal_retcode();
}
inline void SSN2GPullBattleMsgInfoRsp::_internal_set_retcode(::pb::SSN2GPullBattleMsgInfoRsp_RetCode value) {
  
  retcode_ = value;
}
inline void SSN2GPullBattleMsgInfoRsp::set_retcode(::pb::SSN2GPullBattleMsgInfoRsp_RetCode value) {
  _internal_set_retcode(value);
  // @@protoc_insertion_point(field_set:pb.SSN2GPullBattleMsgInfoRsp.retcode)
}

// uint64 accountid = 2;
inline void SSN2GPullBattleMsgInfoRsp::clear_accountid() {
  accountid_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 SSN2GPullBattleMsgInfoRsp::_internal_accountid() const {
  return accountid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 SSN2GPullBattleMsgInfoRsp::accountid() const {
  // @@protoc_insertion_point(field_get:pb.SSN2GPullBattleMsgInfoRsp.accountid)
  return _internal_accountid();
}
inline void SSN2GPullBattleMsgInfoRsp::_internal_set_accountid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  accountid_ = value;
}
inline void SSN2GPullBattleMsgInfoRsp::set_accountid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_accountid(value);
  // @@protoc_insertion_point(field_set:pb.SSN2GPullBattleMsgInfoRsp.accountid)
}

// .pb.BattleServerMsg battleServerMsg = 3;
inline bool SSN2GPullBattleMsgInfoRsp::_internal_has_battleservermsg() const {
  return this != internal_default_instance() && battleservermsg_ != nullptr;
}
inline bool SSN2GPullBattleMsgInfoRsp::has_battleservermsg() const {
  return _internal_has_battleservermsg();
}
inline void SSN2GPullBattleMsgInfoRsp::clear_battleservermsg() {
  if (GetArena() == nullptr && battleservermsg_ != nullptr) {
    delete battleservermsg_;
  }
  battleservermsg_ = nullptr;
}
inline const ::pb::BattleServerMsg& SSN2GPullBattleMsgInfoRsp::_internal_battleservermsg() const {
  const ::pb::BattleServerMsg* p = battleservermsg_;
  return p != nullptr ? *p : reinterpret_cast<const ::pb::BattleServerMsg&>(
      ::pb::_BattleServerMsg_default_instance_);
}
inline const ::pb::BattleServerMsg& SSN2GPullBattleMsgInfoRsp::battleservermsg() const {
  // @@protoc_insertion_point(field_get:pb.SSN2GPullBattleMsgInfoRsp.battleServerMsg)
  return _internal_battleservermsg();
}
inline void SSN2GPullBattleMsgInfoRsp::unsafe_arena_set_allocated_battleservermsg(
    ::pb::BattleServerMsg* battleservermsg) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(battleservermsg_);
  }
  battleservermsg_ = battleservermsg;
  if (battleservermsg) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:pb.SSN2GPullBattleMsgInfoRsp.battleServerMsg)
}
inline ::pb::BattleServerMsg* SSN2GPullBattleMsgInfoRsp::release_battleservermsg() {
  
  ::pb::BattleServerMsg* temp = battleservermsg_;
  battleservermsg_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::pb::BattleServerMsg* SSN2GPullBattleMsgInfoRsp::unsafe_arena_release_battleservermsg() {
  // @@protoc_insertion_point(field_release:pb.SSN2GPullBattleMsgInfoRsp.battleServerMsg)
  
  ::pb::BattleServerMsg* temp = battleservermsg_;
  battleservermsg_ = nullptr;
  return temp;
}
inline ::pb::BattleServerMsg* SSN2GPullBattleMsgInfoRsp::_internal_mutable_battleservermsg() {
  
  if (battleservermsg_ == nullptr) {
    auto* p = CreateMaybeMessage<::pb::BattleServerMsg>(GetArena());
    battleservermsg_ = p;
  }
  return battleservermsg_;
}
inline ::pb::BattleServerMsg* SSN2GPullBattleMsgInfoRsp::mutable_battleservermsg() {
  // @@protoc_insertion_point(field_mutable:pb.SSN2GPullBattleMsgInfoRsp.battleServerMsg)
  return _internal_mutable_battleservermsg();
}
inline void SSN2GPullBattleMsgInfoRsp::set_allocated_battleservermsg(::pb::BattleServerMsg* battleservermsg) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete battleservermsg_;
  }
  if (battleservermsg) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(battleservermsg);
    if (message_arena != submessage_arena) {
      battleservermsg = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, battleservermsg, submessage_arena);
    }
    
  } else {
    
  }
  battleservermsg_ = battleservermsg;
  // @@protoc_insertion_point(field_set_allocated:pb.SSN2GPullBattleMsgInfoRsp.battleServerMsg)
}

// -------------------------------------------------------------------

// SSG2NCreateRoomReq

// uint64 accountid = 1;
inline void SSG2NCreateRoomReq::clear_accountid() {
  accountid_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 SSG2NCreateRoomReq::_internal_accountid() const {
  return accountid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 SSG2NCreateRoomReq::accountid() const {
  // @@protoc_insertion_point(field_get:pb.SSG2NCreateRoomReq.accountid)
  return _internal_accountid();
}
inline void SSG2NCreateRoomReq::_internal_set_accountid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  accountid_ = value;
}
inline void SSG2NCreateRoomReq::set_accountid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_accountid(value);
  // @@protoc_insertion_point(field_set:pb.SSG2NCreateRoomReq.accountid)
}

// .pb.TryCreateRoomCsReq req = 2;
inline bool SSG2NCreateRoomReq::_internal_has_req() const {
  return this != internal_default_instance() && req_ != nullptr;
}
inline bool SSG2NCreateRoomReq::has_req() const {
  return _internal_has_req();
}
inline const ::pb::TryCreateRoomCsReq& SSG2NCreateRoomReq::_internal_req() const {
  const ::pb::TryCreateRoomCsReq* p = req_;
  return p != nullptr ? *p : reinterpret_cast<const ::pb::TryCreateRoomCsReq&>(
      ::pb::_TryCreateRoomCsReq_default_instance_);
}
inline const ::pb::TryCreateRoomCsReq& SSG2NCreateRoomReq::req() const {
  // @@protoc_insertion_point(field_get:pb.SSG2NCreateRoomReq.req)
  return _internal_req();
}
inline void SSG2NCreateRoomReq::unsafe_arena_set_allocated_req(
    ::pb::TryCreateRoomCsReq* req) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(req_);
  }
  req_ = req;
  if (req) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:pb.SSG2NCreateRoomReq.req)
}
inline ::pb::TryCreateRoomCsReq* SSG2NCreateRoomReq::release_req() {
  
  ::pb::TryCreateRoomCsReq* temp = req_;
  req_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::pb::TryCreateRoomCsReq* SSG2NCreateRoomReq::unsafe_arena_release_req() {
  // @@protoc_insertion_point(field_release:pb.SSG2NCreateRoomReq.req)
  
  ::pb::TryCreateRoomCsReq* temp = req_;
  req_ = nullptr;
  return temp;
}
inline ::pb::TryCreateRoomCsReq* SSG2NCreateRoomReq::_internal_mutable_req() {
  
  if (req_ == nullptr) {
    auto* p = CreateMaybeMessage<::pb::TryCreateRoomCsReq>(GetArena());
    req_ = p;
  }
  return req_;
}
inline ::pb::TryCreateRoomCsReq* SSG2NCreateRoomReq::mutable_req() {
  // @@protoc_insertion_point(field_mutable:pb.SSG2NCreateRoomReq.req)
  return _internal_mutable_req();
}
inline void SSG2NCreateRoomReq::set_allocated_req(::pb::TryCreateRoomCsReq* req) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(req_);
  }
  if (req) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(req)->GetArena();
    if (message_arena != submessage_arena) {
      req = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, req, submessage_arena);
    }
    
  } else {
    
  }
  req_ = req;
  // @@protoc_insertion_point(field_set_allocated:pb.SSG2NCreateRoomReq.req)
}

// -------------------------------------------------------------------

// SSN2GCreateRoomRsp

// uint64 accountid = 1;
inline void SSN2GCreateRoomRsp::clear_accountid() {
  accountid_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 SSN2GCreateRoomRsp::_internal_accountid() const {
  return accountid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 SSN2GCreateRoomRsp::accountid() const {
  // @@protoc_insertion_point(field_get:pb.SSN2GCreateRoomRsp.accountid)
  return _internal_accountid();
}
inline void SSN2GCreateRoomRsp::_internal_set_accountid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  accountid_ = value;
}
inline void SSN2GCreateRoomRsp::set_accountid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_accountid(value);
  // @@protoc_insertion_point(field_set:pb.SSN2GCreateRoomRsp.accountid)
}

// .pb.TryCreateRoomScRsp rsp = 2;
inline bool SSN2GCreateRoomRsp::_internal_has_rsp() const {
  return this != internal_default_instance() && rsp_ != nullptr;
}
inline bool SSN2GCreateRoomRsp::has_rsp() const {
  return _internal_has_rsp();
}
inline const ::pb::TryCreateRoomScRsp& SSN2GCreateRoomRsp::_internal_rsp() const {
  const ::pb::TryCreateRoomScRsp* p = rsp_;
  return p != nullptr ? *p : reinterpret_cast<const ::pb::TryCreateRoomScRsp&>(
      ::pb::_TryCreateRoomScRsp_default_instance_);
}
inline const ::pb::TryCreateRoomScRsp& SSN2GCreateRoomRsp::rsp() const {
  // @@protoc_insertion_point(field_get:pb.SSN2GCreateRoomRsp.rsp)
  return _internal_rsp();
}
inline void SSN2GCreateRoomRsp::unsafe_arena_set_allocated_rsp(
    ::pb::TryCreateRoomScRsp* rsp) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(rsp_);
  }
  rsp_ = rsp;
  if (rsp) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:pb.SSN2GCreateRoomRsp.rsp)
}
inline ::pb::TryCreateRoomScRsp* SSN2GCreateRoomRsp::release_rsp() {
  
  ::pb::TryCreateRoomScRsp* temp = rsp_;
  rsp_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::pb::TryCreateRoomScRsp* SSN2GCreateRoomRsp::unsafe_arena_release_rsp() {
  // @@protoc_insertion_point(field_release:pb.SSN2GCreateRoomRsp.rsp)
  
  ::pb::TryCreateRoomScRsp* temp = rsp_;
  rsp_ = nullptr;
  return temp;
}
inline ::pb::TryCreateRoomScRsp* SSN2GCreateRoomRsp::_internal_mutable_rsp() {
  
  if (rsp_ == nullptr) {
    auto* p = CreateMaybeMessage<::pb::TryCreateRoomScRsp>(GetArena());
    rsp_ = p;
  }
  return rsp_;
}
inline ::pb::TryCreateRoomScRsp* SSN2GCreateRoomRsp::mutable_rsp() {
  // @@protoc_insertion_point(field_mutable:pb.SSN2GCreateRoomRsp.rsp)
  return _internal_mutable_rsp();
}
inline void SSN2GCreateRoomRsp::set_allocated_rsp(::pb::TryCreateRoomScRsp* rsp) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(rsp_);
  }
  if (rsp) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(rsp)->GetArena();
    if (message_arena != submessage_arena) {
      rsp = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, rsp, submessage_arena);
    }
    
  } else {
    
  }
  rsp_ = rsp;
  // @@protoc_insertion_point(field_set_allocated:pb.SSN2GCreateRoomRsp.rsp)
}

// -------------------------------------------------------------------

// SSG2NEnterRoomReq

// uint64 accountid = 1;
inline void SSG2NEnterRoomReq::clear_accountid() {
  accountid_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 SSG2NEnterRoomReq::_internal_accountid() const {
  return accountid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 SSG2NEnterRoomReq::accountid() const {
  // @@protoc_insertion_point(field_get:pb.SSG2NEnterRoomReq.accountid)
  return _internal_accountid();
}
inline void SSG2NEnterRoomReq::_internal_set_accountid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  accountid_ = value;
}
inline void SSG2NEnterRoomReq::set_accountid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_accountid(value);
  // @@protoc_insertion_point(field_set:pb.SSG2NEnterRoomReq.accountid)
}

// uint64 RoomID = 2;
inline void SSG2NEnterRoomReq::clear_roomid() {
  roomid_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 SSG2NEnterRoomReq::_internal_roomid() const {
  return roomid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 SSG2NEnterRoomReq::roomid() const {
  // @@protoc_insertion_point(field_get:pb.SSG2NEnterRoomReq.RoomID)
  return _internal_roomid();
}
inline void SSG2NEnterRoomReq::_internal_set_roomid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  roomid_ = value;
}
inline void SSG2NEnterRoomReq::set_roomid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_roomid(value);
  // @@protoc_insertion_point(field_set:pb.SSG2NEnterRoomReq.RoomID)
}

// .pb.TryEnterRoomCsReq req = 3;
inline bool SSG2NEnterRoomReq::_internal_has_req() const {
  return this != internal_default_instance() && req_ != nullptr;
}
inline bool SSG2NEnterRoomReq::has_req() const {
  return _internal_has_req();
}
inline const ::pb::TryEnterRoomCsReq& SSG2NEnterRoomReq::_internal_req() const {
  const ::pb::TryEnterRoomCsReq* p = req_;
  return p != nullptr ? *p : reinterpret_cast<const ::pb::TryEnterRoomCsReq&>(
      ::pb::_TryEnterRoomCsReq_default_instance_);
}
inline const ::pb::TryEnterRoomCsReq& SSG2NEnterRoomReq::req() const {
  // @@protoc_insertion_point(field_get:pb.SSG2NEnterRoomReq.req)
  return _internal_req();
}
inline void SSG2NEnterRoomReq::unsafe_arena_set_allocated_req(
    ::pb::TryEnterRoomCsReq* req) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(req_);
  }
  req_ = req;
  if (req) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:pb.SSG2NEnterRoomReq.req)
}
inline ::pb::TryEnterRoomCsReq* SSG2NEnterRoomReq::release_req() {
  
  ::pb::TryEnterRoomCsReq* temp = req_;
  req_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::pb::TryEnterRoomCsReq* SSG2NEnterRoomReq::unsafe_arena_release_req() {
  // @@protoc_insertion_point(field_release:pb.SSG2NEnterRoomReq.req)
  
  ::pb::TryEnterRoomCsReq* temp = req_;
  req_ = nullptr;
  return temp;
}
inline ::pb::TryEnterRoomCsReq* SSG2NEnterRoomReq::_internal_mutable_req() {
  
  if (req_ == nullptr) {
    auto* p = CreateMaybeMessage<::pb::TryEnterRoomCsReq>(GetArena());
    req_ = p;
  }
  return req_;
}
inline ::pb::TryEnterRoomCsReq* SSG2NEnterRoomReq::mutable_req() {
  // @@protoc_insertion_point(field_mutable:pb.SSG2NEnterRoomReq.req)
  return _internal_mutable_req();
}
inline void SSG2NEnterRoomReq::set_allocated_req(::pb::TryEnterRoomCsReq* req) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(req_);
  }
  if (req) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(req)->GetArena();
    if (message_arena != submessage_arena) {
      req = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, req, submessage_arena);
    }
    
  } else {
    
  }
  req_ = req;
  // @@protoc_insertion_point(field_set_allocated:pb.SSG2NEnterRoomReq.req)
}

// -------------------------------------------------------------------

// SSN2GEnterRoomRsp

// uint64 accountid = 1;
inline void SSN2GEnterRoomRsp::clear_accountid() {
  accountid_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 SSN2GEnterRoomRsp::_internal_accountid() const {
  return accountid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 SSN2GEnterRoomRsp::accountid() const {
  // @@protoc_insertion_point(field_get:pb.SSN2GEnterRoomRsp.accountid)
  return _internal_accountid();
}
inline void SSN2GEnterRoomRsp::_internal_set_accountid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  accountid_ = value;
}
inline void SSN2GEnterRoomRsp::set_accountid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_accountid(value);
  // @@protoc_insertion_point(field_set:pb.SSN2GEnterRoomRsp.accountid)
}

// .pb.TryEnterRoomScRsp rsp = 2;
inline bool SSN2GEnterRoomRsp::_internal_has_rsp() const {
  return this != internal_default_instance() && rsp_ != nullptr;
}
inline bool SSN2GEnterRoomRsp::has_rsp() const {
  return _internal_has_rsp();
}
inline const ::pb::TryEnterRoomScRsp& SSN2GEnterRoomRsp::_internal_rsp() const {
  const ::pb::TryEnterRoomScRsp* p = rsp_;
  return p != nullptr ? *p : reinterpret_cast<const ::pb::TryEnterRoomScRsp&>(
      ::pb::_TryEnterRoomScRsp_default_instance_);
}
inline const ::pb::TryEnterRoomScRsp& SSN2GEnterRoomRsp::rsp() const {
  // @@protoc_insertion_point(field_get:pb.SSN2GEnterRoomRsp.rsp)
  return _internal_rsp();
}
inline void SSN2GEnterRoomRsp::unsafe_arena_set_allocated_rsp(
    ::pb::TryEnterRoomScRsp* rsp) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(rsp_);
  }
  rsp_ = rsp;
  if (rsp) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:pb.SSN2GEnterRoomRsp.rsp)
}
inline ::pb::TryEnterRoomScRsp* SSN2GEnterRoomRsp::release_rsp() {
  
  ::pb::TryEnterRoomScRsp* temp = rsp_;
  rsp_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::pb::TryEnterRoomScRsp* SSN2GEnterRoomRsp::unsafe_arena_release_rsp() {
  // @@protoc_insertion_point(field_release:pb.SSN2GEnterRoomRsp.rsp)
  
  ::pb::TryEnterRoomScRsp* temp = rsp_;
  rsp_ = nullptr;
  return temp;
}
inline ::pb::TryEnterRoomScRsp* SSN2GEnterRoomRsp::_internal_mutable_rsp() {
  
  if (rsp_ == nullptr) {
    auto* p = CreateMaybeMessage<::pb::TryEnterRoomScRsp>(GetArena());
    rsp_ = p;
  }
  return rsp_;
}
inline ::pb::TryEnterRoomScRsp* SSN2GEnterRoomRsp::mutable_rsp() {
  // @@protoc_insertion_point(field_mutable:pb.SSN2GEnterRoomRsp.rsp)
  return _internal_mutable_rsp();
}
inline void SSN2GEnterRoomRsp::set_allocated_rsp(::pb::TryEnterRoomScRsp* rsp) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(rsp_);
  }
  if (rsp) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(rsp)->GetArena();
    if (message_arena != submessage_arena) {
      rsp = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, rsp, submessage_arena);
    }
    
  } else {
    
  }
  rsp_ = rsp;
  // @@protoc_insertion_point(field_set_allocated:pb.SSN2GEnterRoomRsp.rsp)
}

// -------------------------------------------------------------------

// SSG2NLeaveRoomReq

// uint64 accountid = 1;
inline void SSG2NLeaveRoomReq::clear_accountid() {
  accountid_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 SSG2NLeaveRoomReq::_internal_accountid() const {
  return accountid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 SSG2NLeaveRoomReq::accountid() const {
  // @@protoc_insertion_point(field_get:pb.SSG2NLeaveRoomReq.accountid)
  return _internal_accountid();
}
inline void SSG2NLeaveRoomReq::_internal_set_accountid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  accountid_ = value;
}
inline void SSG2NLeaveRoomReq::set_accountid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_accountid(value);
  // @@protoc_insertion_point(field_set:pb.SSG2NLeaveRoomReq.accountid)
}

// uint64 RoomID = 2;
inline void SSG2NLeaveRoomReq::clear_roomid() {
  roomid_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 SSG2NLeaveRoomReq::_internal_roomid() const {
  return roomid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 SSG2NLeaveRoomReq::roomid() const {
  // @@protoc_insertion_point(field_get:pb.SSG2NLeaveRoomReq.RoomID)
  return _internal_roomid();
}
inline void SSG2NLeaveRoomReq::_internal_set_roomid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  roomid_ = value;
}
inline void SSG2NLeaveRoomReq::set_roomid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_roomid(value);
  // @@protoc_insertion_point(field_set:pb.SSG2NLeaveRoomReq.RoomID)
}

// .pb.TryLeaveRoomCsReq req = 3;
inline bool SSG2NLeaveRoomReq::_internal_has_req() const {
  return this != internal_default_instance() && req_ != nullptr;
}
inline bool SSG2NLeaveRoomReq::has_req() const {
  return _internal_has_req();
}
inline const ::pb::TryLeaveRoomCsReq& SSG2NLeaveRoomReq::_internal_req() const {
  const ::pb::TryLeaveRoomCsReq* p = req_;
  return p != nullptr ? *p : reinterpret_cast<const ::pb::TryLeaveRoomCsReq&>(
      ::pb::_TryLeaveRoomCsReq_default_instance_);
}
inline const ::pb::TryLeaveRoomCsReq& SSG2NLeaveRoomReq::req() const {
  // @@protoc_insertion_point(field_get:pb.SSG2NLeaveRoomReq.req)
  return _internal_req();
}
inline void SSG2NLeaveRoomReq::unsafe_arena_set_allocated_req(
    ::pb::TryLeaveRoomCsReq* req) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(req_);
  }
  req_ = req;
  if (req) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:pb.SSG2NLeaveRoomReq.req)
}
inline ::pb::TryLeaveRoomCsReq* SSG2NLeaveRoomReq::release_req() {
  
  ::pb::TryLeaveRoomCsReq* temp = req_;
  req_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::pb::TryLeaveRoomCsReq* SSG2NLeaveRoomReq::unsafe_arena_release_req() {
  // @@protoc_insertion_point(field_release:pb.SSG2NLeaveRoomReq.req)
  
  ::pb::TryLeaveRoomCsReq* temp = req_;
  req_ = nullptr;
  return temp;
}
inline ::pb::TryLeaveRoomCsReq* SSG2NLeaveRoomReq::_internal_mutable_req() {
  
  if (req_ == nullptr) {
    auto* p = CreateMaybeMessage<::pb::TryLeaveRoomCsReq>(GetArena());
    req_ = p;
  }
  return req_;
}
inline ::pb::TryLeaveRoomCsReq* SSG2NLeaveRoomReq::mutable_req() {
  // @@protoc_insertion_point(field_mutable:pb.SSG2NLeaveRoomReq.req)
  return _internal_mutable_req();
}
inline void SSG2NLeaveRoomReq::set_allocated_req(::pb::TryLeaveRoomCsReq* req) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(req_);
  }
  if (req) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(req)->GetArena();
    if (message_arena != submessage_arena) {
      req = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, req, submessage_arena);
    }
    
  } else {
    
  }
  req_ = req;
  // @@protoc_insertion_point(field_set_allocated:pb.SSG2NLeaveRoomReq.req)
}

// -------------------------------------------------------------------

// SSN2GLeaveRoomRsp

// uint64 accountid = 1;
inline void SSN2GLeaveRoomRsp::clear_accountid() {
  accountid_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 SSN2GLeaveRoomRsp::_internal_accountid() const {
  return accountid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 SSN2GLeaveRoomRsp::accountid() const {
  // @@protoc_insertion_point(field_get:pb.SSN2GLeaveRoomRsp.accountid)
  return _internal_accountid();
}
inline void SSN2GLeaveRoomRsp::_internal_set_accountid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  accountid_ = value;
}
inline void SSN2GLeaveRoomRsp::set_accountid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_accountid(value);
  // @@protoc_insertion_point(field_set:pb.SSN2GLeaveRoomRsp.accountid)
}

// .pb.TryLeaveRoomScRsp rsp = 2;
inline bool SSN2GLeaveRoomRsp::_internal_has_rsp() const {
  return this != internal_default_instance() && rsp_ != nullptr;
}
inline bool SSN2GLeaveRoomRsp::has_rsp() const {
  return _internal_has_rsp();
}
inline const ::pb::TryLeaveRoomScRsp& SSN2GLeaveRoomRsp::_internal_rsp() const {
  const ::pb::TryLeaveRoomScRsp* p = rsp_;
  return p != nullptr ? *p : reinterpret_cast<const ::pb::TryLeaveRoomScRsp&>(
      ::pb::_TryLeaveRoomScRsp_default_instance_);
}
inline const ::pb::TryLeaveRoomScRsp& SSN2GLeaveRoomRsp::rsp() const {
  // @@protoc_insertion_point(field_get:pb.SSN2GLeaveRoomRsp.rsp)
  return _internal_rsp();
}
inline void SSN2GLeaveRoomRsp::unsafe_arena_set_allocated_rsp(
    ::pb::TryLeaveRoomScRsp* rsp) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(rsp_);
  }
  rsp_ = rsp;
  if (rsp) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:pb.SSN2GLeaveRoomRsp.rsp)
}
inline ::pb::TryLeaveRoomScRsp* SSN2GLeaveRoomRsp::release_rsp() {
  
  ::pb::TryLeaveRoomScRsp* temp = rsp_;
  rsp_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::pb::TryLeaveRoomScRsp* SSN2GLeaveRoomRsp::unsafe_arena_release_rsp() {
  // @@protoc_insertion_point(field_release:pb.SSN2GLeaveRoomRsp.rsp)
  
  ::pb::TryLeaveRoomScRsp* temp = rsp_;
  rsp_ = nullptr;
  return temp;
}
inline ::pb::TryLeaveRoomScRsp* SSN2GLeaveRoomRsp::_internal_mutable_rsp() {
  
  if (rsp_ == nullptr) {
    auto* p = CreateMaybeMessage<::pb::TryLeaveRoomScRsp>(GetArena());
    rsp_ = p;
  }
  return rsp_;
}
inline ::pb::TryLeaveRoomScRsp* SSN2GLeaveRoomRsp::mutable_rsp() {
  // @@protoc_insertion_point(field_mutable:pb.SSN2GLeaveRoomRsp.rsp)
  return _internal_mutable_rsp();
}
inline void SSN2GLeaveRoomRsp::set_allocated_rsp(::pb::TryLeaveRoomScRsp* rsp) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(rsp_);
  }
  if (rsp) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(rsp)->GetArena();
    if (message_arena != submessage_arena) {
      rsp = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, rsp, submessage_arena);
    }
    
  } else {
    
  }
  rsp_ = rsp;
  // @@protoc_insertion_point(field_set_allocated:pb.SSN2GLeaveRoomRsp.rsp)
}

// -------------------------------------------------------------------

// SSG2NChooseLevelReq

// uint64 accountid = 1;
inline void SSG2NChooseLevelReq::clear_accountid() {
  accountid_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 SSG2NChooseLevelReq::_internal_accountid() const {
  return accountid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 SSG2NChooseLevelReq::accountid() const {
  // @@protoc_insertion_point(field_get:pb.SSG2NChooseLevelReq.accountid)
  return _internal_accountid();
}
inline void SSG2NChooseLevelReq::_internal_set_accountid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  accountid_ = value;
}
inline void SSG2NChooseLevelReq::set_accountid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_accountid(value);
  // @@protoc_insertion_point(field_set:pb.SSG2NChooseLevelReq.accountid)
}

// uint64 RoomID = 2;
inline void SSG2NChooseLevelReq::clear_roomid() {
  roomid_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 SSG2NChooseLevelReq::_internal_roomid() const {
  return roomid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 SSG2NChooseLevelReq::roomid() const {
  // @@protoc_insertion_point(field_get:pb.SSG2NChooseLevelReq.RoomID)
  return _internal_roomid();
}
inline void SSG2NChooseLevelReq::_internal_set_roomid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  roomid_ = value;
}
inline void SSG2NChooseLevelReq::set_roomid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_roomid(value);
  // @@protoc_insertion_point(field_set:pb.SSG2NChooseLevelReq.RoomID)
}

// .pb.ChooseLevelCsReq req = 3;
inline bool SSG2NChooseLevelReq::_internal_has_req() const {
  return this != internal_default_instance() && req_ != nullptr;
}
inline bool SSG2NChooseLevelReq::has_req() const {
  return _internal_has_req();
}
inline const ::pb::ChooseLevelCsReq& SSG2NChooseLevelReq::_internal_req() const {
  const ::pb::ChooseLevelCsReq* p = req_;
  return p != nullptr ? *p : reinterpret_cast<const ::pb::ChooseLevelCsReq&>(
      ::pb::_ChooseLevelCsReq_default_instance_);
}
inline const ::pb::ChooseLevelCsReq& SSG2NChooseLevelReq::req() const {
  // @@protoc_insertion_point(field_get:pb.SSG2NChooseLevelReq.req)
  return _internal_req();
}
inline void SSG2NChooseLevelReq::unsafe_arena_set_allocated_req(
    ::pb::ChooseLevelCsReq* req) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(req_);
  }
  req_ = req;
  if (req) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:pb.SSG2NChooseLevelReq.req)
}
inline ::pb::ChooseLevelCsReq* SSG2NChooseLevelReq::release_req() {
  
  ::pb::ChooseLevelCsReq* temp = req_;
  req_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::pb::ChooseLevelCsReq* SSG2NChooseLevelReq::unsafe_arena_release_req() {
  // @@protoc_insertion_point(field_release:pb.SSG2NChooseLevelReq.req)
  
  ::pb::ChooseLevelCsReq* temp = req_;
  req_ = nullptr;
  return temp;
}
inline ::pb::ChooseLevelCsReq* SSG2NChooseLevelReq::_internal_mutable_req() {
  
  if (req_ == nullptr) {
    auto* p = CreateMaybeMessage<::pb::ChooseLevelCsReq>(GetArena());
    req_ = p;
  }
  return req_;
}
inline ::pb::ChooseLevelCsReq* SSG2NChooseLevelReq::mutable_req() {
  // @@protoc_insertion_point(field_mutable:pb.SSG2NChooseLevelReq.req)
  return _internal_mutable_req();
}
inline void SSG2NChooseLevelReq::set_allocated_req(::pb::ChooseLevelCsReq* req) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(req_);
  }
  if (req) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(req)->GetArena();
    if (message_arena != submessage_arena) {
      req = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, req, submessage_arena);
    }
    
  } else {
    
  }
  req_ = req;
  // @@protoc_insertion_point(field_set_allocated:pb.SSG2NChooseLevelReq.req)
}

// -------------------------------------------------------------------

// SSN2GChooseLevelRsp

// uint32 accountid = 1;
inline void SSN2GChooseLevelRsp::clear_accountid() {
  accountid_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 SSN2GChooseLevelRsp::_internal_accountid() const {
  return accountid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 SSN2GChooseLevelRsp::accountid() const {
  // @@protoc_insertion_point(field_get:pb.SSN2GChooseLevelRsp.accountid)
  return _internal_accountid();
}
inline void SSN2GChooseLevelRsp::_internal_set_accountid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  accountid_ = value;
}
inline void SSN2GChooseLevelRsp::set_accountid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_accountid(value);
  // @@protoc_insertion_point(field_set:pb.SSN2GChooseLevelRsp.accountid)
}

// .pb.ChooseLevelScRsp rsp = 2;
inline bool SSN2GChooseLevelRsp::_internal_has_rsp() const {
  return this != internal_default_instance() && rsp_ != nullptr;
}
inline bool SSN2GChooseLevelRsp::has_rsp() const {
  return _internal_has_rsp();
}
inline const ::pb::ChooseLevelScRsp& SSN2GChooseLevelRsp::_internal_rsp() const {
  const ::pb::ChooseLevelScRsp* p = rsp_;
  return p != nullptr ? *p : reinterpret_cast<const ::pb::ChooseLevelScRsp&>(
      ::pb::_ChooseLevelScRsp_default_instance_);
}
inline const ::pb::ChooseLevelScRsp& SSN2GChooseLevelRsp::rsp() const {
  // @@protoc_insertion_point(field_get:pb.SSN2GChooseLevelRsp.rsp)
  return _internal_rsp();
}
inline void SSN2GChooseLevelRsp::unsafe_arena_set_allocated_rsp(
    ::pb::ChooseLevelScRsp* rsp) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(rsp_);
  }
  rsp_ = rsp;
  if (rsp) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:pb.SSN2GChooseLevelRsp.rsp)
}
inline ::pb::ChooseLevelScRsp* SSN2GChooseLevelRsp::release_rsp() {
  
  ::pb::ChooseLevelScRsp* temp = rsp_;
  rsp_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::pb::ChooseLevelScRsp* SSN2GChooseLevelRsp::unsafe_arena_release_rsp() {
  // @@protoc_insertion_point(field_release:pb.SSN2GChooseLevelRsp.rsp)
  
  ::pb::ChooseLevelScRsp* temp = rsp_;
  rsp_ = nullptr;
  return temp;
}
inline ::pb::ChooseLevelScRsp* SSN2GChooseLevelRsp::_internal_mutable_rsp() {
  
  if (rsp_ == nullptr) {
    auto* p = CreateMaybeMessage<::pb::ChooseLevelScRsp>(GetArena());
    rsp_ = p;
  }
  return rsp_;
}
inline ::pb::ChooseLevelScRsp* SSN2GChooseLevelRsp::mutable_rsp() {
  // @@protoc_insertion_point(field_mutable:pb.SSN2GChooseLevelRsp.rsp)
  return _internal_mutable_rsp();
}
inline void SSN2GChooseLevelRsp::set_allocated_rsp(::pb::ChooseLevelScRsp* rsp) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(rsp_);
  }
  if (rsp) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(rsp)->GetArena();
    if (message_arena != submessage_arena) {
      rsp = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, rsp, submessage_arena);
    }
    
  } else {
    
  }
  rsp_ = rsp;
  // @@protoc_insertion_point(field_set_allocated:pb.SSN2GChooseLevelRsp.rsp)
}

// -------------------------------------------------------------------

// SSG2NReadyInRoomReq

// uint64 accountid = 1;
inline void SSG2NReadyInRoomReq::clear_accountid() {
  accountid_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 SSG2NReadyInRoomReq::_internal_accountid() const {
  return accountid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 SSG2NReadyInRoomReq::accountid() const {
  // @@protoc_insertion_point(field_get:pb.SSG2NReadyInRoomReq.accountid)
  return _internal_accountid();
}
inline void SSG2NReadyInRoomReq::_internal_set_accountid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  accountid_ = value;
}
inline void SSG2NReadyInRoomReq::set_accountid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_accountid(value);
  // @@protoc_insertion_point(field_set:pb.SSG2NReadyInRoomReq.accountid)
}

// uint64 RoomID = 2;
inline void SSG2NReadyInRoomReq::clear_roomid() {
  roomid_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 SSG2NReadyInRoomReq::_internal_roomid() const {
  return roomid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 SSG2NReadyInRoomReq::roomid() const {
  // @@protoc_insertion_point(field_get:pb.SSG2NReadyInRoomReq.RoomID)
  return _internal_roomid();
}
inline void SSG2NReadyInRoomReq::_internal_set_roomid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  roomid_ = value;
}
inline void SSG2NReadyInRoomReq::set_roomid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_roomid(value);
  // @@protoc_insertion_point(field_set:pb.SSG2NReadyInRoomReq.RoomID)
}

// .pb.ReadyInRoomCsReq req = 3;
inline bool SSG2NReadyInRoomReq::_internal_has_req() const {
  return this != internal_default_instance() && req_ != nullptr;
}
inline bool SSG2NReadyInRoomReq::has_req() const {
  return _internal_has_req();
}
inline const ::pb::ReadyInRoomCsReq& SSG2NReadyInRoomReq::_internal_req() const {
  const ::pb::ReadyInRoomCsReq* p = req_;
  return p != nullptr ? *p : reinterpret_cast<const ::pb::ReadyInRoomCsReq&>(
      ::pb::_ReadyInRoomCsReq_default_instance_);
}
inline const ::pb::ReadyInRoomCsReq& SSG2NReadyInRoomReq::req() const {
  // @@protoc_insertion_point(field_get:pb.SSG2NReadyInRoomReq.req)
  return _internal_req();
}
inline void SSG2NReadyInRoomReq::unsafe_arena_set_allocated_req(
    ::pb::ReadyInRoomCsReq* req) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(req_);
  }
  req_ = req;
  if (req) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:pb.SSG2NReadyInRoomReq.req)
}
inline ::pb::ReadyInRoomCsReq* SSG2NReadyInRoomReq::release_req() {
  
  ::pb::ReadyInRoomCsReq* temp = req_;
  req_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::pb::ReadyInRoomCsReq* SSG2NReadyInRoomReq::unsafe_arena_release_req() {
  // @@protoc_insertion_point(field_release:pb.SSG2NReadyInRoomReq.req)
  
  ::pb::ReadyInRoomCsReq* temp = req_;
  req_ = nullptr;
  return temp;
}
inline ::pb::ReadyInRoomCsReq* SSG2NReadyInRoomReq::_internal_mutable_req() {
  
  if (req_ == nullptr) {
    auto* p = CreateMaybeMessage<::pb::ReadyInRoomCsReq>(GetArena());
    req_ = p;
  }
  return req_;
}
inline ::pb::ReadyInRoomCsReq* SSG2NReadyInRoomReq::mutable_req() {
  // @@protoc_insertion_point(field_mutable:pb.SSG2NReadyInRoomReq.req)
  return _internal_mutable_req();
}
inline void SSG2NReadyInRoomReq::set_allocated_req(::pb::ReadyInRoomCsReq* req) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(req_);
  }
  if (req) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(req)->GetArena();
    if (message_arena != submessage_arena) {
      req = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, req, submessage_arena);
    }
    
  } else {
    
  }
  req_ = req;
  // @@protoc_insertion_point(field_set_allocated:pb.SSG2NReadyInRoomReq.req)
}

// -------------------------------------------------------------------

// SSN2GReadyInRoomRsp

// uint64 accountid = 1;
inline void SSN2GReadyInRoomRsp::clear_accountid() {
  accountid_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 SSN2GReadyInRoomRsp::_internal_accountid() const {
  return accountid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 SSN2GReadyInRoomRsp::accountid() const {
  // @@protoc_insertion_point(field_get:pb.SSN2GReadyInRoomRsp.accountid)
  return _internal_accountid();
}
inline void SSN2GReadyInRoomRsp::_internal_set_accountid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  accountid_ = value;
}
inline void SSN2GReadyInRoomRsp::set_accountid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_accountid(value);
  // @@protoc_insertion_point(field_set:pb.SSN2GReadyInRoomRsp.accountid)
}

// .pb.ReadyInRoomScRsp rsp = 2;
inline bool SSN2GReadyInRoomRsp::_internal_has_rsp() const {
  return this != internal_default_instance() && rsp_ != nullptr;
}
inline bool SSN2GReadyInRoomRsp::has_rsp() const {
  return _internal_has_rsp();
}
inline const ::pb::ReadyInRoomScRsp& SSN2GReadyInRoomRsp::_internal_rsp() const {
  const ::pb::ReadyInRoomScRsp* p = rsp_;
  return p != nullptr ? *p : reinterpret_cast<const ::pb::ReadyInRoomScRsp&>(
      ::pb::_ReadyInRoomScRsp_default_instance_);
}
inline const ::pb::ReadyInRoomScRsp& SSN2GReadyInRoomRsp::rsp() const {
  // @@protoc_insertion_point(field_get:pb.SSN2GReadyInRoomRsp.rsp)
  return _internal_rsp();
}
inline void SSN2GReadyInRoomRsp::unsafe_arena_set_allocated_rsp(
    ::pb::ReadyInRoomScRsp* rsp) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(rsp_);
  }
  rsp_ = rsp;
  if (rsp) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:pb.SSN2GReadyInRoomRsp.rsp)
}
inline ::pb::ReadyInRoomScRsp* SSN2GReadyInRoomRsp::release_rsp() {
  
  ::pb::ReadyInRoomScRsp* temp = rsp_;
  rsp_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::pb::ReadyInRoomScRsp* SSN2GReadyInRoomRsp::unsafe_arena_release_rsp() {
  // @@protoc_insertion_point(field_release:pb.SSN2GReadyInRoomRsp.rsp)
  
  ::pb::ReadyInRoomScRsp* temp = rsp_;
  rsp_ = nullptr;
  return temp;
}
inline ::pb::ReadyInRoomScRsp* SSN2GReadyInRoomRsp::_internal_mutable_rsp() {
  
  if (rsp_ == nullptr) {
    auto* p = CreateMaybeMessage<::pb::ReadyInRoomScRsp>(GetArena());
    rsp_ = p;
  }
  return rsp_;
}
inline ::pb::ReadyInRoomScRsp* SSN2GReadyInRoomRsp::mutable_rsp() {
  // @@protoc_insertion_point(field_mutable:pb.SSN2GReadyInRoomRsp.rsp)
  return _internal_mutable_rsp();
}
inline void SSN2GReadyInRoomRsp::set_allocated_rsp(::pb::ReadyInRoomScRsp* rsp) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(rsp_);
  }
  if (rsp) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(rsp)->GetArena();
    if (message_arena != submessage_arena) {
      rsp = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, rsp, submessage_arena);
    }
    
  } else {
    
  }
  rsp_ = rsp;
  // @@protoc_insertion_point(field_set_allocated:pb.SSN2GReadyInRoomRsp.rsp)
}

// -------------------------------------------------------------------

// SSG2NUserDisConnectRoomNotify

// uint64 accountid = 1;
inline void SSG2NUserDisConnectRoomNotify::clear_accountid() {
  accountid_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 SSG2NUserDisConnectRoomNotify::_internal_accountid() const {
  return accountid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 SSG2NUserDisConnectRoomNotify::accountid() const {
  // @@protoc_insertion_point(field_get:pb.SSG2NUserDisConnectRoomNotify.accountid)
  return _internal_accountid();
}
inline void SSG2NUserDisConnectRoomNotify::_internal_set_accountid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  accountid_ = value;
}
inline void SSG2NUserDisConnectRoomNotify::set_accountid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_accountid(value);
  // @@protoc_insertion_point(field_set:pb.SSG2NUserDisConnectRoomNotify.accountid)
}

// uint64 roomid = 2;
inline void SSG2NUserDisConnectRoomNotify::clear_roomid() {
  roomid_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 SSG2NUserDisConnectRoomNotify::_internal_roomid() const {
  return roomid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 SSG2NUserDisConnectRoomNotify::roomid() const {
  // @@protoc_insertion_point(field_get:pb.SSG2NUserDisConnectRoomNotify.roomid)
  return _internal_roomid();
}
inline void SSG2NUserDisConnectRoomNotify::_internal_set_roomid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  roomid_ = value;
}
inline void SSG2NUserDisConnectRoomNotify::set_roomid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_roomid(value);
  // @@protoc_insertion_point(field_set:pb.SSG2NUserDisConnectRoomNotify.roomid)
}

// -------------------------------------------------------------------

// SSN2GUserDisConnecteTimeoutNotify

// uint64 accountid = 1;
inline void SSN2GUserDisConnecteTimeoutNotify::clear_accountid() {
  accountid_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 SSN2GUserDisConnecteTimeoutNotify::_internal_accountid() const {
  return accountid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 SSN2GUserDisConnecteTimeoutNotify::accountid() const {
  // @@protoc_insertion_point(field_get:pb.SSN2GUserDisConnecteTimeoutNotify.accountid)
  return _internal_accountid();
}
inline void SSN2GUserDisConnecteTimeoutNotify::_internal_set_accountid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  accountid_ = value;
}
inline void SSN2GUserDisConnecteTimeoutNotify::set_accountid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_accountid(value);
  // @@protoc_insertion_point(field_set:pb.SSN2GUserDisConnecteTimeoutNotify.accountid)
}

// uint64 roomid = 2;
inline void SSN2GUserDisConnecteTimeoutNotify::clear_roomid() {
  roomid_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 SSN2GUserDisConnecteTimeoutNotify::_internal_roomid() const {
  return roomid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 SSN2GUserDisConnecteTimeoutNotify::roomid() const {
  // @@protoc_insertion_point(field_get:pb.SSN2GUserDisConnecteTimeoutNotify.roomid)
  return _internal_roomid();
}
inline void SSN2GUserDisConnecteTimeoutNotify::_internal_set_roomid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  roomid_ = value;
}
inline void SSN2GUserDisConnecteTimeoutNotify::set_roomid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_roomid(value);
  // @@protoc_insertion_point(field_set:pb.SSN2GUserDisConnecteTimeoutNotify.roomid)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace pb

PROTOBUF_NAMESPACE_OPEN

template <> struct is_proto_enum< ::pb::SSN2GPullMsgInfoRsp_RetCode> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::pb::SSN2GPullMsgInfoRsp_RetCode>() {
  return ::pb::SSN2GPullMsgInfoRsp_RetCode_descriptor();
}
template <> struct is_proto_enum< ::pb::SSN2GPullBattleMsgInfoRsp_RetCode> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::pb::SSN2GPullBattleMsgInfoRsp_RetCode>() {
  return ::pb::SSN2GPullBattleMsgInfoRsp_RetCode_descriptor();
}
template <> struct is_proto_enum< ::pb::SS_GAME_NODE_MSG_CMD> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::pb::SS_GAME_NODE_MSG_CMD>() {
  return ::pb::SS_GAME_NODE_MSG_CMD_descriptor();
}

PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_game_5fnode_5fmsg_2eproto
