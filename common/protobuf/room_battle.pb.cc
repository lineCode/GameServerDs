// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: room_battle.proto

#include "room_battle.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_room_5fbattle_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_PlayerInfo_room_5fbattle_2eproto;
namespace pb {
class PlayerInfoDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<PlayerInfo> _instance;
} _PlayerInfo_default_instance_;
class SSR2BCreateRoomReqDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SSR2BCreateRoomReq> _instance;
} _SSR2BCreateRoomReq_default_instance_;
class SSB2RCreateRoomRspDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SSB2RCreateRoomRsp> _instance;
} _SSB2RCreateRoomRsp_default_instance_;
class SSR2BJoinRoomReqDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SSR2BJoinRoomReq> _instance;
} _SSR2BJoinRoomReq_default_instance_;
class SSB2RJoinRoomRspDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SSB2RJoinRoomRsp> _instance;
} _SSB2RJoinRoomRsp_default_instance_;
class SSR2BLeaveRoomReqDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SSR2BLeaveRoomReq> _instance;
} _SSR2BLeaveRoomReq_default_instance_;
class SSB2RLeaveRoomRspDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SSB2RLeaveRoomRsp> _instance;
} _SSB2RLeaveRoomRsp_default_instance_;
}  // namespace pb
static void InitDefaultsscc_info_PlayerInfo_room_5fbattle_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pb::_PlayerInfo_default_instance_;
    new (ptr) ::pb::PlayerInfo();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_PlayerInfo_room_5fbattle_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_PlayerInfo_room_5fbattle_2eproto}, {}};

static void InitDefaultsscc_info_SSB2RCreateRoomRsp_room_5fbattle_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pb::_SSB2RCreateRoomRsp_default_instance_;
    new (ptr) ::pb::SSB2RCreateRoomRsp();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_SSB2RCreateRoomRsp_room_5fbattle_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_SSB2RCreateRoomRsp_room_5fbattle_2eproto}, {}};

static void InitDefaultsscc_info_SSB2RJoinRoomRsp_room_5fbattle_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pb::_SSB2RJoinRoomRsp_default_instance_;
    new (ptr) ::pb::SSB2RJoinRoomRsp();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_SSB2RJoinRoomRsp_room_5fbattle_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_SSB2RJoinRoomRsp_room_5fbattle_2eproto}, {}};

static void InitDefaultsscc_info_SSB2RLeaveRoomRsp_room_5fbattle_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pb::_SSB2RLeaveRoomRsp_default_instance_;
    new (ptr) ::pb::SSB2RLeaveRoomRsp();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_SSB2RLeaveRoomRsp_room_5fbattle_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_SSB2RLeaveRoomRsp_room_5fbattle_2eproto}, {}};

static void InitDefaultsscc_info_SSR2BCreateRoomReq_room_5fbattle_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pb::_SSR2BCreateRoomReq_default_instance_;
    new (ptr) ::pb::SSR2BCreateRoomReq();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_SSR2BCreateRoomReq_room_5fbattle_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_SSR2BCreateRoomReq_room_5fbattle_2eproto}, {
      &scc_info_PlayerInfo_room_5fbattle_2eproto.base,}};

static void InitDefaultsscc_info_SSR2BJoinRoomReq_room_5fbattle_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pb::_SSR2BJoinRoomReq_default_instance_;
    new (ptr) ::pb::SSR2BJoinRoomReq();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_SSR2BJoinRoomReq_room_5fbattle_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_SSR2BJoinRoomReq_room_5fbattle_2eproto}, {
      &scc_info_PlayerInfo_room_5fbattle_2eproto.base,}};

static void InitDefaultsscc_info_SSR2BLeaveRoomReq_room_5fbattle_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pb::_SSR2BLeaveRoomReq_default_instance_;
    new (ptr) ::pb::SSR2BLeaveRoomReq();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_SSR2BLeaveRoomReq_room_5fbattle_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_SSR2BLeaveRoomReq_room_5fbattle_2eproto}, {}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_room_5fbattle_2eproto[7];
static const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* file_level_enum_descriptors_room_5fbattle_2eproto[4];
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_room_5fbattle_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_room_5fbattle_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::pb::PlayerInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::pb::PlayerInfo, accountid_),
  PROTOBUF_FIELD_OFFSET(::pb::PlayerInfo, playerid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::pb::SSR2BCreateRoomReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::pb::SSR2BCreateRoomReq, roomid_),
  PROTOBUF_FIELD_OFFSET(::pb::SSR2BCreateRoomReq, pinfo_),
  PROTOBUF_FIELD_OFFSET(::pb::SSR2BCreateRoomReq, token_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::pb::SSB2RCreateRoomRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::pb::SSB2RCreateRoomRsp, retcode_),
  PROTOBUF_FIELD_OFFSET(::pb::SSB2RCreateRoomRsp, roomid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::pb::SSR2BJoinRoomReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::pb::SSR2BJoinRoomReq, roomid_),
  PROTOBUF_FIELD_OFFSET(::pb::SSR2BJoinRoomReq, pinfo_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::pb::SSB2RJoinRoomRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::pb::SSB2RJoinRoomRsp, retcode_),
  PROTOBUF_FIELD_OFFSET(::pb::SSB2RJoinRoomRsp, roomid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::pb::SSR2BLeaveRoomReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::pb::SSR2BLeaveRoomReq, roomid_),
  PROTOBUF_FIELD_OFFSET(::pb::SSR2BLeaveRoomReq, accountid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::pb::SSB2RLeaveRoomRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::pb::SSB2RLeaveRoomRsp, retcode_),
  PROTOBUF_FIELD_OFFSET(::pb::SSB2RLeaveRoomRsp, roomid_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::pb::PlayerInfo)},
  { 7, -1, sizeof(::pb::SSR2BCreateRoomReq)},
  { 15, -1, sizeof(::pb::SSB2RCreateRoomRsp)},
  { 22, -1, sizeof(::pb::SSR2BJoinRoomReq)},
  { 29, -1, sizeof(::pb::SSB2RJoinRoomRsp)},
  { 36, -1, sizeof(::pb::SSR2BLeaveRoomReq)},
  { 43, -1, sizeof(::pb::SSB2RLeaveRoomRsp)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::pb::_PlayerInfo_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::pb::_SSR2BCreateRoomReq_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::pb::_SSB2RCreateRoomRsp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::pb::_SSR2BJoinRoomReq_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::pb::_SSB2RJoinRoomRsp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::pb::_SSR2BLeaveRoomReq_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::pb::_SSB2RLeaveRoomRsp_default_instance_),
};

const char descriptor_table_protodef_room_5fbattle_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\021room_battle.proto\022\002pb\"1\n\nPlayerInfo\022\021\n"
  "\taccountid\030\001 \001(\r\022\020\n\010playerid\030\002 \001(\r\"R\n\022SS"
  "R2BCreateRoomReq\022\016\n\006roomid\030\001 \001(\004\022\035\n\005pinf"
  "o\030\002 \003(\0132\016.pb.PlayerInfo\022\r\n\005token\030\003 \001(\t\"\222"
  "\001\n\022SSB2RCreateRoomRsp\022/\n\007retcode\030\001 \001(\0162\036"
  ".pb.SSB2RCreateRoomRsp.RetCode\022\016\n\006roomid"
  "\030\002 \001(\004\";\n\007RetCode\022\014\n\010RET_SUCC\020\000\022\016\n\nRET_F"
  "AILED\020\001\022\022\n\016RET_GAME_EXIST\020\002\"A\n\020SSR2BJoin"
  "RoomReq\022\016\n\006roomid\030\001 \001(\004\022\035\n\005pinfo\030\002 \001(\0132\016"
  ".pb.PlayerInfo\"\222\001\n\020SSB2RJoinRoomRsp\022-\n\007r"
  "etcode\030\001 \001(\0162\034.pb.SSB2RJoinRoomRsp.Retco"
  "de\022\016\n\006roomid\030\002 \001(\004\"\?\n\007Retcode\022\014\n\010RET_SUC"
  "C\020\000\022\016\n\nRET_FAILED\020\001\022\026\n\022RET_GAME_NOT_EXIS"
  "T\020\002\"6\n\021SSR2BLeaveRoomReq\022\016\n\006roomid\030\001 \001(\004"
  "\022\021\n\taccountid\030\002 \001(\004\"\254\001\n\021SSB2RLeaveRoomRs"
  "p\022.\n\007retcode\030\001 \001(\0162\035.pb.SSB2RLeaveRoomRs"
  "p.Retcode\022\016\n\006roomid\030\002 \001(\004\"W\n\007Retcode\022\014\n\010"
  "RET_SUCC\020\000\022\016\n\nRET_FAILED\020\001\022\026\n\022RET_GAME_N"
  "OT_EXIST\020\002\022\026\n\022RET_USER_NOT_EXIST\020\003*\333\001\n\022S"
  "S_ROOM_BATTLE_CMD\022\032\n\026SS_ROOM_BATTLE_DEFA"
  "ULT\020\000\022\035\n\027SS_ROOM_CREATE_GAMEROOM\020\241\215\006\022\032\n\024"
  "SS_BATTLE_CREATE_RSP\020\242\215\006\022\033\n\025SS_ROOM_JOIN"
  "_GAMEROOM\020\243\215\006\022\030\n\022SS_BATTLE_JOIN_RSP\020\244\215\006\022"
  "\034\n\026SS_ROOM_LEAVE_GAMEROOM\020\245\215\006\022\031\n\023SS_BATT"
  "LE_LEAVE_RSP\020\246\215\006b\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_room_5fbattle_2eproto_deps[1] = {
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_room_5fbattle_2eproto_sccs[7] = {
  &scc_info_PlayerInfo_room_5fbattle_2eproto.base,
  &scc_info_SSB2RCreateRoomRsp_room_5fbattle_2eproto.base,
  &scc_info_SSB2RJoinRoomRsp_room_5fbattle_2eproto.base,
  &scc_info_SSB2RLeaveRoomRsp_room_5fbattle_2eproto.base,
  &scc_info_SSR2BCreateRoomReq_room_5fbattle_2eproto.base,
  &scc_info_SSR2BJoinRoomReq_room_5fbattle_2eproto.base,
  &scc_info_SSR2BLeaveRoomReq_room_5fbattle_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_room_5fbattle_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_room_5fbattle_2eproto = {
  false, false, descriptor_table_protodef_room_5fbattle_2eproto, "room_battle.proto", 984,
  &descriptor_table_room_5fbattle_2eproto_once, descriptor_table_room_5fbattle_2eproto_sccs, descriptor_table_room_5fbattle_2eproto_deps, 7, 0,
  schemas, file_default_instances, TableStruct_room_5fbattle_2eproto::offsets,
  file_level_metadata_room_5fbattle_2eproto, 7, file_level_enum_descriptors_room_5fbattle_2eproto, file_level_service_descriptors_room_5fbattle_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_room_5fbattle_2eproto = (static_cast<void>(::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_room_5fbattle_2eproto)), true);
namespace pb {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* SSB2RCreateRoomRsp_RetCode_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_room_5fbattle_2eproto);
  return file_level_enum_descriptors_room_5fbattle_2eproto[0];
}
bool SSB2RCreateRoomRsp_RetCode_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr SSB2RCreateRoomRsp_RetCode SSB2RCreateRoomRsp::RET_SUCC;
constexpr SSB2RCreateRoomRsp_RetCode SSB2RCreateRoomRsp::RET_FAILED;
constexpr SSB2RCreateRoomRsp_RetCode SSB2RCreateRoomRsp::RET_GAME_EXIST;
constexpr SSB2RCreateRoomRsp_RetCode SSB2RCreateRoomRsp::RetCode_MIN;
constexpr SSB2RCreateRoomRsp_RetCode SSB2RCreateRoomRsp::RetCode_MAX;
constexpr int SSB2RCreateRoomRsp::RetCode_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* SSB2RJoinRoomRsp_Retcode_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_room_5fbattle_2eproto);
  return file_level_enum_descriptors_room_5fbattle_2eproto[1];
}
bool SSB2RJoinRoomRsp_Retcode_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr SSB2RJoinRoomRsp_Retcode SSB2RJoinRoomRsp::RET_SUCC;
constexpr SSB2RJoinRoomRsp_Retcode SSB2RJoinRoomRsp::RET_FAILED;
constexpr SSB2RJoinRoomRsp_Retcode SSB2RJoinRoomRsp::RET_GAME_NOT_EXIST;
constexpr SSB2RJoinRoomRsp_Retcode SSB2RJoinRoomRsp::Retcode_MIN;
constexpr SSB2RJoinRoomRsp_Retcode SSB2RJoinRoomRsp::Retcode_MAX;
constexpr int SSB2RJoinRoomRsp::Retcode_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* SSB2RLeaveRoomRsp_Retcode_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_room_5fbattle_2eproto);
  return file_level_enum_descriptors_room_5fbattle_2eproto[2];
}
bool SSB2RLeaveRoomRsp_Retcode_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr SSB2RLeaveRoomRsp_Retcode SSB2RLeaveRoomRsp::RET_SUCC;
constexpr SSB2RLeaveRoomRsp_Retcode SSB2RLeaveRoomRsp::RET_FAILED;
constexpr SSB2RLeaveRoomRsp_Retcode SSB2RLeaveRoomRsp::RET_GAME_NOT_EXIST;
constexpr SSB2RLeaveRoomRsp_Retcode SSB2RLeaveRoomRsp::RET_USER_NOT_EXIST;
constexpr SSB2RLeaveRoomRsp_Retcode SSB2RLeaveRoomRsp::Retcode_MIN;
constexpr SSB2RLeaveRoomRsp_Retcode SSB2RLeaveRoomRsp::Retcode_MAX;
constexpr int SSB2RLeaveRoomRsp::Retcode_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* SS_ROOM_BATTLE_CMD_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_room_5fbattle_2eproto);
  return file_level_enum_descriptors_room_5fbattle_2eproto[3];
}
bool SS_ROOM_BATTLE_CMD_IsValid(int value) {
  switch (value) {
    case 0:
    case 100001:
    case 100002:
    case 100003:
    case 100004:
    case 100005:
    case 100006:
      return true;
    default:
      return false;
  }
}


// ===================================================================

class PlayerInfo::_Internal {
 public:
};

PlayerInfo::PlayerInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:pb.PlayerInfo)
}
PlayerInfo::PlayerInfo(const PlayerInfo& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&accountid_, &from.accountid_,
    static_cast<size_t>(reinterpret_cast<char*>(&playerid_) -
    reinterpret_cast<char*>(&accountid_)) + sizeof(playerid_));
  // @@protoc_insertion_point(copy_constructor:pb.PlayerInfo)
}

void PlayerInfo::SharedCtor() {
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&accountid_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&playerid_) -
      reinterpret_cast<char*>(&accountid_)) + sizeof(playerid_));
}

PlayerInfo::~PlayerInfo() {
  // @@protoc_insertion_point(destructor:pb.PlayerInfo)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void PlayerInfo::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void PlayerInfo::ArenaDtor(void* object) {
  PlayerInfo* _this = reinterpret_cast< PlayerInfo* >(object);
  (void)_this;
}
void PlayerInfo::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PlayerInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PlayerInfo& PlayerInfo::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_PlayerInfo_room_5fbattle_2eproto.base);
  return *internal_default_instance();
}


void PlayerInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.PlayerInfo)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&accountid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&playerid_) -
      reinterpret_cast<char*>(&accountid_)) + sizeof(playerid_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PlayerInfo::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint32 accountid = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          accountid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 playerid = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          playerid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* PlayerInfo::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.PlayerInfo)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 accountid = 1;
  if (this->accountid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_accountid(), target);
  }

  // uint32 playerid = 2;
  if (this->playerid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_playerid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.PlayerInfo)
  return target;
}

size_t PlayerInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.PlayerInfo)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 accountid = 1;
  if (this->accountid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_accountid());
  }

  // uint32 playerid = 2;
  if (this->playerid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_playerid());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PlayerInfo::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.PlayerInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const PlayerInfo* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<PlayerInfo>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.PlayerInfo)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.PlayerInfo)
    MergeFrom(*source);
  }
}

void PlayerInfo::MergeFrom(const PlayerInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.PlayerInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.accountid() != 0) {
    _internal_set_accountid(from._internal_accountid());
  }
  if (from.playerid() != 0) {
    _internal_set_playerid(from._internal_playerid());
  }
}

void PlayerInfo::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.PlayerInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PlayerInfo::CopyFrom(const PlayerInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.PlayerInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PlayerInfo::IsInitialized() const {
  return true;
}

void PlayerInfo::InternalSwap(PlayerInfo* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PlayerInfo, playerid_)
      + sizeof(PlayerInfo::playerid_)
      - PROTOBUF_FIELD_OFFSET(PlayerInfo, accountid_)>(
          reinterpret_cast<char*>(&accountid_),
          reinterpret_cast<char*>(&other->accountid_));
}

::PROTOBUF_NAMESPACE_ID::Metadata PlayerInfo::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class SSR2BCreateRoomReq::_Internal {
 public:
};

SSR2BCreateRoomReq::SSR2BCreateRoomReq(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  pinfo_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:pb.SSR2BCreateRoomReq)
}
SSR2BCreateRoomReq::SSR2BCreateRoomReq(const SSR2BCreateRoomReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      pinfo_(from.pinfo_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  token_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_token().empty()) {
    token_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_token(), 
      GetArena());
  }
  roomid_ = from.roomid_;
  // @@protoc_insertion_point(copy_constructor:pb.SSR2BCreateRoomReq)
}

void SSR2BCreateRoomReq::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_SSR2BCreateRoomReq_room_5fbattle_2eproto.base);
  token_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  roomid_ = PROTOBUF_ULONGLONG(0);
}

SSR2BCreateRoomReq::~SSR2BCreateRoomReq() {
  // @@protoc_insertion_point(destructor:pb.SSR2BCreateRoomReq)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SSR2BCreateRoomReq::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  token_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void SSR2BCreateRoomReq::ArenaDtor(void* object) {
  SSR2BCreateRoomReq* _this = reinterpret_cast< SSR2BCreateRoomReq* >(object);
  (void)_this;
}
void SSR2BCreateRoomReq::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SSR2BCreateRoomReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SSR2BCreateRoomReq& SSR2BCreateRoomReq::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SSR2BCreateRoomReq_room_5fbattle_2eproto.base);
  return *internal_default_instance();
}


void SSR2BCreateRoomReq::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.SSR2BCreateRoomReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  pinfo_.Clear();
  token_.ClearToEmpty();
  roomid_ = PROTOBUF_ULONGLONG(0);
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SSR2BCreateRoomReq::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint64 roomid = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          roomid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .pb.PlayerInfo pinfo = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_pinfo(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else goto handle_unusual;
        continue;
      // string token = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_token();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "pb.SSR2BCreateRoomReq.token"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SSR2BCreateRoomReq::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.SSR2BCreateRoomReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 roomid = 1;
  if (this->roomid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_roomid(), target);
  }

  // repeated .pb.PlayerInfo pinfo = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_pinfo_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, this->_internal_pinfo(i), target, stream);
  }

  // string token = 3;
  if (this->token().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_token().data(), static_cast<int>(this->_internal_token().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "pb.SSR2BCreateRoomReq.token");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_token(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.SSR2BCreateRoomReq)
  return target;
}

size_t SSR2BCreateRoomReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.SSR2BCreateRoomReq)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .pb.PlayerInfo pinfo = 2;
  total_size += 1UL * this->_internal_pinfo_size();
  for (const auto& msg : this->pinfo_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string token = 3;
  if (this->token().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_token());
  }

  // uint64 roomid = 1;
  if (this->roomid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_roomid());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SSR2BCreateRoomReq::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.SSR2BCreateRoomReq)
  GOOGLE_DCHECK_NE(&from, this);
  const SSR2BCreateRoomReq* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SSR2BCreateRoomReq>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.SSR2BCreateRoomReq)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.SSR2BCreateRoomReq)
    MergeFrom(*source);
  }
}

void SSR2BCreateRoomReq::MergeFrom(const SSR2BCreateRoomReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.SSR2BCreateRoomReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  pinfo_.MergeFrom(from.pinfo_);
  if (from.token().size() > 0) {
    _internal_set_token(from._internal_token());
  }
  if (from.roomid() != 0) {
    _internal_set_roomid(from._internal_roomid());
  }
}

void SSR2BCreateRoomReq::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.SSR2BCreateRoomReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SSR2BCreateRoomReq::CopyFrom(const SSR2BCreateRoomReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.SSR2BCreateRoomReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SSR2BCreateRoomReq::IsInitialized() const {
  return true;
}

void SSR2BCreateRoomReq::InternalSwap(SSR2BCreateRoomReq* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  pinfo_.InternalSwap(&other->pinfo_);
  token_.Swap(&other->token_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(roomid_, other->roomid_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SSR2BCreateRoomReq::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class SSB2RCreateRoomRsp::_Internal {
 public:
};

SSB2RCreateRoomRsp::SSB2RCreateRoomRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:pb.SSB2RCreateRoomRsp)
}
SSB2RCreateRoomRsp::SSB2RCreateRoomRsp(const SSB2RCreateRoomRsp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&roomid_, &from.roomid_,
    static_cast<size_t>(reinterpret_cast<char*>(&retcode_) -
    reinterpret_cast<char*>(&roomid_)) + sizeof(retcode_));
  // @@protoc_insertion_point(copy_constructor:pb.SSB2RCreateRoomRsp)
}

void SSB2RCreateRoomRsp::SharedCtor() {
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&roomid_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&retcode_) -
      reinterpret_cast<char*>(&roomid_)) + sizeof(retcode_));
}

SSB2RCreateRoomRsp::~SSB2RCreateRoomRsp() {
  // @@protoc_insertion_point(destructor:pb.SSB2RCreateRoomRsp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SSB2RCreateRoomRsp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void SSB2RCreateRoomRsp::ArenaDtor(void* object) {
  SSB2RCreateRoomRsp* _this = reinterpret_cast< SSB2RCreateRoomRsp* >(object);
  (void)_this;
}
void SSB2RCreateRoomRsp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SSB2RCreateRoomRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SSB2RCreateRoomRsp& SSB2RCreateRoomRsp::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SSB2RCreateRoomRsp_room_5fbattle_2eproto.base);
  return *internal_default_instance();
}


void SSB2RCreateRoomRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.SSB2RCreateRoomRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&roomid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&retcode_) -
      reinterpret_cast<char*>(&roomid_)) + sizeof(retcode_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SSB2RCreateRoomRsp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .pb.SSB2RCreateRoomRsp.RetCode retcode = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_retcode(static_cast<::pb::SSB2RCreateRoomRsp_RetCode>(val));
        } else goto handle_unusual;
        continue;
      // uint64 roomid = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          roomid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SSB2RCreateRoomRsp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.SSB2RCreateRoomRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .pb.SSB2RCreateRoomRsp.RetCode retcode = 1;
  if (this->retcode() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_retcode(), target);
  }

  // uint64 roomid = 2;
  if (this->roomid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(2, this->_internal_roomid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.SSB2RCreateRoomRsp)
  return target;
}

size_t SSB2RCreateRoomRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.SSB2RCreateRoomRsp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint64 roomid = 2;
  if (this->roomid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_roomid());
  }

  // .pb.SSB2RCreateRoomRsp.RetCode retcode = 1;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_retcode());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SSB2RCreateRoomRsp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.SSB2RCreateRoomRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const SSB2RCreateRoomRsp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SSB2RCreateRoomRsp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.SSB2RCreateRoomRsp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.SSB2RCreateRoomRsp)
    MergeFrom(*source);
  }
}

void SSB2RCreateRoomRsp::MergeFrom(const SSB2RCreateRoomRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.SSB2RCreateRoomRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.roomid() != 0) {
    _internal_set_roomid(from._internal_roomid());
  }
  if (from.retcode() != 0) {
    _internal_set_retcode(from._internal_retcode());
  }
}

void SSB2RCreateRoomRsp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.SSB2RCreateRoomRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SSB2RCreateRoomRsp::CopyFrom(const SSB2RCreateRoomRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.SSB2RCreateRoomRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SSB2RCreateRoomRsp::IsInitialized() const {
  return true;
}

void SSB2RCreateRoomRsp::InternalSwap(SSB2RCreateRoomRsp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SSB2RCreateRoomRsp, retcode_)
      + sizeof(SSB2RCreateRoomRsp::retcode_)
      - PROTOBUF_FIELD_OFFSET(SSB2RCreateRoomRsp, roomid_)>(
          reinterpret_cast<char*>(&roomid_),
          reinterpret_cast<char*>(&other->roomid_));
}

::PROTOBUF_NAMESPACE_ID::Metadata SSB2RCreateRoomRsp::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class SSR2BJoinRoomReq::_Internal {
 public:
  static const ::pb::PlayerInfo& pinfo(const SSR2BJoinRoomReq* msg);
};

const ::pb::PlayerInfo&
SSR2BJoinRoomReq::_Internal::pinfo(const SSR2BJoinRoomReq* msg) {
  return *msg->pinfo_;
}
SSR2BJoinRoomReq::SSR2BJoinRoomReq(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:pb.SSR2BJoinRoomReq)
}
SSR2BJoinRoomReq::SSR2BJoinRoomReq(const SSR2BJoinRoomReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_pinfo()) {
    pinfo_ = new ::pb::PlayerInfo(*from.pinfo_);
  } else {
    pinfo_ = nullptr;
  }
  roomid_ = from.roomid_;
  // @@protoc_insertion_point(copy_constructor:pb.SSR2BJoinRoomReq)
}

void SSR2BJoinRoomReq::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_SSR2BJoinRoomReq_room_5fbattle_2eproto.base);
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&pinfo_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&roomid_) -
      reinterpret_cast<char*>(&pinfo_)) + sizeof(roomid_));
}

SSR2BJoinRoomReq::~SSR2BJoinRoomReq() {
  // @@protoc_insertion_point(destructor:pb.SSR2BJoinRoomReq)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SSR2BJoinRoomReq::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete pinfo_;
}

void SSR2BJoinRoomReq::ArenaDtor(void* object) {
  SSR2BJoinRoomReq* _this = reinterpret_cast< SSR2BJoinRoomReq* >(object);
  (void)_this;
}
void SSR2BJoinRoomReq::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SSR2BJoinRoomReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SSR2BJoinRoomReq& SSR2BJoinRoomReq::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SSR2BJoinRoomReq_room_5fbattle_2eproto.base);
  return *internal_default_instance();
}


void SSR2BJoinRoomReq::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.SSR2BJoinRoomReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && pinfo_ != nullptr) {
    delete pinfo_;
  }
  pinfo_ = nullptr;
  roomid_ = PROTOBUF_ULONGLONG(0);
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SSR2BJoinRoomReq::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint64 roomid = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          roomid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .pb.PlayerInfo pinfo = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_pinfo(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SSR2BJoinRoomReq::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.SSR2BJoinRoomReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 roomid = 1;
  if (this->roomid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_roomid(), target);
  }

  // .pb.PlayerInfo pinfo = 2;
  if (this->has_pinfo()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::pinfo(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.SSR2BJoinRoomReq)
  return target;
}

size_t SSR2BJoinRoomReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.SSR2BJoinRoomReq)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .pb.PlayerInfo pinfo = 2;
  if (this->has_pinfo()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *pinfo_);
  }

  // uint64 roomid = 1;
  if (this->roomid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_roomid());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SSR2BJoinRoomReq::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.SSR2BJoinRoomReq)
  GOOGLE_DCHECK_NE(&from, this);
  const SSR2BJoinRoomReq* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SSR2BJoinRoomReq>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.SSR2BJoinRoomReq)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.SSR2BJoinRoomReq)
    MergeFrom(*source);
  }
}

void SSR2BJoinRoomReq::MergeFrom(const SSR2BJoinRoomReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.SSR2BJoinRoomReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_pinfo()) {
    _internal_mutable_pinfo()->::pb::PlayerInfo::MergeFrom(from._internal_pinfo());
  }
  if (from.roomid() != 0) {
    _internal_set_roomid(from._internal_roomid());
  }
}

void SSR2BJoinRoomReq::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.SSR2BJoinRoomReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SSR2BJoinRoomReq::CopyFrom(const SSR2BJoinRoomReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.SSR2BJoinRoomReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SSR2BJoinRoomReq::IsInitialized() const {
  return true;
}

void SSR2BJoinRoomReq::InternalSwap(SSR2BJoinRoomReq* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SSR2BJoinRoomReq, roomid_)
      + sizeof(SSR2BJoinRoomReq::roomid_)
      - PROTOBUF_FIELD_OFFSET(SSR2BJoinRoomReq, pinfo_)>(
          reinterpret_cast<char*>(&pinfo_),
          reinterpret_cast<char*>(&other->pinfo_));
}

::PROTOBUF_NAMESPACE_ID::Metadata SSR2BJoinRoomReq::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class SSB2RJoinRoomRsp::_Internal {
 public:
};

SSB2RJoinRoomRsp::SSB2RJoinRoomRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:pb.SSB2RJoinRoomRsp)
}
SSB2RJoinRoomRsp::SSB2RJoinRoomRsp(const SSB2RJoinRoomRsp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&roomid_, &from.roomid_,
    static_cast<size_t>(reinterpret_cast<char*>(&retcode_) -
    reinterpret_cast<char*>(&roomid_)) + sizeof(retcode_));
  // @@protoc_insertion_point(copy_constructor:pb.SSB2RJoinRoomRsp)
}

void SSB2RJoinRoomRsp::SharedCtor() {
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&roomid_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&retcode_) -
      reinterpret_cast<char*>(&roomid_)) + sizeof(retcode_));
}

SSB2RJoinRoomRsp::~SSB2RJoinRoomRsp() {
  // @@protoc_insertion_point(destructor:pb.SSB2RJoinRoomRsp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SSB2RJoinRoomRsp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void SSB2RJoinRoomRsp::ArenaDtor(void* object) {
  SSB2RJoinRoomRsp* _this = reinterpret_cast< SSB2RJoinRoomRsp* >(object);
  (void)_this;
}
void SSB2RJoinRoomRsp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SSB2RJoinRoomRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SSB2RJoinRoomRsp& SSB2RJoinRoomRsp::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SSB2RJoinRoomRsp_room_5fbattle_2eproto.base);
  return *internal_default_instance();
}


void SSB2RJoinRoomRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.SSB2RJoinRoomRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&roomid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&retcode_) -
      reinterpret_cast<char*>(&roomid_)) + sizeof(retcode_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SSB2RJoinRoomRsp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .pb.SSB2RJoinRoomRsp.Retcode retcode = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_retcode(static_cast<::pb::SSB2RJoinRoomRsp_Retcode>(val));
        } else goto handle_unusual;
        continue;
      // uint64 roomid = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          roomid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SSB2RJoinRoomRsp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.SSB2RJoinRoomRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .pb.SSB2RJoinRoomRsp.Retcode retcode = 1;
  if (this->retcode() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_retcode(), target);
  }

  // uint64 roomid = 2;
  if (this->roomid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(2, this->_internal_roomid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.SSB2RJoinRoomRsp)
  return target;
}

size_t SSB2RJoinRoomRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.SSB2RJoinRoomRsp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint64 roomid = 2;
  if (this->roomid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_roomid());
  }

  // .pb.SSB2RJoinRoomRsp.Retcode retcode = 1;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_retcode());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SSB2RJoinRoomRsp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.SSB2RJoinRoomRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const SSB2RJoinRoomRsp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SSB2RJoinRoomRsp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.SSB2RJoinRoomRsp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.SSB2RJoinRoomRsp)
    MergeFrom(*source);
  }
}

void SSB2RJoinRoomRsp::MergeFrom(const SSB2RJoinRoomRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.SSB2RJoinRoomRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.roomid() != 0) {
    _internal_set_roomid(from._internal_roomid());
  }
  if (from.retcode() != 0) {
    _internal_set_retcode(from._internal_retcode());
  }
}

void SSB2RJoinRoomRsp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.SSB2RJoinRoomRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SSB2RJoinRoomRsp::CopyFrom(const SSB2RJoinRoomRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.SSB2RJoinRoomRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SSB2RJoinRoomRsp::IsInitialized() const {
  return true;
}

void SSB2RJoinRoomRsp::InternalSwap(SSB2RJoinRoomRsp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SSB2RJoinRoomRsp, retcode_)
      + sizeof(SSB2RJoinRoomRsp::retcode_)
      - PROTOBUF_FIELD_OFFSET(SSB2RJoinRoomRsp, roomid_)>(
          reinterpret_cast<char*>(&roomid_),
          reinterpret_cast<char*>(&other->roomid_));
}

::PROTOBUF_NAMESPACE_ID::Metadata SSB2RJoinRoomRsp::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class SSR2BLeaveRoomReq::_Internal {
 public:
};

SSR2BLeaveRoomReq::SSR2BLeaveRoomReq(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:pb.SSR2BLeaveRoomReq)
}
SSR2BLeaveRoomReq::SSR2BLeaveRoomReq(const SSR2BLeaveRoomReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&roomid_, &from.roomid_,
    static_cast<size_t>(reinterpret_cast<char*>(&accountid_) -
    reinterpret_cast<char*>(&roomid_)) + sizeof(accountid_));
  // @@protoc_insertion_point(copy_constructor:pb.SSR2BLeaveRoomReq)
}

void SSR2BLeaveRoomReq::SharedCtor() {
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&roomid_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&accountid_) -
      reinterpret_cast<char*>(&roomid_)) + sizeof(accountid_));
}

SSR2BLeaveRoomReq::~SSR2BLeaveRoomReq() {
  // @@protoc_insertion_point(destructor:pb.SSR2BLeaveRoomReq)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SSR2BLeaveRoomReq::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void SSR2BLeaveRoomReq::ArenaDtor(void* object) {
  SSR2BLeaveRoomReq* _this = reinterpret_cast< SSR2BLeaveRoomReq* >(object);
  (void)_this;
}
void SSR2BLeaveRoomReq::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SSR2BLeaveRoomReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SSR2BLeaveRoomReq& SSR2BLeaveRoomReq::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SSR2BLeaveRoomReq_room_5fbattle_2eproto.base);
  return *internal_default_instance();
}


void SSR2BLeaveRoomReq::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.SSR2BLeaveRoomReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&roomid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&accountid_) -
      reinterpret_cast<char*>(&roomid_)) + sizeof(accountid_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SSR2BLeaveRoomReq::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint64 roomid = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          roomid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint64 accountid = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          accountid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SSR2BLeaveRoomReq::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.SSR2BLeaveRoomReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 roomid = 1;
  if (this->roomid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_roomid(), target);
  }

  // uint64 accountid = 2;
  if (this->accountid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(2, this->_internal_accountid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.SSR2BLeaveRoomReq)
  return target;
}

size_t SSR2BLeaveRoomReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.SSR2BLeaveRoomReq)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint64 roomid = 1;
  if (this->roomid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_roomid());
  }

  // uint64 accountid = 2;
  if (this->accountid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_accountid());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SSR2BLeaveRoomReq::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.SSR2BLeaveRoomReq)
  GOOGLE_DCHECK_NE(&from, this);
  const SSR2BLeaveRoomReq* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SSR2BLeaveRoomReq>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.SSR2BLeaveRoomReq)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.SSR2BLeaveRoomReq)
    MergeFrom(*source);
  }
}

void SSR2BLeaveRoomReq::MergeFrom(const SSR2BLeaveRoomReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.SSR2BLeaveRoomReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.roomid() != 0) {
    _internal_set_roomid(from._internal_roomid());
  }
  if (from.accountid() != 0) {
    _internal_set_accountid(from._internal_accountid());
  }
}

void SSR2BLeaveRoomReq::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.SSR2BLeaveRoomReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SSR2BLeaveRoomReq::CopyFrom(const SSR2BLeaveRoomReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.SSR2BLeaveRoomReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SSR2BLeaveRoomReq::IsInitialized() const {
  return true;
}

void SSR2BLeaveRoomReq::InternalSwap(SSR2BLeaveRoomReq* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SSR2BLeaveRoomReq, accountid_)
      + sizeof(SSR2BLeaveRoomReq::accountid_)
      - PROTOBUF_FIELD_OFFSET(SSR2BLeaveRoomReq, roomid_)>(
          reinterpret_cast<char*>(&roomid_),
          reinterpret_cast<char*>(&other->roomid_));
}

::PROTOBUF_NAMESPACE_ID::Metadata SSR2BLeaveRoomReq::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class SSB2RLeaveRoomRsp::_Internal {
 public:
};

SSB2RLeaveRoomRsp::SSB2RLeaveRoomRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:pb.SSB2RLeaveRoomRsp)
}
SSB2RLeaveRoomRsp::SSB2RLeaveRoomRsp(const SSB2RLeaveRoomRsp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&roomid_, &from.roomid_,
    static_cast<size_t>(reinterpret_cast<char*>(&retcode_) -
    reinterpret_cast<char*>(&roomid_)) + sizeof(retcode_));
  // @@protoc_insertion_point(copy_constructor:pb.SSB2RLeaveRoomRsp)
}

void SSB2RLeaveRoomRsp::SharedCtor() {
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&roomid_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&retcode_) -
      reinterpret_cast<char*>(&roomid_)) + sizeof(retcode_));
}

SSB2RLeaveRoomRsp::~SSB2RLeaveRoomRsp() {
  // @@protoc_insertion_point(destructor:pb.SSB2RLeaveRoomRsp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SSB2RLeaveRoomRsp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void SSB2RLeaveRoomRsp::ArenaDtor(void* object) {
  SSB2RLeaveRoomRsp* _this = reinterpret_cast< SSB2RLeaveRoomRsp* >(object);
  (void)_this;
}
void SSB2RLeaveRoomRsp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SSB2RLeaveRoomRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SSB2RLeaveRoomRsp& SSB2RLeaveRoomRsp::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SSB2RLeaveRoomRsp_room_5fbattle_2eproto.base);
  return *internal_default_instance();
}


void SSB2RLeaveRoomRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.SSB2RLeaveRoomRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&roomid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&retcode_) -
      reinterpret_cast<char*>(&roomid_)) + sizeof(retcode_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SSB2RLeaveRoomRsp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .pb.SSB2RLeaveRoomRsp.Retcode retcode = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_retcode(static_cast<::pb::SSB2RLeaveRoomRsp_Retcode>(val));
        } else goto handle_unusual;
        continue;
      // uint64 roomid = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          roomid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SSB2RLeaveRoomRsp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.SSB2RLeaveRoomRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .pb.SSB2RLeaveRoomRsp.Retcode retcode = 1;
  if (this->retcode() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_retcode(), target);
  }

  // uint64 roomid = 2;
  if (this->roomid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(2, this->_internal_roomid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.SSB2RLeaveRoomRsp)
  return target;
}

size_t SSB2RLeaveRoomRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.SSB2RLeaveRoomRsp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint64 roomid = 2;
  if (this->roomid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_roomid());
  }

  // .pb.SSB2RLeaveRoomRsp.Retcode retcode = 1;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_retcode());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SSB2RLeaveRoomRsp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.SSB2RLeaveRoomRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const SSB2RLeaveRoomRsp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SSB2RLeaveRoomRsp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.SSB2RLeaveRoomRsp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.SSB2RLeaveRoomRsp)
    MergeFrom(*source);
  }
}

void SSB2RLeaveRoomRsp::MergeFrom(const SSB2RLeaveRoomRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.SSB2RLeaveRoomRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.roomid() != 0) {
    _internal_set_roomid(from._internal_roomid());
  }
  if (from.retcode() != 0) {
    _internal_set_retcode(from._internal_retcode());
  }
}

void SSB2RLeaveRoomRsp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.SSB2RLeaveRoomRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SSB2RLeaveRoomRsp::CopyFrom(const SSB2RLeaveRoomRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.SSB2RLeaveRoomRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SSB2RLeaveRoomRsp::IsInitialized() const {
  return true;
}

void SSB2RLeaveRoomRsp::InternalSwap(SSB2RLeaveRoomRsp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SSB2RLeaveRoomRsp, retcode_)
      + sizeof(SSB2RLeaveRoomRsp::retcode_)
      - PROTOBUF_FIELD_OFFSET(SSB2RLeaveRoomRsp, roomid_)>(
          reinterpret_cast<char*>(&roomid_),
          reinterpret_cast<char*>(&other->roomid_));
}

::PROTOBUF_NAMESPACE_ID::Metadata SSB2RLeaveRoomRsp::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace pb
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::pb::PlayerInfo* Arena::CreateMaybeMessage< ::pb::PlayerInfo >(Arena* arena) {
  return Arena::CreateMessageInternal< ::pb::PlayerInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::pb::SSR2BCreateRoomReq* Arena::CreateMaybeMessage< ::pb::SSR2BCreateRoomReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::pb::SSR2BCreateRoomReq >(arena);
}
template<> PROTOBUF_NOINLINE ::pb::SSB2RCreateRoomRsp* Arena::CreateMaybeMessage< ::pb::SSB2RCreateRoomRsp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::pb::SSB2RCreateRoomRsp >(arena);
}
template<> PROTOBUF_NOINLINE ::pb::SSR2BJoinRoomReq* Arena::CreateMaybeMessage< ::pb::SSR2BJoinRoomReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::pb::SSR2BJoinRoomReq >(arena);
}
template<> PROTOBUF_NOINLINE ::pb::SSB2RJoinRoomRsp* Arena::CreateMaybeMessage< ::pb::SSB2RJoinRoomRsp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::pb::SSB2RJoinRoomRsp >(arena);
}
template<> PROTOBUF_NOINLINE ::pb::SSR2BLeaveRoomReq* Arena::CreateMaybeMessage< ::pb::SSR2BLeaveRoomReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::pb::SSR2BLeaveRoomReq >(arena);
}
template<> PROTOBUF_NOINLINE ::pb::SSB2RLeaveRoomRsp* Arena::CreateMaybeMessage< ::pb::SSB2RLeaveRoomRsp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::pb::SSB2RLeaveRoomRsp >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
