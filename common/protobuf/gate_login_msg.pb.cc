// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: gate_login_msg.proto

#include "gate_login_msg.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_CsCmd_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_LoginAuthCsReq_CsCmd_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_CsCmd_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_LoginAuthScRsp_CsCmd_2eproto;
namespace pb {
class SSGate2LLoginAuthReqDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SSGate2LLoginAuthReq> _instance;
} _SSGate2LLoginAuthReq_default_instance_;
class SSLogin2GLoginAuthRspDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SSLogin2GLoginAuthRsp> _instance;
} _SSLogin2GLoginAuthRsp_default_instance_;
}  // namespace pb
static void InitDefaultsscc_info_SSGate2LLoginAuthReq_gate_5flogin_5fmsg_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pb::_SSGate2LLoginAuthReq_default_instance_;
    new (ptr) ::pb::SSGate2LLoginAuthReq();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_SSGate2LLoginAuthReq_gate_5flogin_5fmsg_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_SSGate2LLoginAuthReq_gate_5flogin_5fmsg_2eproto}, {
      &scc_info_LoginAuthCsReq_CsCmd_2eproto.base,}};

static void InitDefaultsscc_info_SSLogin2GLoginAuthRsp_gate_5flogin_5fmsg_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pb::_SSLogin2GLoginAuthRsp_default_instance_;
    new (ptr) ::pb::SSLogin2GLoginAuthRsp();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_SSLogin2GLoginAuthRsp_gate_5flogin_5fmsg_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_SSLogin2GLoginAuthRsp_gate_5flogin_5fmsg_2eproto}, {
      &scc_info_LoginAuthScRsp_CsCmd_2eproto.base,}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_gate_5flogin_5fmsg_2eproto[2];
static const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* file_level_enum_descriptors_gate_5flogin_5fmsg_2eproto[1];
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_gate_5flogin_5fmsg_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_gate_5flogin_5fmsg_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::pb::SSGate2LLoginAuthReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::pb::SSGate2LLoginAuthReq, request_id_),
  PROTOBUF_FIELD_OFFSET(::pb::SSGate2LLoginAuthReq, req_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::pb::SSLogin2GLoginAuthRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::pb::SSLogin2GLoginAuthRsp, request_id_),
  PROTOBUF_FIELD_OFFSET(::pb::SSLogin2GLoginAuthRsp, rsp_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::pb::SSGate2LLoginAuthReq)},
  { 7, -1, sizeof(::pb::SSLogin2GLoginAuthRsp)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::pb::_SSGate2LLoginAuthReq_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::pb::_SSLogin2GLoginAuthRsp_default_instance_),
};

const char descriptor_table_protodef_gate_5flogin_5fmsg_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\024gate_login_msg.proto\022\002pb\032\013CsCmd.proto\""
  "K\n\024SSGate2LLoginAuthReq\022\022\n\nrequest_id\030\001 "
  "\001(\r\022\037\n\003req\030\002 \001(\0132\022.pb.LoginAuthCsReq\"L\n\025"
  "SSLogin2GLoginAuthRsp\022\022\n\nrequest_id\030\001 \001("
  "\r\022\037\n\003rsp\030\002 \001(\0132\022.pb.LoginAuthScRsp*t\n\021SS"
  "_GATE_LOGIN_CMD\022\031\n\025SS_GATE_LOGIN_DEFUALT"
  "\020\000\022!\n\033SS_GATE_LOGIN_LOGINAUTH_REQ\020\261\352\001\022!\n"
  "\033SS_LOGIN_GATE_LOGINAUTH_RSP\020\262\352\001b\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_gate_5flogin_5fmsg_2eproto_deps[1] = {
  &::descriptor_table_CsCmd_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_gate_5flogin_5fmsg_2eproto_sccs[2] = {
  &scc_info_SSGate2LLoginAuthReq_gate_5flogin_5fmsg_2eproto.base,
  &scc_info_SSLogin2GLoginAuthRsp_gate_5flogin_5fmsg_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_gate_5flogin_5fmsg_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_gate_5flogin_5fmsg_2eproto = {
  false, false, descriptor_table_protodef_gate_5flogin_5fmsg_2eproto, "gate_login_msg.proto", 320,
  &descriptor_table_gate_5flogin_5fmsg_2eproto_once, descriptor_table_gate_5flogin_5fmsg_2eproto_sccs, descriptor_table_gate_5flogin_5fmsg_2eproto_deps, 2, 1,
  schemas, file_default_instances, TableStruct_gate_5flogin_5fmsg_2eproto::offsets,
  file_level_metadata_gate_5flogin_5fmsg_2eproto, 2, file_level_enum_descriptors_gate_5flogin_5fmsg_2eproto, file_level_service_descriptors_gate_5flogin_5fmsg_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_gate_5flogin_5fmsg_2eproto = (static_cast<void>(::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_gate_5flogin_5fmsg_2eproto)), true);
namespace pb {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* SS_GATE_LOGIN_CMD_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_gate_5flogin_5fmsg_2eproto);
  return file_level_enum_descriptors_gate_5flogin_5fmsg_2eproto[0];
}
bool SS_GATE_LOGIN_CMD_IsValid(int value) {
  switch (value) {
    case 0:
    case 30001:
    case 30002:
      return true;
    default:
      return false;
  }
}


// ===================================================================

class SSGate2LLoginAuthReq::_Internal {
 public:
  static const ::pb::LoginAuthCsReq& req(const SSGate2LLoginAuthReq* msg);
};

const ::pb::LoginAuthCsReq&
SSGate2LLoginAuthReq::_Internal::req(const SSGate2LLoginAuthReq* msg) {
  return *msg->req_;
}
void SSGate2LLoginAuthReq::clear_req() {
  if (GetArena() == nullptr && req_ != nullptr) {
    delete req_;
  }
  req_ = nullptr;
}
SSGate2LLoginAuthReq::SSGate2LLoginAuthReq(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:pb.SSGate2LLoginAuthReq)
}
SSGate2LLoginAuthReq::SSGate2LLoginAuthReq(const SSGate2LLoginAuthReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_req()) {
    req_ = new ::pb::LoginAuthCsReq(*from.req_);
  } else {
    req_ = nullptr;
  }
  request_id_ = from.request_id_;
  // @@protoc_insertion_point(copy_constructor:pb.SSGate2LLoginAuthReq)
}

void SSGate2LLoginAuthReq::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_SSGate2LLoginAuthReq_gate_5flogin_5fmsg_2eproto.base);
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&req_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&request_id_) -
      reinterpret_cast<char*>(&req_)) + sizeof(request_id_));
}

SSGate2LLoginAuthReq::~SSGate2LLoginAuthReq() {
  // @@protoc_insertion_point(destructor:pb.SSGate2LLoginAuthReq)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SSGate2LLoginAuthReq::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete req_;
}

void SSGate2LLoginAuthReq::ArenaDtor(void* object) {
  SSGate2LLoginAuthReq* _this = reinterpret_cast< SSGate2LLoginAuthReq* >(object);
  (void)_this;
}
void SSGate2LLoginAuthReq::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SSGate2LLoginAuthReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SSGate2LLoginAuthReq& SSGate2LLoginAuthReq::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SSGate2LLoginAuthReq_gate_5flogin_5fmsg_2eproto.base);
  return *internal_default_instance();
}


void SSGate2LLoginAuthReq::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.SSGate2LLoginAuthReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && req_ != nullptr) {
    delete req_;
  }
  req_ = nullptr;
  request_id_ = 0u;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SSGate2LLoginAuthReq::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint32 request_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          request_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .pb.LoginAuthCsReq req = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_req(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SSGate2LLoginAuthReq::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.SSGate2LLoginAuthReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 request_id = 1;
  if (this->request_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_request_id(), target);
  }

  // .pb.LoginAuthCsReq req = 2;
  if (this->has_req()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::req(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.SSGate2LLoginAuthReq)
  return target;
}

size_t SSGate2LLoginAuthReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.SSGate2LLoginAuthReq)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .pb.LoginAuthCsReq req = 2;
  if (this->has_req()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *req_);
  }

  // uint32 request_id = 1;
  if (this->request_id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_request_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SSGate2LLoginAuthReq::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.SSGate2LLoginAuthReq)
  GOOGLE_DCHECK_NE(&from, this);
  const SSGate2LLoginAuthReq* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SSGate2LLoginAuthReq>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.SSGate2LLoginAuthReq)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.SSGate2LLoginAuthReq)
    MergeFrom(*source);
  }
}

void SSGate2LLoginAuthReq::MergeFrom(const SSGate2LLoginAuthReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.SSGate2LLoginAuthReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_req()) {
    _internal_mutable_req()->::pb::LoginAuthCsReq::MergeFrom(from._internal_req());
  }
  if (from.request_id() != 0) {
    _internal_set_request_id(from._internal_request_id());
  }
}

void SSGate2LLoginAuthReq::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.SSGate2LLoginAuthReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SSGate2LLoginAuthReq::CopyFrom(const SSGate2LLoginAuthReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.SSGate2LLoginAuthReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SSGate2LLoginAuthReq::IsInitialized() const {
  return true;
}

void SSGate2LLoginAuthReq::InternalSwap(SSGate2LLoginAuthReq* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SSGate2LLoginAuthReq, request_id_)
      + sizeof(SSGate2LLoginAuthReq::request_id_)
      - PROTOBUF_FIELD_OFFSET(SSGate2LLoginAuthReq, req_)>(
          reinterpret_cast<char*>(&req_),
          reinterpret_cast<char*>(&other->req_));
}

::PROTOBUF_NAMESPACE_ID::Metadata SSGate2LLoginAuthReq::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class SSLogin2GLoginAuthRsp::_Internal {
 public:
  static const ::pb::LoginAuthScRsp& rsp(const SSLogin2GLoginAuthRsp* msg);
};

const ::pb::LoginAuthScRsp&
SSLogin2GLoginAuthRsp::_Internal::rsp(const SSLogin2GLoginAuthRsp* msg) {
  return *msg->rsp_;
}
void SSLogin2GLoginAuthRsp::clear_rsp() {
  if (GetArena() == nullptr && rsp_ != nullptr) {
    delete rsp_;
  }
  rsp_ = nullptr;
}
SSLogin2GLoginAuthRsp::SSLogin2GLoginAuthRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:pb.SSLogin2GLoginAuthRsp)
}
SSLogin2GLoginAuthRsp::SSLogin2GLoginAuthRsp(const SSLogin2GLoginAuthRsp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_rsp()) {
    rsp_ = new ::pb::LoginAuthScRsp(*from.rsp_);
  } else {
    rsp_ = nullptr;
  }
  request_id_ = from.request_id_;
  // @@protoc_insertion_point(copy_constructor:pb.SSLogin2GLoginAuthRsp)
}

void SSLogin2GLoginAuthRsp::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_SSLogin2GLoginAuthRsp_gate_5flogin_5fmsg_2eproto.base);
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&rsp_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&request_id_) -
      reinterpret_cast<char*>(&rsp_)) + sizeof(request_id_));
}

SSLogin2GLoginAuthRsp::~SSLogin2GLoginAuthRsp() {
  // @@protoc_insertion_point(destructor:pb.SSLogin2GLoginAuthRsp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SSLogin2GLoginAuthRsp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete rsp_;
}

void SSLogin2GLoginAuthRsp::ArenaDtor(void* object) {
  SSLogin2GLoginAuthRsp* _this = reinterpret_cast< SSLogin2GLoginAuthRsp* >(object);
  (void)_this;
}
void SSLogin2GLoginAuthRsp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SSLogin2GLoginAuthRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SSLogin2GLoginAuthRsp& SSLogin2GLoginAuthRsp::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SSLogin2GLoginAuthRsp_gate_5flogin_5fmsg_2eproto.base);
  return *internal_default_instance();
}


void SSLogin2GLoginAuthRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.SSLogin2GLoginAuthRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && rsp_ != nullptr) {
    delete rsp_;
  }
  rsp_ = nullptr;
  request_id_ = 0u;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SSLogin2GLoginAuthRsp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint32 request_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          request_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .pb.LoginAuthScRsp rsp = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_rsp(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SSLogin2GLoginAuthRsp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.SSLogin2GLoginAuthRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 request_id = 1;
  if (this->request_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_request_id(), target);
  }

  // .pb.LoginAuthScRsp rsp = 2;
  if (this->has_rsp()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::rsp(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.SSLogin2GLoginAuthRsp)
  return target;
}

size_t SSLogin2GLoginAuthRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.SSLogin2GLoginAuthRsp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .pb.LoginAuthScRsp rsp = 2;
  if (this->has_rsp()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *rsp_);
  }

  // uint32 request_id = 1;
  if (this->request_id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_request_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SSLogin2GLoginAuthRsp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.SSLogin2GLoginAuthRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const SSLogin2GLoginAuthRsp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SSLogin2GLoginAuthRsp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.SSLogin2GLoginAuthRsp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.SSLogin2GLoginAuthRsp)
    MergeFrom(*source);
  }
}

void SSLogin2GLoginAuthRsp::MergeFrom(const SSLogin2GLoginAuthRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.SSLogin2GLoginAuthRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_rsp()) {
    _internal_mutable_rsp()->::pb::LoginAuthScRsp::MergeFrom(from._internal_rsp());
  }
  if (from.request_id() != 0) {
    _internal_set_request_id(from._internal_request_id());
  }
}

void SSLogin2GLoginAuthRsp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.SSLogin2GLoginAuthRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SSLogin2GLoginAuthRsp::CopyFrom(const SSLogin2GLoginAuthRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.SSLogin2GLoginAuthRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SSLogin2GLoginAuthRsp::IsInitialized() const {
  return true;
}

void SSLogin2GLoginAuthRsp::InternalSwap(SSLogin2GLoginAuthRsp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SSLogin2GLoginAuthRsp, request_id_)
      + sizeof(SSLogin2GLoginAuthRsp::request_id_)
      - PROTOBUF_FIELD_OFFSET(SSLogin2GLoginAuthRsp, rsp_)>(
          reinterpret_cast<char*>(&rsp_),
          reinterpret_cast<char*>(&other->rsp_));
}

::PROTOBUF_NAMESPACE_ID::Metadata SSLogin2GLoginAuthRsp::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace pb
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::pb::SSGate2LLoginAuthReq* Arena::CreateMaybeMessage< ::pb::SSGate2LLoginAuthReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::pb::SSGate2LLoginAuthReq >(arena);
}
template<> PROTOBUF_NOINLINE ::pb::SSLogin2GLoginAuthRsp* Arena::CreateMaybeMessage< ::pb::SSLogin2GLoginAuthRsp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::pb::SSLogin2GLoginAuthRsp >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
