// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: login_db_msg.proto

#include "login_db_msg.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_gate_5flogin_5fmsg_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_SSGate2LLoginAuthReq_gate_5flogin_5fmsg_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_gate_5flogin_5fmsg_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_SSLogin2GLoginAuthRsp_gate_5flogin_5fmsg_2eproto;
namespace pb {
class SSLogin2DLoginAuthReqDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SSLogin2DLoginAuthReq> _instance;
} _SSLogin2DLoginAuthReq_default_instance_;
class SSDB2LLoginAuthRspDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SSDB2LLoginAuthRsp> _instance;
} _SSDB2LLoginAuthRsp_default_instance_;
}  // namespace pb
static void InitDefaultsscc_info_SSDB2LLoginAuthRsp_login_5fdb_5fmsg_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pb::_SSDB2LLoginAuthRsp_default_instance_;
    new (ptr) ::pb::SSDB2LLoginAuthRsp();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_SSDB2LLoginAuthRsp_login_5fdb_5fmsg_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_SSDB2LLoginAuthRsp_login_5fdb_5fmsg_2eproto}, {
      &scc_info_SSLogin2GLoginAuthRsp_gate_5flogin_5fmsg_2eproto.base,}};

static void InitDefaultsscc_info_SSLogin2DLoginAuthReq_login_5fdb_5fmsg_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pb::_SSLogin2DLoginAuthReq_default_instance_;
    new (ptr) ::pb::SSLogin2DLoginAuthReq();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_SSLogin2DLoginAuthReq_login_5fdb_5fmsg_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_SSLogin2DLoginAuthReq_login_5fdb_5fmsg_2eproto}, {
      &scc_info_SSGate2LLoginAuthReq_gate_5flogin_5fmsg_2eproto.base,}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_login_5fdb_5fmsg_2eproto[2];
static const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* file_level_enum_descriptors_login_5fdb_5fmsg_2eproto[1];
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_login_5fdb_5fmsg_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_login_5fdb_5fmsg_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::pb::SSLogin2DLoginAuthReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::pb::SSLogin2DLoginAuthReq, request_id_),
  PROTOBUF_FIELD_OFFSET(::pb::SSLogin2DLoginAuthReq, req_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::pb::SSDB2LLoginAuthRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::pb::SSDB2LLoginAuthRsp, request_id_),
  PROTOBUF_FIELD_OFFSET(::pb::SSDB2LLoginAuthRsp, rsp_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::pb::SSLogin2DLoginAuthReq)},
  { 7, -1, sizeof(::pb::SSDB2LLoginAuthRsp)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::pb::_SSLogin2DLoginAuthReq_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::pb::_SSDB2LLoginAuthRsp_default_instance_),
};

const char descriptor_table_protodef_login_5fdb_5fmsg_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\022login_db_msg.proto\022\002pb\032\024gate_login_msg"
  ".proto\"R\n\025SSLogin2DLoginAuthReq\022\022\n\nreque"
  "st_id\030\001 \001(\r\022%\n\003req\030\002 \001(\0132\030.pb.SSGate2LLo"
  "ginAuthReq\"P\n\022SSDB2LLoginAuthRsp\022\022\n\nrequ"
  "est_id\030\001 \001(\r\022&\n\003rsp\030\002 \001(\0132\031.pb.SSLogin2G"
  "LoginAuthRsp*`\n\017SS_LOGIN_DB_CMD\022\027\n\023SS_LO"
  "GIN_DB_DEFAULT\020\000\022\031\n\024SS_LOGIN_DB_AUTH_REQ"
  "\020\255\002\022\031\n\024SS_DB_LOGIN_AUTH_RSP\020\256\002b\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_login_5fdb_5fmsg_2eproto_deps[1] = {
  &::descriptor_table_gate_5flogin_5fmsg_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_login_5fdb_5fmsg_2eproto_sccs[2] = {
  &scc_info_SSDB2LLoginAuthRsp_login_5fdb_5fmsg_2eproto.base,
  &scc_info_SSLogin2DLoginAuthReq_login_5fdb_5fmsg_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_login_5fdb_5fmsg_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_login_5fdb_5fmsg_2eproto = {
  false, false, descriptor_table_protodef_login_5fdb_5fmsg_2eproto, "login_db_msg.proto", 318,
  &descriptor_table_login_5fdb_5fmsg_2eproto_once, descriptor_table_login_5fdb_5fmsg_2eproto_sccs, descriptor_table_login_5fdb_5fmsg_2eproto_deps, 2, 1,
  schemas, file_default_instances, TableStruct_login_5fdb_5fmsg_2eproto::offsets,
  file_level_metadata_login_5fdb_5fmsg_2eproto, 2, file_level_enum_descriptors_login_5fdb_5fmsg_2eproto, file_level_service_descriptors_login_5fdb_5fmsg_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_login_5fdb_5fmsg_2eproto = (static_cast<void>(::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_login_5fdb_5fmsg_2eproto)), true);
namespace pb {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* SS_LOGIN_DB_CMD_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_login_5fdb_5fmsg_2eproto);
  return file_level_enum_descriptors_login_5fdb_5fmsg_2eproto[0];
}
bool SS_LOGIN_DB_CMD_IsValid(int value) {
  switch (value) {
    case 0:
    case 301:
    case 302:
      return true;
    default:
      return false;
  }
}


// ===================================================================

class SSLogin2DLoginAuthReq::_Internal {
 public:
  static const ::pb::SSGate2LLoginAuthReq& req(const SSLogin2DLoginAuthReq* msg);
};

const ::pb::SSGate2LLoginAuthReq&
SSLogin2DLoginAuthReq::_Internal::req(const SSLogin2DLoginAuthReq* msg) {
  return *msg->req_;
}
void SSLogin2DLoginAuthReq::clear_req() {
  if (GetArena() == nullptr && req_ != nullptr) {
    delete req_;
  }
  req_ = nullptr;
}
SSLogin2DLoginAuthReq::SSLogin2DLoginAuthReq(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:pb.SSLogin2DLoginAuthReq)
}
SSLogin2DLoginAuthReq::SSLogin2DLoginAuthReq(const SSLogin2DLoginAuthReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_req()) {
    req_ = new ::pb::SSGate2LLoginAuthReq(*from.req_);
  } else {
    req_ = nullptr;
  }
  request_id_ = from.request_id_;
  // @@protoc_insertion_point(copy_constructor:pb.SSLogin2DLoginAuthReq)
}

void SSLogin2DLoginAuthReq::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_SSLogin2DLoginAuthReq_login_5fdb_5fmsg_2eproto.base);
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&req_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&request_id_) -
      reinterpret_cast<char*>(&req_)) + sizeof(request_id_));
}

SSLogin2DLoginAuthReq::~SSLogin2DLoginAuthReq() {
  // @@protoc_insertion_point(destructor:pb.SSLogin2DLoginAuthReq)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SSLogin2DLoginAuthReq::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete req_;
}

void SSLogin2DLoginAuthReq::ArenaDtor(void* object) {
  SSLogin2DLoginAuthReq* _this = reinterpret_cast< SSLogin2DLoginAuthReq* >(object);
  (void)_this;
}
void SSLogin2DLoginAuthReq::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SSLogin2DLoginAuthReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SSLogin2DLoginAuthReq& SSLogin2DLoginAuthReq::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SSLogin2DLoginAuthReq_login_5fdb_5fmsg_2eproto.base);
  return *internal_default_instance();
}


void SSLogin2DLoginAuthReq::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.SSLogin2DLoginAuthReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && req_ != nullptr) {
    delete req_;
  }
  req_ = nullptr;
  request_id_ = 0u;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SSLogin2DLoginAuthReq::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint32 request_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          request_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .pb.SSGate2LLoginAuthReq req = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_req(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SSLogin2DLoginAuthReq::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.SSLogin2DLoginAuthReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 request_id = 1;
  if (this->request_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_request_id(), target);
  }

  // .pb.SSGate2LLoginAuthReq req = 2;
  if (this->has_req()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::req(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.SSLogin2DLoginAuthReq)
  return target;
}

size_t SSLogin2DLoginAuthReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.SSLogin2DLoginAuthReq)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .pb.SSGate2LLoginAuthReq req = 2;
  if (this->has_req()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *req_);
  }

  // uint32 request_id = 1;
  if (this->request_id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_request_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SSLogin2DLoginAuthReq::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.SSLogin2DLoginAuthReq)
  GOOGLE_DCHECK_NE(&from, this);
  const SSLogin2DLoginAuthReq* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SSLogin2DLoginAuthReq>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.SSLogin2DLoginAuthReq)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.SSLogin2DLoginAuthReq)
    MergeFrom(*source);
  }
}

void SSLogin2DLoginAuthReq::MergeFrom(const SSLogin2DLoginAuthReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.SSLogin2DLoginAuthReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_req()) {
    _internal_mutable_req()->::pb::SSGate2LLoginAuthReq::MergeFrom(from._internal_req());
  }
  if (from.request_id() != 0) {
    _internal_set_request_id(from._internal_request_id());
  }
}

void SSLogin2DLoginAuthReq::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.SSLogin2DLoginAuthReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SSLogin2DLoginAuthReq::CopyFrom(const SSLogin2DLoginAuthReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.SSLogin2DLoginAuthReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SSLogin2DLoginAuthReq::IsInitialized() const {
  return true;
}

void SSLogin2DLoginAuthReq::InternalSwap(SSLogin2DLoginAuthReq* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SSLogin2DLoginAuthReq, request_id_)
      + sizeof(SSLogin2DLoginAuthReq::request_id_)
      - PROTOBUF_FIELD_OFFSET(SSLogin2DLoginAuthReq, req_)>(
          reinterpret_cast<char*>(&req_),
          reinterpret_cast<char*>(&other->req_));
}

::PROTOBUF_NAMESPACE_ID::Metadata SSLogin2DLoginAuthReq::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class SSDB2LLoginAuthRsp::_Internal {
 public:
  static const ::pb::SSLogin2GLoginAuthRsp& rsp(const SSDB2LLoginAuthRsp* msg);
};

const ::pb::SSLogin2GLoginAuthRsp&
SSDB2LLoginAuthRsp::_Internal::rsp(const SSDB2LLoginAuthRsp* msg) {
  return *msg->rsp_;
}
void SSDB2LLoginAuthRsp::clear_rsp() {
  if (GetArena() == nullptr && rsp_ != nullptr) {
    delete rsp_;
  }
  rsp_ = nullptr;
}
SSDB2LLoginAuthRsp::SSDB2LLoginAuthRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:pb.SSDB2LLoginAuthRsp)
}
SSDB2LLoginAuthRsp::SSDB2LLoginAuthRsp(const SSDB2LLoginAuthRsp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_rsp()) {
    rsp_ = new ::pb::SSLogin2GLoginAuthRsp(*from.rsp_);
  } else {
    rsp_ = nullptr;
  }
  request_id_ = from.request_id_;
  // @@protoc_insertion_point(copy_constructor:pb.SSDB2LLoginAuthRsp)
}

void SSDB2LLoginAuthRsp::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_SSDB2LLoginAuthRsp_login_5fdb_5fmsg_2eproto.base);
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&rsp_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&request_id_) -
      reinterpret_cast<char*>(&rsp_)) + sizeof(request_id_));
}

SSDB2LLoginAuthRsp::~SSDB2LLoginAuthRsp() {
  // @@protoc_insertion_point(destructor:pb.SSDB2LLoginAuthRsp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SSDB2LLoginAuthRsp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete rsp_;
}

void SSDB2LLoginAuthRsp::ArenaDtor(void* object) {
  SSDB2LLoginAuthRsp* _this = reinterpret_cast< SSDB2LLoginAuthRsp* >(object);
  (void)_this;
}
void SSDB2LLoginAuthRsp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SSDB2LLoginAuthRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SSDB2LLoginAuthRsp& SSDB2LLoginAuthRsp::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SSDB2LLoginAuthRsp_login_5fdb_5fmsg_2eproto.base);
  return *internal_default_instance();
}


void SSDB2LLoginAuthRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.SSDB2LLoginAuthRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && rsp_ != nullptr) {
    delete rsp_;
  }
  rsp_ = nullptr;
  request_id_ = 0u;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SSDB2LLoginAuthRsp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint32 request_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          request_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .pb.SSLogin2GLoginAuthRsp rsp = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_rsp(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SSDB2LLoginAuthRsp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.SSDB2LLoginAuthRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 request_id = 1;
  if (this->request_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_request_id(), target);
  }

  // .pb.SSLogin2GLoginAuthRsp rsp = 2;
  if (this->has_rsp()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::rsp(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.SSDB2LLoginAuthRsp)
  return target;
}

size_t SSDB2LLoginAuthRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.SSDB2LLoginAuthRsp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .pb.SSLogin2GLoginAuthRsp rsp = 2;
  if (this->has_rsp()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *rsp_);
  }

  // uint32 request_id = 1;
  if (this->request_id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_request_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SSDB2LLoginAuthRsp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.SSDB2LLoginAuthRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const SSDB2LLoginAuthRsp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SSDB2LLoginAuthRsp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.SSDB2LLoginAuthRsp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.SSDB2LLoginAuthRsp)
    MergeFrom(*source);
  }
}

void SSDB2LLoginAuthRsp::MergeFrom(const SSDB2LLoginAuthRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.SSDB2LLoginAuthRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_rsp()) {
    _internal_mutable_rsp()->::pb::SSLogin2GLoginAuthRsp::MergeFrom(from._internal_rsp());
  }
  if (from.request_id() != 0) {
    _internal_set_request_id(from._internal_request_id());
  }
}

void SSDB2LLoginAuthRsp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.SSDB2LLoginAuthRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SSDB2LLoginAuthRsp::CopyFrom(const SSDB2LLoginAuthRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.SSDB2LLoginAuthRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SSDB2LLoginAuthRsp::IsInitialized() const {
  return true;
}

void SSDB2LLoginAuthRsp::InternalSwap(SSDB2LLoginAuthRsp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SSDB2LLoginAuthRsp, request_id_)
      + sizeof(SSDB2LLoginAuthRsp::request_id_)
      - PROTOBUF_FIELD_OFFSET(SSDB2LLoginAuthRsp, rsp_)>(
          reinterpret_cast<char*>(&rsp_),
          reinterpret_cast<char*>(&other->rsp_));
}

::PROTOBUF_NAMESPACE_ID::Metadata SSDB2LLoginAuthRsp::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace pb
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::pb::SSLogin2DLoginAuthReq* Arena::CreateMaybeMessage< ::pb::SSLogin2DLoginAuthReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::pb::SSLogin2DLoginAuthReq >(arena);
}
template<> PROTOBUF_NOINLINE ::pb::SSDB2LLoginAuthRsp* Arena::CreateMaybeMessage< ::pb::SSDB2LLoginAuthRsp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::pb::SSDB2LLoginAuthRsp >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
