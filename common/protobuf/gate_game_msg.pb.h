// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: gate_game_msg.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_gate_5fgame_5fmsg_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_gate_5fgame_5fmsg_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3014000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3014000 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "CsCmd.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_gate_5fgame_5fmsg_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_gate_5fgame_5fmsg_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxiliaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[20]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_gate_5fgame_5fmsg_2eproto;
namespace pb {
class AccountInfo;
class AccountInfoDefaultTypeInternal;
extern AccountInfoDefaultTypeInternal _AccountInfo_default_instance_;
class SSAccountInfoNotify;
class SSAccountInfoNotifyDefaultTypeInternal;
extern SSAccountInfoNotifyDefaultTypeInternal _SSAccountInfoNotify_default_instance_;
class SSBattleMsgNotify;
class SSBattleMsgNotifyDefaultTypeInternal;
extern SSBattleMsgNotifyDefaultTypeInternal _SSBattleMsgNotify_default_instance_;
class SSForceUserDisConnectReq;
class SSForceUserDisConnectReqDefaultTypeInternal;
extern SSForceUserDisConnectReqDefaultTypeInternal _SSForceUserDisConnectReq_default_instance_;
class SSForceUserDisConnectRsp;
class SSForceUserDisConnectRspDefaultTypeInternal;
extern SSForceUserDisConnectRspDefaultTypeInternal _SSForceUserDisConnectRsp_default_instance_;
class SSGame2GChooseLevelRsp;
class SSGame2GChooseLevelRspDefaultTypeInternal;
extern SSGame2GChooseLevelRspDefaultTypeInternal _SSGame2GChooseLevelRsp_default_instance_;
class SSGame2GCreateRoomRsp;
class SSGame2GCreateRoomRspDefaultTypeInternal;
extern SSGame2GCreateRoomRspDefaultTypeInternal _SSGame2GCreateRoomRsp_default_instance_;
class SSGame2GEnterRoomRsp;
class SSGame2GEnterRoomRspDefaultTypeInternal;
extern SSGame2GEnterRoomRspDefaultTypeInternal _SSGame2GEnterRoomRsp_default_instance_;
class SSGame2GLeaveRoomRsp;
class SSGame2GLeaveRoomRspDefaultTypeInternal;
extern SSGame2GLeaveRoomRspDefaultTypeInternal _SSGame2GLeaveRoomRsp_default_instance_;
class SSGame2GReadyRoomRsp;
class SSGame2GReadyRoomRspDefaultTypeInternal;
extern SSGame2GReadyRoomRspDefaultTypeInternal _SSGame2GReadyRoomRsp_default_instance_;
class SSGame2GRoomMsgNotify;
class SSGame2GRoomMsgNotifyDefaultTypeInternal;
extern SSGame2GRoomMsgNotifyDefaultTypeInternal _SSGame2GRoomMsgNotify_default_instance_;
class SSGate2GChooseLevelReq;
class SSGate2GChooseLevelReqDefaultTypeInternal;
extern SSGate2GChooseLevelReqDefaultTypeInternal _SSGate2GChooseLevelReq_default_instance_;
class SSGate2GCreateRoomReq;
class SSGate2GCreateRoomReqDefaultTypeInternal;
extern SSGate2GCreateRoomReqDefaultTypeInternal _SSGate2GCreateRoomReq_default_instance_;
class SSGate2GEnterRoomReq;
class SSGate2GEnterRoomReqDefaultTypeInternal;
extern SSGate2GEnterRoomReqDefaultTypeInternal _SSGate2GEnterRoomReq_default_instance_;
class SSGate2GLeaveRoomReq;
class SSGate2GLeaveRoomReqDefaultTypeInternal;
extern SSGate2GLeaveRoomReqDefaultTypeInternal _SSGate2GLeaveRoomReq_default_instance_;
class SSGate2GReadyRoomReq;
class SSGate2GReadyRoomReqDefaultTypeInternal;
extern SSGate2GReadyRoomReqDefaultTypeInternal _SSGate2GReadyRoomReq_default_instance_;
class SSGate2GUserDisConnectNotify;
class SSGate2GUserDisConnectNotifyDefaultTypeInternal;
extern SSGate2GUserDisConnectNotifyDefaultTypeInternal _SSGate2GUserDisConnectNotify_default_instance_;
class SSGateLoginReq;
class SSGateLoginReqDefaultTypeInternal;
extern SSGateLoginReqDefaultTypeInternal _SSGateLoginReq_default_instance_;
class SSGateLoginRsp;
class SSGateLoginRspDefaultTypeInternal;
extern SSGateLoginRspDefaultTypeInternal _SSGateLoginRsp_default_instance_;
class UserOnlineInfoCache;
class UserOnlineInfoCacheDefaultTypeInternal;
extern UserOnlineInfoCacheDefaultTypeInternal _UserOnlineInfoCache_default_instance_;
}  // namespace pb
PROTOBUF_NAMESPACE_OPEN
template<> ::pb::AccountInfo* Arena::CreateMaybeMessage<::pb::AccountInfo>(Arena*);
template<> ::pb::SSAccountInfoNotify* Arena::CreateMaybeMessage<::pb::SSAccountInfoNotify>(Arena*);
template<> ::pb::SSBattleMsgNotify* Arena::CreateMaybeMessage<::pb::SSBattleMsgNotify>(Arena*);
template<> ::pb::SSForceUserDisConnectReq* Arena::CreateMaybeMessage<::pb::SSForceUserDisConnectReq>(Arena*);
template<> ::pb::SSForceUserDisConnectRsp* Arena::CreateMaybeMessage<::pb::SSForceUserDisConnectRsp>(Arena*);
template<> ::pb::SSGame2GChooseLevelRsp* Arena::CreateMaybeMessage<::pb::SSGame2GChooseLevelRsp>(Arena*);
template<> ::pb::SSGame2GCreateRoomRsp* Arena::CreateMaybeMessage<::pb::SSGame2GCreateRoomRsp>(Arena*);
template<> ::pb::SSGame2GEnterRoomRsp* Arena::CreateMaybeMessage<::pb::SSGame2GEnterRoomRsp>(Arena*);
template<> ::pb::SSGame2GLeaveRoomRsp* Arena::CreateMaybeMessage<::pb::SSGame2GLeaveRoomRsp>(Arena*);
template<> ::pb::SSGame2GReadyRoomRsp* Arena::CreateMaybeMessage<::pb::SSGame2GReadyRoomRsp>(Arena*);
template<> ::pb::SSGame2GRoomMsgNotify* Arena::CreateMaybeMessage<::pb::SSGame2GRoomMsgNotify>(Arena*);
template<> ::pb::SSGate2GChooseLevelReq* Arena::CreateMaybeMessage<::pb::SSGate2GChooseLevelReq>(Arena*);
template<> ::pb::SSGate2GCreateRoomReq* Arena::CreateMaybeMessage<::pb::SSGate2GCreateRoomReq>(Arena*);
template<> ::pb::SSGate2GEnterRoomReq* Arena::CreateMaybeMessage<::pb::SSGate2GEnterRoomReq>(Arena*);
template<> ::pb::SSGate2GLeaveRoomReq* Arena::CreateMaybeMessage<::pb::SSGate2GLeaveRoomReq>(Arena*);
template<> ::pb::SSGate2GReadyRoomReq* Arena::CreateMaybeMessage<::pb::SSGate2GReadyRoomReq>(Arena*);
template<> ::pb::SSGate2GUserDisConnectNotify* Arena::CreateMaybeMessage<::pb::SSGate2GUserDisConnectNotify>(Arena*);
template<> ::pb::SSGateLoginReq* Arena::CreateMaybeMessage<::pb::SSGateLoginReq>(Arena*);
template<> ::pb::SSGateLoginRsp* Arena::CreateMaybeMessage<::pb::SSGateLoginRsp>(Arena*);
template<> ::pb::UserOnlineInfoCache* Arena::CreateMaybeMessage<::pb::UserOnlineInfoCache>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace pb {

enum SSForceUserDisConnectReq_RetCode : int {
  SSForceUserDisConnectReq_RetCode_RET_USER_LOGIN = 0,
  SSForceUserDisConnectReq_RetCode_RET_SERVER_ERROR = 1,
  SSForceUserDisConnectReq_RetCode_SSForceUserDisConnectReq_RetCode_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::min(),
  SSForceUserDisConnectReq_RetCode_SSForceUserDisConnectReq_RetCode_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::max()
};
bool SSForceUserDisConnectReq_RetCode_IsValid(int value);
constexpr SSForceUserDisConnectReq_RetCode SSForceUserDisConnectReq_RetCode_RetCode_MIN = SSForceUserDisConnectReq_RetCode_RET_USER_LOGIN;
constexpr SSForceUserDisConnectReq_RetCode SSForceUserDisConnectReq_RetCode_RetCode_MAX = SSForceUserDisConnectReq_RetCode_RET_SERVER_ERROR;
constexpr int SSForceUserDisConnectReq_RetCode_RetCode_ARRAYSIZE = SSForceUserDisConnectReq_RetCode_RetCode_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* SSForceUserDisConnectReq_RetCode_descriptor();
template<typename T>
inline const std::string& SSForceUserDisConnectReq_RetCode_Name(T enum_t_value) {
  static_assert(::std::is_same<T, SSForceUserDisConnectReq_RetCode>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function SSForceUserDisConnectReq_RetCode_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    SSForceUserDisConnectReq_RetCode_descriptor(), enum_t_value);
}
inline bool SSForceUserDisConnectReq_RetCode_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, SSForceUserDisConnectReq_RetCode* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<SSForceUserDisConnectReq_RetCode>(
    SSForceUserDisConnectReq_RetCode_descriptor(), name, value);
}
enum SSForceUserDisConnectRsp_RetCode : int {
  SSForceUserDisConnectRsp_RetCode_RET_SUCC = 0,
  SSForceUserDisConnectRsp_RetCode_RET_NOT_FOUND = 1,
  SSForceUserDisConnectRsp_RetCode_SSForceUserDisConnectRsp_RetCode_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::min(),
  SSForceUserDisConnectRsp_RetCode_SSForceUserDisConnectRsp_RetCode_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::max()
};
bool SSForceUserDisConnectRsp_RetCode_IsValid(int value);
constexpr SSForceUserDisConnectRsp_RetCode SSForceUserDisConnectRsp_RetCode_RetCode_MIN = SSForceUserDisConnectRsp_RetCode_RET_SUCC;
constexpr SSForceUserDisConnectRsp_RetCode SSForceUserDisConnectRsp_RetCode_RetCode_MAX = SSForceUserDisConnectRsp_RetCode_RET_NOT_FOUND;
constexpr int SSForceUserDisConnectRsp_RetCode_RetCode_ARRAYSIZE = SSForceUserDisConnectRsp_RetCode_RetCode_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* SSForceUserDisConnectRsp_RetCode_descriptor();
template<typename T>
inline const std::string& SSForceUserDisConnectRsp_RetCode_Name(T enum_t_value) {
  static_assert(::std::is_same<T, SSForceUserDisConnectRsp_RetCode>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function SSForceUserDisConnectRsp_RetCode_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    SSForceUserDisConnectRsp_RetCode_descriptor(), enum_t_value);
}
inline bool SSForceUserDisConnectRsp_RetCode_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, SSForceUserDisConnectRsp_RetCode* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<SSForceUserDisConnectRsp_RetCode>(
    SSForceUserDisConnectRsp_RetCode_descriptor(), name, value);
}
enum SS_GATE_MSG_CMD : int {
  SS_GATE_MSG_DEFAULT = 0,
  SS_GATE_MSG_LOGIN_REQ = 400,
  SS_GATE_MSG_LOGIN_RSP = 401,
  SS_GATE_FORCE_USER_DISCONNECT_REQ = 402,
  SS_GATE_FORCE_USER_DISCONNECT_RSP = 403,
  SS_GATE_GAME_CREATE_ROOM_REQ = 404,
  SS_GAME_GATE_CREATE_ROOM_RSP = 405,
  SS_GATE_GAME_ENTER_ROOM_REQ = 406,
  SS_GAME_GATE_ENTER_ROOM_RSP = 407,
  SS_GATE_GAME_LEAVE_ROOM_REQ = 408,
  SS_GAME_GATE_LEAVE_ROOM_RSQ = 409,
  SS_GATE_GAME_USER_READY_REQ = 410,
  SS_GAME_GATE_USER_READY_RSP = 411,
  SS_GATE_GAME_CHOOSE_LEVEL_REQ = 412,
  SS_GAME_GATE_CHOOSE_LEVEL_RSP = 413,
  SS_GATE_USER_INFO_NOTIFY = 450,
  SS_GAME2GATE_ROOM_INFO_NOTIFY = 451,
  SS_GAME2GATE_BATTLE_INFO_NOTIFY = 452,
  SS_GATE_GAME_USER_DISCONECT_NOTIFY = 453,
  SS_GATE_MSG_CMD_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::min(),
  SS_GATE_MSG_CMD_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::max()
};
bool SS_GATE_MSG_CMD_IsValid(int value);
constexpr SS_GATE_MSG_CMD SS_GATE_MSG_CMD_MIN = SS_GATE_MSG_DEFAULT;
constexpr SS_GATE_MSG_CMD SS_GATE_MSG_CMD_MAX = SS_GATE_GAME_USER_DISCONECT_NOTIFY;
constexpr int SS_GATE_MSG_CMD_ARRAYSIZE = SS_GATE_MSG_CMD_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* SS_GATE_MSG_CMD_descriptor();
template<typename T>
inline const std::string& SS_GATE_MSG_CMD_Name(T enum_t_value) {
  static_assert(::std::is_same<T, SS_GATE_MSG_CMD>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function SS_GATE_MSG_CMD_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    SS_GATE_MSG_CMD_descriptor(), enum_t_value);
}
inline bool SS_GATE_MSG_CMD_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, SS_GATE_MSG_CMD* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<SS_GATE_MSG_CMD>(
    SS_GATE_MSG_CMD_descriptor(), name, value);
}
// ===================================================================

class SSGateLoginReq PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:pb.SSGateLoginReq) */ {
 public:
  inline SSGateLoginReq() : SSGateLoginReq(nullptr) {}
  virtual ~SSGateLoginReq();

  SSGateLoginReq(const SSGateLoginReq& from);
  SSGateLoginReq(SSGateLoginReq&& from) noexcept
    : SSGateLoginReq() {
    *this = ::std::move(from);
  }

  inline SSGateLoginReq& operator=(const SSGateLoginReq& from) {
    CopyFrom(from);
    return *this;
  }
  inline SSGateLoginReq& operator=(SSGateLoginReq&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const SSGateLoginReq& default_instance();

  static inline const SSGateLoginReq* internal_default_instance() {
    return reinterpret_cast<const SSGateLoginReq*>(
               &_SSGateLoginReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(SSGateLoginReq& a, SSGateLoginReq& b) {
    a.Swap(&b);
  }
  inline void Swap(SSGateLoginReq* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SSGateLoginReq* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline SSGateLoginReq* New() const final {
    return CreateMaybeMessage<SSGateLoginReq>(nullptr);
  }

  SSGateLoginReq* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<SSGateLoginReq>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const SSGateLoginReq& from);
  void MergeFrom(const SSGateLoginReq& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SSGateLoginReq* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "pb.SSGateLoginReq";
  }
  protected:
  explicit SSGateLoginReq(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_gate_5fgame_5fmsg_2eproto);
    return ::descriptor_table_gate_5fgame_5fmsg_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kReqFieldNumber = 2,
    kRequstedIdFieldNumber = 1,
  };
  // .pb.LoginCsReq req = 2;
  bool has_req() const;
  private:
  bool _internal_has_req() const;
  public:
  void clear_req();
  const ::pb::LoginCsReq& req() const;
  ::pb::LoginCsReq* release_req();
  ::pb::LoginCsReq* mutable_req();
  void set_allocated_req(::pb::LoginCsReq* req);
  private:
  const ::pb::LoginCsReq& _internal_req() const;
  ::pb::LoginCsReq* _internal_mutable_req();
  public:
  void unsafe_arena_set_allocated_req(
      ::pb::LoginCsReq* req);
  ::pb::LoginCsReq* unsafe_arena_release_req();

  // uint32 requsted_id = 1;
  void clear_requsted_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 requsted_id() const;
  void set_requsted_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_requsted_id() const;
  void _internal_set_requsted_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:pb.SSGateLoginReq)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::pb::LoginCsReq* req_;
  ::PROTOBUF_NAMESPACE_ID::uint32 requsted_id_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_gate_5fgame_5fmsg_2eproto;
};
// -------------------------------------------------------------------

class SSGateLoginRsp PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:pb.SSGateLoginRsp) */ {
 public:
  inline SSGateLoginRsp() : SSGateLoginRsp(nullptr) {}
  virtual ~SSGateLoginRsp();

  SSGateLoginRsp(const SSGateLoginRsp& from);
  SSGateLoginRsp(SSGateLoginRsp&& from) noexcept
    : SSGateLoginRsp() {
    *this = ::std::move(from);
  }

  inline SSGateLoginRsp& operator=(const SSGateLoginRsp& from) {
    CopyFrom(from);
    return *this;
  }
  inline SSGateLoginRsp& operator=(SSGateLoginRsp&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const SSGateLoginRsp& default_instance();

  static inline const SSGateLoginRsp* internal_default_instance() {
    return reinterpret_cast<const SSGateLoginRsp*>(
               &_SSGateLoginRsp_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(SSGateLoginRsp& a, SSGateLoginRsp& b) {
    a.Swap(&b);
  }
  inline void Swap(SSGateLoginRsp* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SSGateLoginRsp* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline SSGateLoginRsp* New() const final {
    return CreateMaybeMessage<SSGateLoginRsp>(nullptr);
  }

  SSGateLoginRsp* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<SSGateLoginRsp>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const SSGateLoginRsp& from);
  void MergeFrom(const SSGateLoginRsp& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SSGateLoginRsp* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "pb.SSGateLoginRsp";
  }
  protected:
  explicit SSGateLoginRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_gate_5fgame_5fmsg_2eproto);
    return ::descriptor_table_gate_5fgame_5fmsg_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kRspFieldNumber = 2,
    kRequestIdFieldNumber = 1,
  };
  // .pb.LoginScRsp rsp = 2;
  bool has_rsp() const;
  private:
  bool _internal_has_rsp() const;
  public:
  void clear_rsp();
  const ::pb::LoginScRsp& rsp() const;
  ::pb::LoginScRsp* release_rsp();
  ::pb::LoginScRsp* mutable_rsp();
  void set_allocated_rsp(::pb::LoginScRsp* rsp);
  private:
  const ::pb::LoginScRsp& _internal_rsp() const;
  ::pb::LoginScRsp* _internal_mutable_rsp();
  public:
  void unsafe_arena_set_allocated_rsp(
      ::pb::LoginScRsp* rsp);
  ::pb::LoginScRsp* unsafe_arena_release_rsp();

  // uint32 request_id = 1;
  void clear_request_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 request_id() const;
  void set_request_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_request_id() const;
  void _internal_set_request_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:pb.SSGateLoginRsp)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::pb::LoginScRsp* rsp_;
  ::PROTOBUF_NAMESPACE_ID::uint32 request_id_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_gate_5fgame_5fmsg_2eproto;
};
// -------------------------------------------------------------------

class AccountInfo PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:pb.AccountInfo) */ {
 public:
  inline AccountInfo() : AccountInfo(nullptr) {}
  virtual ~AccountInfo();

  AccountInfo(const AccountInfo& from);
  AccountInfo(AccountInfo&& from) noexcept
    : AccountInfo() {
    *this = ::std::move(from);
  }

  inline AccountInfo& operator=(const AccountInfo& from) {
    CopyFrom(from);
    return *this;
  }
  inline AccountInfo& operator=(AccountInfo&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const AccountInfo& default_instance();

  static inline const AccountInfo* internal_default_instance() {
    return reinterpret_cast<const AccountInfo*>(
               &_AccountInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(AccountInfo& a, AccountInfo& b) {
    a.Swap(&b);
  }
  inline void Swap(AccountInfo* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AccountInfo* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline AccountInfo* New() const final {
    return CreateMaybeMessage<AccountInfo>(nullptr);
  }

  AccountInfo* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<AccountInfo>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const AccountInfo& from);
  void MergeFrom(const AccountInfo& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AccountInfo* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "pb.AccountInfo";
  }
  protected:
  explicit AccountInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_gate_5fgame_5fmsg_2eproto);
    return ::descriptor_table_gate_5fgame_5fmsg_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kUsernameFieldNumber = 1,
    kAcountidFieldNumber = 2,
  };
  // string username = 1;
  void clear_username();
  const std::string& username() const;
  void set_username(const std::string& value);
  void set_username(std::string&& value);
  void set_username(const char* value);
  void set_username(const char* value, size_t size);
  std::string* mutable_username();
  std::string* release_username();
  void set_allocated_username(std::string* username);
  private:
  const std::string& _internal_username() const;
  void _internal_set_username(const std::string& value);
  std::string* _internal_mutable_username();
  public:

  // uint32 acountid = 2;
  void clear_acountid();
  ::PROTOBUF_NAMESPACE_ID::uint32 acountid() const;
  void set_acountid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_acountid() const;
  void _internal_set_acountid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:pb.AccountInfo)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr username_;
  ::PROTOBUF_NAMESPACE_ID::uint32 acountid_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_gate_5fgame_5fmsg_2eproto;
};
// -------------------------------------------------------------------

class SSAccountInfoNotify PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:pb.SSAccountInfoNotify) */ {
 public:
  inline SSAccountInfoNotify() : SSAccountInfoNotify(nullptr) {}
  virtual ~SSAccountInfoNotify();

  SSAccountInfoNotify(const SSAccountInfoNotify& from);
  SSAccountInfoNotify(SSAccountInfoNotify&& from) noexcept
    : SSAccountInfoNotify() {
    *this = ::std::move(from);
  }

  inline SSAccountInfoNotify& operator=(const SSAccountInfoNotify& from) {
    CopyFrom(from);
    return *this;
  }
  inline SSAccountInfoNotify& operator=(SSAccountInfoNotify&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const SSAccountInfoNotify& default_instance();

  static inline const SSAccountInfoNotify* internal_default_instance() {
    return reinterpret_cast<const SSAccountInfoNotify*>(
               &_SSAccountInfoNotify_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(SSAccountInfoNotify& a, SSAccountInfoNotify& b) {
    a.Swap(&b);
  }
  inline void Swap(SSAccountInfoNotify* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SSAccountInfoNotify* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline SSAccountInfoNotify* New() const final {
    return CreateMaybeMessage<SSAccountInfoNotify>(nullptr);
  }

  SSAccountInfoNotify* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<SSAccountInfoNotify>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const SSAccountInfoNotify& from);
  void MergeFrom(const SSAccountInfoNotify& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SSAccountInfoNotify* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "pb.SSAccountInfoNotify";
  }
  protected:
  explicit SSAccountInfoNotify(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_gate_5fgame_5fmsg_2eproto);
    return ::descriptor_table_gate_5fgame_5fmsg_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kInfosFieldNumber = 1,
  };
  // repeated .pb.AccountInfo infos = 1;
  int infos_size() const;
  private:
  int _internal_infos_size() const;
  public:
  void clear_infos();
  ::pb::AccountInfo* mutable_infos(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::pb::AccountInfo >*
      mutable_infos();
  private:
  const ::pb::AccountInfo& _internal_infos(int index) const;
  ::pb::AccountInfo* _internal_add_infos();
  public:
  const ::pb::AccountInfo& infos(int index) const;
  ::pb::AccountInfo* add_infos();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::pb::AccountInfo >&
      infos() const;

  // @@protoc_insertion_point(class_scope:pb.SSAccountInfoNotify)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::pb::AccountInfo > infos_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_gate_5fgame_5fmsg_2eproto;
};
// -------------------------------------------------------------------

class UserOnlineInfoCache PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:pb.UserOnlineInfoCache) */ {
 public:
  inline UserOnlineInfoCache() : UserOnlineInfoCache(nullptr) {}
  virtual ~UserOnlineInfoCache();

  UserOnlineInfoCache(const UserOnlineInfoCache& from);
  UserOnlineInfoCache(UserOnlineInfoCache&& from) noexcept
    : UserOnlineInfoCache() {
    *this = ::std::move(from);
  }

  inline UserOnlineInfoCache& operator=(const UserOnlineInfoCache& from) {
    CopyFrom(from);
    return *this;
  }
  inline UserOnlineInfoCache& operator=(UserOnlineInfoCache&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const UserOnlineInfoCache& default_instance();

  static inline const UserOnlineInfoCache* internal_default_instance() {
    return reinterpret_cast<const UserOnlineInfoCache*>(
               &_UserOnlineInfoCache_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(UserOnlineInfoCache& a, UserOnlineInfoCache& b) {
    a.Swap(&b);
  }
  inline void Swap(UserOnlineInfoCache* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(UserOnlineInfoCache* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline UserOnlineInfoCache* New() const final {
    return CreateMaybeMessage<UserOnlineInfoCache>(nullptr);
  }

  UserOnlineInfoCache* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<UserOnlineInfoCache>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const UserOnlineInfoCache& from);
  void MergeFrom(const UserOnlineInfoCache& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UserOnlineInfoCache* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "pb.UserOnlineInfoCache";
  }
  protected:
  explicit UserOnlineInfoCache(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_gate_5fgame_5fmsg_2eproto);
    return ::descriptor_table_gate_5fgame_5fmsg_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kGameAddrFieldNumber = 2,
    kGateAddrFieldNumber = 4,
    kGatePortFieldNumber = 5,
    kAccountIdFieldNumber = 1,
    kGamePortFieldNumber = 3,
  };
  // string game_addr = 2;
  void clear_game_addr();
  const std::string& game_addr() const;
  void set_game_addr(const std::string& value);
  void set_game_addr(std::string&& value);
  void set_game_addr(const char* value);
  void set_game_addr(const char* value, size_t size);
  std::string* mutable_game_addr();
  std::string* release_game_addr();
  void set_allocated_game_addr(std::string* game_addr);
  private:
  const std::string& _internal_game_addr() const;
  void _internal_set_game_addr(const std::string& value);
  std::string* _internal_mutable_game_addr();
  public:

  // string gate_addr = 4;
  void clear_gate_addr();
  const std::string& gate_addr() const;
  void set_gate_addr(const std::string& value);
  void set_gate_addr(std::string&& value);
  void set_gate_addr(const char* value);
  void set_gate_addr(const char* value, size_t size);
  std::string* mutable_gate_addr();
  std::string* release_gate_addr();
  void set_allocated_gate_addr(std::string* gate_addr);
  private:
  const std::string& _internal_gate_addr() const;
  void _internal_set_gate_addr(const std::string& value);
  std::string* _internal_mutable_gate_addr();
  public:

  // string gate_port = 5;
  void clear_gate_port();
  const std::string& gate_port() const;
  void set_gate_port(const std::string& value);
  void set_gate_port(std::string&& value);
  void set_gate_port(const char* value);
  void set_gate_port(const char* value, size_t size);
  std::string* mutable_gate_port();
  std::string* release_gate_port();
  void set_allocated_gate_port(std::string* gate_port);
  private:
  const std::string& _internal_gate_port() const;
  void _internal_set_gate_port(const std::string& value);
  std::string* _internal_mutable_gate_port();
  public:

  // uint32 account_id = 1;
  void clear_account_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 account_id() const;
  void set_account_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_account_id() const;
  void _internal_set_account_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 game_port = 3;
  void clear_game_port();
  ::PROTOBUF_NAMESPACE_ID::uint32 game_port() const;
  void set_game_port(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_game_port() const;
  void _internal_set_game_port(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:pb.UserOnlineInfoCache)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr game_addr_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr gate_addr_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr gate_port_;
  ::PROTOBUF_NAMESPACE_ID::uint32 account_id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 game_port_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_gate_5fgame_5fmsg_2eproto;
};
// -------------------------------------------------------------------

class SSForceUserDisConnectReq PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:pb.SSForceUserDisConnectReq) */ {
 public:
  inline SSForceUserDisConnectReq() : SSForceUserDisConnectReq(nullptr) {}
  virtual ~SSForceUserDisConnectReq();

  SSForceUserDisConnectReq(const SSForceUserDisConnectReq& from);
  SSForceUserDisConnectReq(SSForceUserDisConnectReq&& from) noexcept
    : SSForceUserDisConnectReq() {
    *this = ::std::move(from);
  }

  inline SSForceUserDisConnectReq& operator=(const SSForceUserDisConnectReq& from) {
    CopyFrom(from);
    return *this;
  }
  inline SSForceUserDisConnectReq& operator=(SSForceUserDisConnectReq&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const SSForceUserDisConnectReq& default_instance();

  static inline const SSForceUserDisConnectReq* internal_default_instance() {
    return reinterpret_cast<const SSForceUserDisConnectReq*>(
               &_SSForceUserDisConnectReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(SSForceUserDisConnectReq& a, SSForceUserDisConnectReq& b) {
    a.Swap(&b);
  }
  inline void Swap(SSForceUserDisConnectReq* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SSForceUserDisConnectReq* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline SSForceUserDisConnectReq* New() const final {
    return CreateMaybeMessage<SSForceUserDisConnectReq>(nullptr);
  }

  SSForceUserDisConnectReq* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<SSForceUserDisConnectReq>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const SSForceUserDisConnectReq& from);
  void MergeFrom(const SSForceUserDisConnectReq& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SSForceUserDisConnectReq* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "pb.SSForceUserDisConnectReq";
  }
  protected:
  explicit SSForceUserDisConnectReq(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_gate_5fgame_5fmsg_2eproto);
    return ::descriptor_table_gate_5fgame_5fmsg_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  typedef SSForceUserDisConnectReq_RetCode RetCode;
  static constexpr RetCode RET_USER_LOGIN =
    SSForceUserDisConnectReq_RetCode_RET_USER_LOGIN;
  static constexpr RetCode RET_SERVER_ERROR =
    SSForceUserDisConnectReq_RetCode_RET_SERVER_ERROR;
  static inline bool RetCode_IsValid(int value) {
    return SSForceUserDisConnectReq_RetCode_IsValid(value);
  }
  static constexpr RetCode RetCode_MIN =
    SSForceUserDisConnectReq_RetCode_RetCode_MIN;
  static constexpr RetCode RetCode_MAX =
    SSForceUserDisConnectReq_RetCode_RetCode_MAX;
  static constexpr int RetCode_ARRAYSIZE =
    SSForceUserDisConnectReq_RetCode_RetCode_ARRAYSIZE;
  static inline const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor*
  RetCode_descriptor() {
    return SSForceUserDisConnectReq_RetCode_descriptor();
  }
  template<typename T>
  static inline const std::string& RetCode_Name(T enum_t_value) {
    static_assert(::std::is_same<T, RetCode>::value ||
      ::std::is_integral<T>::value,
      "Incorrect type passed to function RetCode_Name.");
    return SSForceUserDisConnectReq_RetCode_Name(enum_t_value);
  }
  static inline bool RetCode_Parse(::PROTOBUF_NAMESPACE_ID::ConstStringParam name,
      RetCode* value) {
    return SSForceUserDisConnectReq_RetCode_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  enum : int {
    kRetcodeFieldNumber = 1,
    kAccountidFieldNumber = 2,
    kRequestGcIdFieldNumber = 3,
    kRequestGgIdFieldNumber = 4,
  };
  // .pb.SSForceUserDisConnectReq.RetCode retcode = 1;
  void clear_retcode();
  ::pb::SSForceUserDisConnectReq_RetCode retcode() const;
  void set_retcode(::pb::SSForceUserDisConnectReq_RetCode value);
  private:
  ::pb::SSForceUserDisConnectReq_RetCode _internal_retcode() const;
  void _internal_set_retcode(::pb::SSForceUserDisConnectReq_RetCode value);
  public:

  // uint32 accountid = 2;
  void clear_accountid();
  ::PROTOBUF_NAMESPACE_ID::uint32 accountid() const;
  void set_accountid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_accountid() const;
  void _internal_set_accountid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 request_gc_id = 3;
  void clear_request_gc_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 request_gc_id() const;
  void set_request_gc_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_request_gc_id() const;
  void _internal_set_request_gc_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 request_gg_id = 4;
  void clear_request_gg_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 request_gg_id() const;
  void set_request_gg_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_request_gg_id() const;
  void _internal_set_request_gg_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:pb.SSForceUserDisConnectReq)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  int retcode_;
  ::PROTOBUF_NAMESPACE_ID::uint32 accountid_;
  ::PROTOBUF_NAMESPACE_ID::uint32 request_gc_id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 request_gg_id_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_gate_5fgame_5fmsg_2eproto;
};
// -------------------------------------------------------------------

class SSForceUserDisConnectRsp PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:pb.SSForceUserDisConnectRsp) */ {
 public:
  inline SSForceUserDisConnectRsp() : SSForceUserDisConnectRsp(nullptr) {}
  virtual ~SSForceUserDisConnectRsp();

  SSForceUserDisConnectRsp(const SSForceUserDisConnectRsp& from);
  SSForceUserDisConnectRsp(SSForceUserDisConnectRsp&& from) noexcept
    : SSForceUserDisConnectRsp() {
    *this = ::std::move(from);
  }

  inline SSForceUserDisConnectRsp& operator=(const SSForceUserDisConnectRsp& from) {
    CopyFrom(from);
    return *this;
  }
  inline SSForceUserDisConnectRsp& operator=(SSForceUserDisConnectRsp&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const SSForceUserDisConnectRsp& default_instance();

  static inline const SSForceUserDisConnectRsp* internal_default_instance() {
    return reinterpret_cast<const SSForceUserDisConnectRsp*>(
               &_SSForceUserDisConnectRsp_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  friend void swap(SSForceUserDisConnectRsp& a, SSForceUserDisConnectRsp& b) {
    a.Swap(&b);
  }
  inline void Swap(SSForceUserDisConnectRsp* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SSForceUserDisConnectRsp* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline SSForceUserDisConnectRsp* New() const final {
    return CreateMaybeMessage<SSForceUserDisConnectRsp>(nullptr);
  }

  SSForceUserDisConnectRsp* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<SSForceUserDisConnectRsp>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const SSForceUserDisConnectRsp& from);
  void MergeFrom(const SSForceUserDisConnectRsp& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SSForceUserDisConnectRsp* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "pb.SSForceUserDisConnectRsp";
  }
  protected:
  explicit SSForceUserDisConnectRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_gate_5fgame_5fmsg_2eproto);
    return ::descriptor_table_gate_5fgame_5fmsg_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  typedef SSForceUserDisConnectRsp_RetCode RetCode;
  static constexpr RetCode RET_SUCC =
    SSForceUserDisConnectRsp_RetCode_RET_SUCC;
  static constexpr RetCode RET_NOT_FOUND =
    SSForceUserDisConnectRsp_RetCode_RET_NOT_FOUND;
  static inline bool RetCode_IsValid(int value) {
    return SSForceUserDisConnectRsp_RetCode_IsValid(value);
  }
  static constexpr RetCode RetCode_MIN =
    SSForceUserDisConnectRsp_RetCode_RetCode_MIN;
  static constexpr RetCode RetCode_MAX =
    SSForceUserDisConnectRsp_RetCode_RetCode_MAX;
  static constexpr int RetCode_ARRAYSIZE =
    SSForceUserDisConnectRsp_RetCode_RetCode_ARRAYSIZE;
  static inline const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor*
  RetCode_descriptor() {
    return SSForceUserDisConnectRsp_RetCode_descriptor();
  }
  template<typename T>
  static inline const std::string& RetCode_Name(T enum_t_value) {
    static_assert(::std::is_same<T, RetCode>::value ||
      ::std::is_integral<T>::value,
      "Incorrect type passed to function RetCode_Name.");
    return SSForceUserDisConnectRsp_RetCode_Name(enum_t_value);
  }
  static inline bool RetCode_Parse(::PROTOBUF_NAMESPACE_ID::ConstStringParam name,
      RetCode* value) {
    return SSForceUserDisConnectRsp_RetCode_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  enum : int {
    kRetcodeFieldNumber = 1,
    kAccountidFieldNumber = 2,
    kRequestGcIdFieldNumber = 3,
    kRequestGgIdFieldNumber = 4,
  };
  // .pb.SSForceUserDisConnectRsp.RetCode retcode = 1;
  void clear_retcode();
  ::pb::SSForceUserDisConnectRsp_RetCode retcode() const;
  void set_retcode(::pb::SSForceUserDisConnectRsp_RetCode value);
  private:
  ::pb::SSForceUserDisConnectRsp_RetCode _internal_retcode() const;
  void _internal_set_retcode(::pb::SSForceUserDisConnectRsp_RetCode value);
  public:

  // uint32 accountid = 2;
  void clear_accountid();
  ::PROTOBUF_NAMESPACE_ID::uint32 accountid() const;
  void set_accountid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_accountid() const;
  void _internal_set_accountid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 request_gc_id = 3;
  void clear_request_gc_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 request_gc_id() const;
  void set_request_gc_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_request_gc_id() const;
  void _internal_set_request_gc_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 request_gg_id = 4;
  void clear_request_gg_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 request_gg_id() const;
  void set_request_gg_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_request_gg_id() const;
  void _internal_set_request_gg_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:pb.SSForceUserDisConnectRsp)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  int retcode_;
  ::PROTOBUF_NAMESPACE_ID::uint32 accountid_;
  ::PROTOBUF_NAMESPACE_ID::uint32 request_gc_id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 request_gg_id_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_gate_5fgame_5fmsg_2eproto;
};
// -------------------------------------------------------------------

class SSBattleMsgNotify PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:pb.SSBattleMsgNotify) */ {
 public:
  inline SSBattleMsgNotify() : SSBattleMsgNotify(nullptr) {}
  virtual ~SSBattleMsgNotify();

  SSBattleMsgNotify(const SSBattleMsgNotify& from);
  SSBattleMsgNotify(SSBattleMsgNotify&& from) noexcept
    : SSBattleMsgNotify() {
    *this = ::std::move(from);
  }

  inline SSBattleMsgNotify& operator=(const SSBattleMsgNotify& from) {
    CopyFrom(from);
    return *this;
  }
  inline SSBattleMsgNotify& operator=(SSBattleMsgNotify&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const SSBattleMsgNotify& default_instance();

  static inline const SSBattleMsgNotify* internal_default_instance() {
    return reinterpret_cast<const SSBattleMsgNotify*>(
               &_SSBattleMsgNotify_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  friend void swap(SSBattleMsgNotify& a, SSBattleMsgNotify& b) {
    a.Swap(&b);
  }
  inline void Swap(SSBattleMsgNotify* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SSBattleMsgNotify* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline SSBattleMsgNotify* New() const final {
    return CreateMaybeMessage<SSBattleMsgNotify>(nullptr);
  }

  SSBattleMsgNotify* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<SSBattleMsgNotify>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const SSBattleMsgNotify& from);
  void MergeFrom(const SSBattleMsgNotify& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SSBattleMsgNotify* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "pb.SSBattleMsgNotify";
  }
  protected:
  explicit SSBattleMsgNotify(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_gate_5fgame_5fmsg_2eproto);
    return ::descriptor_table_gate_5fgame_5fmsg_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNotifyFieldNumber = 2,
    kRequestIdFieldNumber = 1,
  };
  // .pb.BattleMsgScNotify notify = 2;
  bool has_notify() const;
  private:
  bool _internal_has_notify() const;
  public:
  void clear_notify();
  const ::pb::BattleMsgScNotify& notify() const;
  ::pb::BattleMsgScNotify* release_notify();
  ::pb::BattleMsgScNotify* mutable_notify();
  void set_allocated_notify(::pb::BattleMsgScNotify* notify);
  private:
  const ::pb::BattleMsgScNotify& _internal_notify() const;
  ::pb::BattleMsgScNotify* _internal_mutable_notify();
  public:
  void unsafe_arena_set_allocated_notify(
      ::pb::BattleMsgScNotify* notify);
  ::pb::BattleMsgScNotify* unsafe_arena_release_notify();

  // uint32 request_id = 1;
  void clear_request_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 request_id() const;
  void set_request_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_request_id() const;
  void _internal_set_request_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:pb.SSBattleMsgNotify)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::pb::BattleMsgScNotify* notify_;
  ::PROTOBUF_NAMESPACE_ID::uint32 request_id_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_gate_5fgame_5fmsg_2eproto;
};
// -------------------------------------------------------------------

class SSGame2GRoomMsgNotify PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:pb.SSGame2GRoomMsgNotify) */ {
 public:
  inline SSGame2GRoomMsgNotify() : SSGame2GRoomMsgNotify(nullptr) {}
  virtual ~SSGame2GRoomMsgNotify();

  SSGame2GRoomMsgNotify(const SSGame2GRoomMsgNotify& from);
  SSGame2GRoomMsgNotify(SSGame2GRoomMsgNotify&& from) noexcept
    : SSGame2GRoomMsgNotify() {
    *this = ::std::move(from);
  }

  inline SSGame2GRoomMsgNotify& operator=(const SSGame2GRoomMsgNotify& from) {
    CopyFrom(from);
    return *this;
  }
  inline SSGame2GRoomMsgNotify& operator=(SSGame2GRoomMsgNotify&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const SSGame2GRoomMsgNotify& default_instance();

  static inline const SSGame2GRoomMsgNotify* internal_default_instance() {
    return reinterpret_cast<const SSGame2GRoomMsgNotify*>(
               &_SSGame2GRoomMsgNotify_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  friend void swap(SSGame2GRoomMsgNotify& a, SSGame2GRoomMsgNotify& b) {
    a.Swap(&b);
  }
  inline void Swap(SSGame2GRoomMsgNotify* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SSGame2GRoomMsgNotify* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline SSGame2GRoomMsgNotify* New() const final {
    return CreateMaybeMessage<SSGame2GRoomMsgNotify>(nullptr);
  }

  SSGame2GRoomMsgNotify* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<SSGame2GRoomMsgNotify>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const SSGame2GRoomMsgNotify& from);
  void MergeFrom(const SSGame2GRoomMsgNotify& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SSGame2GRoomMsgNotify* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "pb.SSGame2GRoomMsgNotify";
  }
  protected:
  explicit SSGame2GRoomMsgNotify(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_gate_5fgame_5fmsg_2eproto);
    return ::descriptor_table_gate_5fgame_5fmsg_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNotifyFieldNumber = 2,
    kRequestIdFieldNumber = 1,
  };
  // .pb.SCGate2ClientMsgNotify notify = 2;
  bool has_notify() const;
  private:
  bool _internal_has_notify() const;
  public:
  void clear_notify();
  const ::pb::SCGate2ClientMsgNotify& notify() const;
  ::pb::SCGate2ClientMsgNotify* release_notify();
  ::pb::SCGate2ClientMsgNotify* mutable_notify();
  void set_allocated_notify(::pb::SCGate2ClientMsgNotify* notify);
  private:
  const ::pb::SCGate2ClientMsgNotify& _internal_notify() const;
  ::pb::SCGate2ClientMsgNotify* _internal_mutable_notify();
  public:
  void unsafe_arena_set_allocated_notify(
      ::pb::SCGate2ClientMsgNotify* notify);
  ::pb::SCGate2ClientMsgNotify* unsafe_arena_release_notify();

  // uint32 request_id = 1;
  void clear_request_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 request_id() const;
  void set_request_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_request_id() const;
  void _internal_set_request_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:pb.SSGame2GRoomMsgNotify)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::pb::SCGate2ClientMsgNotify* notify_;
  ::PROTOBUF_NAMESPACE_ID::uint32 request_id_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_gate_5fgame_5fmsg_2eproto;
};
// -------------------------------------------------------------------

class SSGate2GCreateRoomReq PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:pb.SSGate2GCreateRoomReq) */ {
 public:
  inline SSGate2GCreateRoomReq() : SSGate2GCreateRoomReq(nullptr) {}
  virtual ~SSGate2GCreateRoomReq();

  SSGate2GCreateRoomReq(const SSGate2GCreateRoomReq& from);
  SSGate2GCreateRoomReq(SSGate2GCreateRoomReq&& from) noexcept
    : SSGate2GCreateRoomReq() {
    *this = ::std::move(from);
  }

  inline SSGate2GCreateRoomReq& operator=(const SSGate2GCreateRoomReq& from) {
    CopyFrom(from);
    return *this;
  }
  inline SSGate2GCreateRoomReq& operator=(SSGate2GCreateRoomReq&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const SSGate2GCreateRoomReq& default_instance();

  static inline const SSGate2GCreateRoomReq* internal_default_instance() {
    return reinterpret_cast<const SSGate2GCreateRoomReq*>(
               &_SSGate2GCreateRoomReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  friend void swap(SSGate2GCreateRoomReq& a, SSGate2GCreateRoomReq& b) {
    a.Swap(&b);
  }
  inline void Swap(SSGate2GCreateRoomReq* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SSGate2GCreateRoomReq* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline SSGate2GCreateRoomReq* New() const final {
    return CreateMaybeMessage<SSGate2GCreateRoomReq>(nullptr);
  }

  SSGate2GCreateRoomReq* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<SSGate2GCreateRoomReq>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const SSGate2GCreateRoomReq& from);
  void MergeFrom(const SSGate2GCreateRoomReq& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SSGate2GCreateRoomReq* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "pb.SSGate2GCreateRoomReq";
  }
  protected:
  explicit SSGate2GCreateRoomReq(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_gate_5fgame_5fmsg_2eproto);
    return ::descriptor_table_gate_5fgame_5fmsg_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kReqFieldNumber = 2,
    kRequestIdFieldNumber = 1,
  };
  // .pb.TryCreateRoomCsReq req = 2;
  bool has_req() const;
  private:
  bool _internal_has_req() const;
  public:
  void clear_req();
  const ::pb::TryCreateRoomCsReq& req() const;
  ::pb::TryCreateRoomCsReq* release_req();
  ::pb::TryCreateRoomCsReq* mutable_req();
  void set_allocated_req(::pb::TryCreateRoomCsReq* req);
  private:
  const ::pb::TryCreateRoomCsReq& _internal_req() const;
  ::pb::TryCreateRoomCsReq* _internal_mutable_req();
  public:
  void unsafe_arena_set_allocated_req(
      ::pb::TryCreateRoomCsReq* req);
  ::pb::TryCreateRoomCsReq* unsafe_arena_release_req();

  // uint32 request_id = 1;
  void clear_request_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 request_id() const;
  void set_request_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_request_id() const;
  void _internal_set_request_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:pb.SSGate2GCreateRoomReq)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::pb::TryCreateRoomCsReq* req_;
  ::PROTOBUF_NAMESPACE_ID::uint32 request_id_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_gate_5fgame_5fmsg_2eproto;
};
// -------------------------------------------------------------------

class SSGame2GCreateRoomRsp PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:pb.SSGame2GCreateRoomRsp) */ {
 public:
  inline SSGame2GCreateRoomRsp() : SSGame2GCreateRoomRsp(nullptr) {}
  virtual ~SSGame2GCreateRoomRsp();

  SSGame2GCreateRoomRsp(const SSGame2GCreateRoomRsp& from);
  SSGame2GCreateRoomRsp(SSGame2GCreateRoomRsp&& from) noexcept
    : SSGame2GCreateRoomRsp() {
    *this = ::std::move(from);
  }

  inline SSGame2GCreateRoomRsp& operator=(const SSGame2GCreateRoomRsp& from) {
    CopyFrom(from);
    return *this;
  }
  inline SSGame2GCreateRoomRsp& operator=(SSGame2GCreateRoomRsp&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const SSGame2GCreateRoomRsp& default_instance();

  static inline const SSGame2GCreateRoomRsp* internal_default_instance() {
    return reinterpret_cast<const SSGame2GCreateRoomRsp*>(
               &_SSGame2GCreateRoomRsp_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  friend void swap(SSGame2GCreateRoomRsp& a, SSGame2GCreateRoomRsp& b) {
    a.Swap(&b);
  }
  inline void Swap(SSGame2GCreateRoomRsp* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SSGame2GCreateRoomRsp* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline SSGame2GCreateRoomRsp* New() const final {
    return CreateMaybeMessage<SSGame2GCreateRoomRsp>(nullptr);
  }

  SSGame2GCreateRoomRsp* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<SSGame2GCreateRoomRsp>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const SSGame2GCreateRoomRsp& from);
  void MergeFrom(const SSGame2GCreateRoomRsp& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SSGame2GCreateRoomRsp* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "pb.SSGame2GCreateRoomRsp";
  }
  protected:
  explicit SSGame2GCreateRoomRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_gate_5fgame_5fmsg_2eproto);
    return ::descriptor_table_gate_5fgame_5fmsg_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kRspFieldNumber = 2,
    kRequestIdFieldNumber = 1,
  };
  // .pb.TryCreateRoomScRsp rsp = 2;
  bool has_rsp() const;
  private:
  bool _internal_has_rsp() const;
  public:
  void clear_rsp();
  const ::pb::TryCreateRoomScRsp& rsp() const;
  ::pb::TryCreateRoomScRsp* release_rsp();
  ::pb::TryCreateRoomScRsp* mutable_rsp();
  void set_allocated_rsp(::pb::TryCreateRoomScRsp* rsp);
  private:
  const ::pb::TryCreateRoomScRsp& _internal_rsp() const;
  ::pb::TryCreateRoomScRsp* _internal_mutable_rsp();
  public:
  void unsafe_arena_set_allocated_rsp(
      ::pb::TryCreateRoomScRsp* rsp);
  ::pb::TryCreateRoomScRsp* unsafe_arena_release_rsp();

  // uint32 request_id = 1;
  void clear_request_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 request_id() const;
  void set_request_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_request_id() const;
  void _internal_set_request_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:pb.SSGame2GCreateRoomRsp)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::pb::TryCreateRoomScRsp* rsp_;
  ::PROTOBUF_NAMESPACE_ID::uint32 request_id_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_gate_5fgame_5fmsg_2eproto;
};
// -------------------------------------------------------------------

class SSGate2GEnterRoomReq PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:pb.SSGate2GEnterRoomReq) */ {
 public:
  inline SSGate2GEnterRoomReq() : SSGate2GEnterRoomReq(nullptr) {}
  virtual ~SSGate2GEnterRoomReq();

  SSGate2GEnterRoomReq(const SSGate2GEnterRoomReq& from);
  SSGate2GEnterRoomReq(SSGate2GEnterRoomReq&& from) noexcept
    : SSGate2GEnterRoomReq() {
    *this = ::std::move(from);
  }

  inline SSGate2GEnterRoomReq& operator=(const SSGate2GEnterRoomReq& from) {
    CopyFrom(from);
    return *this;
  }
  inline SSGate2GEnterRoomReq& operator=(SSGate2GEnterRoomReq&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const SSGate2GEnterRoomReq& default_instance();

  static inline const SSGate2GEnterRoomReq* internal_default_instance() {
    return reinterpret_cast<const SSGate2GEnterRoomReq*>(
               &_SSGate2GEnterRoomReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    11;

  friend void swap(SSGate2GEnterRoomReq& a, SSGate2GEnterRoomReq& b) {
    a.Swap(&b);
  }
  inline void Swap(SSGate2GEnterRoomReq* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SSGate2GEnterRoomReq* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline SSGate2GEnterRoomReq* New() const final {
    return CreateMaybeMessage<SSGate2GEnterRoomReq>(nullptr);
  }

  SSGate2GEnterRoomReq* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<SSGate2GEnterRoomReq>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const SSGate2GEnterRoomReq& from);
  void MergeFrom(const SSGate2GEnterRoomReq& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SSGate2GEnterRoomReq* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "pb.SSGate2GEnterRoomReq";
  }
  protected:
  explicit SSGate2GEnterRoomReq(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_gate_5fgame_5fmsg_2eproto);
    return ::descriptor_table_gate_5fgame_5fmsg_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kReqFieldNumber = 2,
    kRequestIdFieldNumber = 1,
  };
  // .pb.TryEnterRoomCsReq req = 2;
  bool has_req() const;
  private:
  bool _internal_has_req() const;
  public:
  void clear_req();
  const ::pb::TryEnterRoomCsReq& req() const;
  ::pb::TryEnterRoomCsReq* release_req();
  ::pb::TryEnterRoomCsReq* mutable_req();
  void set_allocated_req(::pb::TryEnterRoomCsReq* req);
  private:
  const ::pb::TryEnterRoomCsReq& _internal_req() const;
  ::pb::TryEnterRoomCsReq* _internal_mutable_req();
  public:
  void unsafe_arena_set_allocated_req(
      ::pb::TryEnterRoomCsReq* req);
  ::pb::TryEnterRoomCsReq* unsafe_arena_release_req();

  // uint32 request_id = 1;
  void clear_request_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 request_id() const;
  void set_request_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_request_id() const;
  void _internal_set_request_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:pb.SSGate2GEnterRoomReq)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::pb::TryEnterRoomCsReq* req_;
  ::PROTOBUF_NAMESPACE_ID::uint32 request_id_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_gate_5fgame_5fmsg_2eproto;
};
// -------------------------------------------------------------------

class SSGame2GEnterRoomRsp PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:pb.SSGame2GEnterRoomRsp) */ {
 public:
  inline SSGame2GEnterRoomRsp() : SSGame2GEnterRoomRsp(nullptr) {}
  virtual ~SSGame2GEnterRoomRsp();

  SSGame2GEnterRoomRsp(const SSGame2GEnterRoomRsp& from);
  SSGame2GEnterRoomRsp(SSGame2GEnterRoomRsp&& from) noexcept
    : SSGame2GEnterRoomRsp() {
    *this = ::std::move(from);
  }

  inline SSGame2GEnterRoomRsp& operator=(const SSGame2GEnterRoomRsp& from) {
    CopyFrom(from);
    return *this;
  }
  inline SSGame2GEnterRoomRsp& operator=(SSGame2GEnterRoomRsp&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const SSGame2GEnterRoomRsp& default_instance();

  static inline const SSGame2GEnterRoomRsp* internal_default_instance() {
    return reinterpret_cast<const SSGame2GEnterRoomRsp*>(
               &_SSGame2GEnterRoomRsp_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    12;

  friend void swap(SSGame2GEnterRoomRsp& a, SSGame2GEnterRoomRsp& b) {
    a.Swap(&b);
  }
  inline void Swap(SSGame2GEnterRoomRsp* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SSGame2GEnterRoomRsp* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline SSGame2GEnterRoomRsp* New() const final {
    return CreateMaybeMessage<SSGame2GEnterRoomRsp>(nullptr);
  }

  SSGame2GEnterRoomRsp* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<SSGame2GEnterRoomRsp>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const SSGame2GEnterRoomRsp& from);
  void MergeFrom(const SSGame2GEnterRoomRsp& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SSGame2GEnterRoomRsp* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "pb.SSGame2GEnterRoomRsp";
  }
  protected:
  explicit SSGame2GEnterRoomRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_gate_5fgame_5fmsg_2eproto);
    return ::descriptor_table_gate_5fgame_5fmsg_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kRspFieldNumber = 2,
    kRequestIdFieldNumber = 1,
  };
  // .pb.TryEnterRoomScRsp rsp = 2;
  bool has_rsp() const;
  private:
  bool _internal_has_rsp() const;
  public:
  void clear_rsp();
  const ::pb::TryEnterRoomScRsp& rsp() const;
  ::pb::TryEnterRoomScRsp* release_rsp();
  ::pb::TryEnterRoomScRsp* mutable_rsp();
  void set_allocated_rsp(::pb::TryEnterRoomScRsp* rsp);
  private:
  const ::pb::TryEnterRoomScRsp& _internal_rsp() const;
  ::pb::TryEnterRoomScRsp* _internal_mutable_rsp();
  public:
  void unsafe_arena_set_allocated_rsp(
      ::pb::TryEnterRoomScRsp* rsp);
  ::pb::TryEnterRoomScRsp* unsafe_arena_release_rsp();

  // uint32 request_id = 1;
  void clear_request_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 request_id() const;
  void set_request_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_request_id() const;
  void _internal_set_request_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:pb.SSGame2GEnterRoomRsp)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::pb::TryEnterRoomScRsp* rsp_;
  ::PROTOBUF_NAMESPACE_ID::uint32 request_id_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_gate_5fgame_5fmsg_2eproto;
};
// -------------------------------------------------------------------

class SSGate2GLeaveRoomReq PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:pb.SSGate2GLeaveRoomReq) */ {
 public:
  inline SSGate2GLeaveRoomReq() : SSGate2GLeaveRoomReq(nullptr) {}
  virtual ~SSGate2GLeaveRoomReq();

  SSGate2GLeaveRoomReq(const SSGate2GLeaveRoomReq& from);
  SSGate2GLeaveRoomReq(SSGate2GLeaveRoomReq&& from) noexcept
    : SSGate2GLeaveRoomReq() {
    *this = ::std::move(from);
  }

  inline SSGate2GLeaveRoomReq& operator=(const SSGate2GLeaveRoomReq& from) {
    CopyFrom(from);
    return *this;
  }
  inline SSGate2GLeaveRoomReq& operator=(SSGate2GLeaveRoomReq&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const SSGate2GLeaveRoomReq& default_instance();

  static inline const SSGate2GLeaveRoomReq* internal_default_instance() {
    return reinterpret_cast<const SSGate2GLeaveRoomReq*>(
               &_SSGate2GLeaveRoomReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    13;

  friend void swap(SSGate2GLeaveRoomReq& a, SSGate2GLeaveRoomReq& b) {
    a.Swap(&b);
  }
  inline void Swap(SSGate2GLeaveRoomReq* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SSGate2GLeaveRoomReq* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline SSGate2GLeaveRoomReq* New() const final {
    return CreateMaybeMessage<SSGate2GLeaveRoomReq>(nullptr);
  }

  SSGate2GLeaveRoomReq* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<SSGate2GLeaveRoomReq>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const SSGate2GLeaveRoomReq& from);
  void MergeFrom(const SSGate2GLeaveRoomReq& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SSGate2GLeaveRoomReq* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "pb.SSGate2GLeaveRoomReq";
  }
  protected:
  explicit SSGate2GLeaveRoomReq(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_gate_5fgame_5fmsg_2eproto);
    return ::descriptor_table_gate_5fgame_5fmsg_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kReqFieldNumber = 2,
    kRequestIdFieldNumber = 1,
  };
  // .pb.TryLeaveRoomCsReq req = 2;
  bool has_req() const;
  private:
  bool _internal_has_req() const;
  public:
  void clear_req();
  const ::pb::TryLeaveRoomCsReq& req() const;
  ::pb::TryLeaveRoomCsReq* release_req();
  ::pb::TryLeaveRoomCsReq* mutable_req();
  void set_allocated_req(::pb::TryLeaveRoomCsReq* req);
  private:
  const ::pb::TryLeaveRoomCsReq& _internal_req() const;
  ::pb::TryLeaveRoomCsReq* _internal_mutable_req();
  public:
  void unsafe_arena_set_allocated_req(
      ::pb::TryLeaveRoomCsReq* req);
  ::pb::TryLeaveRoomCsReq* unsafe_arena_release_req();

  // uint32 request_id = 1;
  void clear_request_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 request_id() const;
  void set_request_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_request_id() const;
  void _internal_set_request_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:pb.SSGate2GLeaveRoomReq)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::pb::TryLeaveRoomCsReq* req_;
  ::PROTOBUF_NAMESPACE_ID::uint32 request_id_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_gate_5fgame_5fmsg_2eproto;
};
// -------------------------------------------------------------------

class SSGame2GLeaveRoomRsp PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:pb.SSGame2GLeaveRoomRsp) */ {
 public:
  inline SSGame2GLeaveRoomRsp() : SSGame2GLeaveRoomRsp(nullptr) {}
  virtual ~SSGame2GLeaveRoomRsp();

  SSGame2GLeaveRoomRsp(const SSGame2GLeaveRoomRsp& from);
  SSGame2GLeaveRoomRsp(SSGame2GLeaveRoomRsp&& from) noexcept
    : SSGame2GLeaveRoomRsp() {
    *this = ::std::move(from);
  }

  inline SSGame2GLeaveRoomRsp& operator=(const SSGame2GLeaveRoomRsp& from) {
    CopyFrom(from);
    return *this;
  }
  inline SSGame2GLeaveRoomRsp& operator=(SSGame2GLeaveRoomRsp&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const SSGame2GLeaveRoomRsp& default_instance();

  static inline const SSGame2GLeaveRoomRsp* internal_default_instance() {
    return reinterpret_cast<const SSGame2GLeaveRoomRsp*>(
               &_SSGame2GLeaveRoomRsp_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    14;

  friend void swap(SSGame2GLeaveRoomRsp& a, SSGame2GLeaveRoomRsp& b) {
    a.Swap(&b);
  }
  inline void Swap(SSGame2GLeaveRoomRsp* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SSGame2GLeaveRoomRsp* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline SSGame2GLeaveRoomRsp* New() const final {
    return CreateMaybeMessage<SSGame2GLeaveRoomRsp>(nullptr);
  }

  SSGame2GLeaveRoomRsp* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<SSGame2GLeaveRoomRsp>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const SSGame2GLeaveRoomRsp& from);
  void MergeFrom(const SSGame2GLeaveRoomRsp& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SSGame2GLeaveRoomRsp* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "pb.SSGame2GLeaveRoomRsp";
  }
  protected:
  explicit SSGame2GLeaveRoomRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_gate_5fgame_5fmsg_2eproto);
    return ::descriptor_table_gate_5fgame_5fmsg_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kRspFieldNumber = 2,
    kRequestIdFieldNumber = 1,
  };
  // .pb.TryLeaveRoomScRsp rsp = 2;
  bool has_rsp() const;
  private:
  bool _internal_has_rsp() const;
  public:
  void clear_rsp();
  const ::pb::TryLeaveRoomScRsp& rsp() const;
  ::pb::TryLeaveRoomScRsp* release_rsp();
  ::pb::TryLeaveRoomScRsp* mutable_rsp();
  void set_allocated_rsp(::pb::TryLeaveRoomScRsp* rsp);
  private:
  const ::pb::TryLeaveRoomScRsp& _internal_rsp() const;
  ::pb::TryLeaveRoomScRsp* _internal_mutable_rsp();
  public:
  void unsafe_arena_set_allocated_rsp(
      ::pb::TryLeaveRoomScRsp* rsp);
  ::pb::TryLeaveRoomScRsp* unsafe_arena_release_rsp();

  // uint32 request_id = 1;
  void clear_request_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 request_id() const;
  void set_request_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_request_id() const;
  void _internal_set_request_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:pb.SSGame2GLeaveRoomRsp)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::pb::TryLeaveRoomScRsp* rsp_;
  ::PROTOBUF_NAMESPACE_ID::uint32 request_id_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_gate_5fgame_5fmsg_2eproto;
};
// -------------------------------------------------------------------

class SSGate2GReadyRoomReq PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:pb.SSGate2GReadyRoomReq) */ {
 public:
  inline SSGate2GReadyRoomReq() : SSGate2GReadyRoomReq(nullptr) {}
  virtual ~SSGate2GReadyRoomReq();

  SSGate2GReadyRoomReq(const SSGate2GReadyRoomReq& from);
  SSGate2GReadyRoomReq(SSGate2GReadyRoomReq&& from) noexcept
    : SSGate2GReadyRoomReq() {
    *this = ::std::move(from);
  }

  inline SSGate2GReadyRoomReq& operator=(const SSGate2GReadyRoomReq& from) {
    CopyFrom(from);
    return *this;
  }
  inline SSGate2GReadyRoomReq& operator=(SSGate2GReadyRoomReq&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const SSGate2GReadyRoomReq& default_instance();

  static inline const SSGate2GReadyRoomReq* internal_default_instance() {
    return reinterpret_cast<const SSGate2GReadyRoomReq*>(
               &_SSGate2GReadyRoomReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    15;

  friend void swap(SSGate2GReadyRoomReq& a, SSGate2GReadyRoomReq& b) {
    a.Swap(&b);
  }
  inline void Swap(SSGate2GReadyRoomReq* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SSGate2GReadyRoomReq* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline SSGate2GReadyRoomReq* New() const final {
    return CreateMaybeMessage<SSGate2GReadyRoomReq>(nullptr);
  }

  SSGate2GReadyRoomReq* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<SSGate2GReadyRoomReq>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const SSGate2GReadyRoomReq& from);
  void MergeFrom(const SSGate2GReadyRoomReq& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SSGate2GReadyRoomReq* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "pb.SSGate2GReadyRoomReq";
  }
  protected:
  explicit SSGate2GReadyRoomReq(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_gate_5fgame_5fmsg_2eproto);
    return ::descriptor_table_gate_5fgame_5fmsg_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kReqFieldNumber = 2,
    kRequestIdFieldNumber = 1,
  };
  // .pb.ReadyInRoomCsReq req = 2;
  bool has_req() const;
  private:
  bool _internal_has_req() const;
  public:
  void clear_req();
  const ::pb::ReadyInRoomCsReq& req() const;
  ::pb::ReadyInRoomCsReq* release_req();
  ::pb::ReadyInRoomCsReq* mutable_req();
  void set_allocated_req(::pb::ReadyInRoomCsReq* req);
  private:
  const ::pb::ReadyInRoomCsReq& _internal_req() const;
  ::pb::ReadyInRoomCsReq* _internal_mutable_req();
  public:
  void unsafe_arena_set_allocated_req(
      ::pb::ReadyInRoomCsReq* req);
  ::pb::ReadyInRoomCsReq* unsafe_arena_release_req();

  // uint32 request_id = 1;
  void clear_request_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 request_id() const;
  void set_request_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_request_id() const;
  void _internal_set_request_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:pb.SSGate2GReadyRoomReq)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::pb::ReadyInRoomCsReq* req_;
  ::PROTOBUF_NAMESPACE_ID::uint32 request_id_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_gate_5fgame_5fmsg_2eproto;
};
// -------------------------------------------------------------------

class SSGame2GReadyRoomRsp PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:pb.SSGame2GReadyRoomRsp) */ {
 public:
  inline SSGame2GReadyRoomRsp() : SSGame2GReadyRoomRsp(nullptr) {}
  virtual ~SSGame2GReadyRoomRsp();

  SSGame2GReadyRoomRsp(const SSGame2GReadyRoomRsp& from);
  SSGame2GReadyRoomRsp(SSGame2GReadyRoomRsp&& from) noexcept
    : SSGame2GReadyRoomRsp() {
    *this = ::std::move(from);
  }

  inline SSGame2GReadyRoomRsp& operator=(const SSGame2GReadyRoomRsp& from) {
    CopyFrom(from);
    return *this;
  }
  inline SSGame2GReadyRoomRsp& operator=(SSGame2GReadyRoomRsp&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const SSGame2GReadyRoomRsp& default_instance();

  static inline const SSGame2GReadyRoomRsp* internal_default_instance() {
    return reinterpret_cast<const SSGame2GReadyRoomRsp*>(
               &_SSGame2GReadyRoomRsp_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    16;

  friend void swap(SSGame2GReadyRoomRsp& a, SSGame2GReadyRoomRsp& b) {
    a.Swap(&b);
  }
  inline void Swap(SSGame2GReadyRoomRsp* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SSGame2GReadyRoomRsp* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline SSGame2GReadyRoomRsp* New() const final {
    return CreateMaybeMessage<SSGame2GReadyRoomRsp>(nullptr);
  }

  SSGame2GReadyRoomRsp* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<SSGame2GReadyRoomRsp>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const SSGame2GReadyRoomRsp& from);
  void MergeFrom(const SSGame2GReadyRoomRsp& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SSGame2GReadyRoomRsp* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "pb.SSGame2GReadyRoomRsp";
  }
  protected:
  explicit SSGame2GReadyRoomRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_gate_5fgame_5fmsg_2eproto);
    return ::descriptor_table_gate_5fgame_5fmsg_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kRspFieldNumber = 2,
    kRequestIdFieldNumber = 1,
  };
  // .pb.ReadyInRoomScRsp rsp = 2;
  bool has_rsp() const;
  private:
  bool _internal_has_rsp() const;
  public:
  void clear_rsp();
  const ::pb::ReadyInRoomScRsp& rsp() const;
  ::pb::ReadyInRoomScRsp* release_rsp();
  ::pb::ReadyInRoomScRsp* mutable_rsp();
  void set_allocated_rsp(::pb::ReadyInRoomScRsp* rsp);
  private:
  const ::pb::ReadyInRoomScRsp& _internal_rsp() const;
  ::pb::ReadyInRoomScRsp* _internal_mutable_rsp();
  public:
  void unsafe_arena_set_allocated_rsp(
      ::pb::ReadyInRoomScRsp* rsp);
  ::pb::ReadyInRoomScRsp* unsafe_arena_release_rsp();

  // uint32 request_id = 1;
  void clear_request_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 request_id() const;
  void set_request_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_request_id() const;
  void _internal_set_request_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:pb.SSGame2GReadyRoomRsp)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::pb::ReadyInRoomScRsp* rsp_;
  ::PROTOBUF_NAMESPACE_ID::uint32 request_id_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_gate_5fgame_5fmsg_2eproto;
};
// -------------------------------------------------------------------

class SSGate2GChooseLevelReq PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:pb.SSGate2GChooseLevelReq) */ {
 public:
  inline SSGate2GChooseLevelReq() : SSGate2GChooseLevelReq(nullptr) {}
  virtual ~SSGate2GChooseLevelReq();

  SSGate2GChooseLevelReq(const SSGate2GChooseLevelReq& from);
  SSGate2GChooseLevelReq(SSGate2GChooseLevelReq&& from) noexcept
    : SSGate2GChooseLevelReq() {
    *this = ::std::move(from);
  }

  inline SSGate2GChooseLevelReq& operator=(const SSGate2GChooseLevelReq& from) {
    CopyFrom(from);
    return *this;
  }
  inline SSGate2GChooseLevelReq& operator=(SSGate2GChooseLevelReq&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const SSGate2GChooseLevelReq& default_instance();

  static inline const SSGate2GChooseLevelReq* internal_default_instance() {
    return reinterpret_cast<const SSGate2GChooseLevelReq*>(
               &_SSGate2GChooseLevelReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    17;

  friend void swap(SSGate2GChooseLevelReq& a, SSGate2GChooseLevelReq& b) {
    a.Swap(&b);
  }
  inline void Swap(SSGate2GChooseLevelReq* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SSGate2GChooseLevelReq* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline SSGate2GChooseLevelReq* New() const final {
    return CreateMaybeMessage<SSGate2GChooseLevelReq>(nullptr);
  }

  SSGate2GChooseLevelReq* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<SSGate2GChooseLevelReq>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const SSGate2GChooseLevelReq& from);
  void MergeFrom(const SSGate2GChooseLevelReq& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SSGate2GChooseLevelReq* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "pb.SSGate2GChooseLevelReq";
  }
  protected:
  explicit SSGate2GChooseLevelReq(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_gate_5fgame_5fmsg_2eproto);
    return ::descriptor_table_gate_5fgame_5fmsg_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kReqFieldNumber = 2,
    kRequestIdFieldNumber = 1,
  };
  // .pb.ChooseLevelCsReq req = 2;
  bool has_req() const;
  private:
  bool _internal_has_req() const;
  public:
  void clear_req();
  const ::pb::ChooseLevelCsReq& req() const;
  ::pb::ChooseLevelCsReq* release_req();
  ::pb::ChooseLevelCsReq* mutable_req();
  void set_allocated_req(::pb::ChooseLevelCsReq* req);
  private:
  const ::pb::ChooseLevelCsReq& _internal_req() const;
  ::pb::ChooseLevelCsReq* _internal_mutable_req();
  public:
  void unsafe_arena_set_allocated_req(
      ::pb::ChooseLevelCsReq* req);
  ::pb::ChooseLevelCsReq* unsafe_arena_release_req();

  // uint32 request_id = 1;
  void clear_request_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 request_id() const;
  void set_request_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_request_id() const;
  void _internal_set_request_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:pb.SSGate2GChooseLevelReq)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::pb::ChooseLevelCsReq* req_;
  ::PROTOBUF_NAMESPACE_ID::uint32 request_id_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_gate_5fgame_5fmsg_2eproto;
};
// -------------------------------------------------------------------

class SSGame2GChooseLevelRsp PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:pb.SSGame2GChooseLevelRsp) */ {
 public:
  inline SSGame2GChooseLevelRsp() : SSGame2GChooseLevelRsp(nullptr) {}
  virtual ~SSGame2GChooseLevelRsp();

  SSGame2GChooseLevelRsp(const SSGame2GChooseLevelRsp& from);
  SSGame2GChooseLevelRsp(SSGame2GChooseLevelRsp&& from) noexcept
    : SSGame2GChooseLevelRsp() {
    *this = ::std::move(from);
  }

  inline SSGame2GChooseLevelRsp& operator=(const SSGame2GChooseLevelRsp& from) {
    CopyFrom(from);
    return *this;
  }
  inline SSGame2GChooseLevelRsp& operator=(SSGame2GChooseLevelRsp&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const SSGame2GChooseLevelRsp& default_instance();

  static inline const SSGame2GChooseLevelRsp* internal_default_instance() {
    return reinterpret_cast<const SSGame2GChooseLevelRsp*>(
               &_SSGame2GChooseLevelRsp_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    18;

  friend void swap(SSGame2GChooseLevelRsp& a, SSGame2GChooseLevelRsp& b) {
    a.Swap(&b);
  }
  inline void Swap(SSGame2GChooseLevelRsp* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SSGame2GChooseLevelRsp* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline SSGame2GChooseLevelRsp* New() const final {
    return CreateMaybeMessage<SSGame2GChooseLevelRsp>(nullptr);
  }

  SSGame2GChooseLevelRsp* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<SSGame2GChooseLevelRsp>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const SSGame2GChooseLevelRsp& from);
  void MergeFrom(const SSGame2GChooseLevelRsp& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SSGame2GChooseLevelRsp* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "pb.SSGame2GChooseLevelRsp";
  }
  protected:
  explicit SSGame2GChooseLevelRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_gate_5fgame_5fmsg_2eproto);
    return ::descriptor_table_gate_5fgame_5fmsg_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kRspFieldNumber = 2,
    kRequestIdFieldNumber = 1,
  };
  // .pb.ChooseLevelScRsp rsp = 2;
  bool has_rsp() const;
  private:
  bool _internal_has_rsp() const;
  public:
  void clear_rsp();
  const ::pb::ChooseLevelScRsp& rsp() const;
  ::pb::ChooseLevelScRsp* release_rsp();
  ::pb::ChooseLevelScRsp* mutable_rsp();
  void set_allocated_rsp(::pb::ChooseLevelScRsp* rsp);
  private:
  const ::pb::ChooseLevelScRsp& _internal_rsp() const;
  ::pb::ChooseLevelScRsp* _internal_mutable_rsp();
  public:
  void unsafe_arena_set_allocated_rsp(
      ::pb::ChooseLevelScRsp* rsp);
  ::pb::ChooseLevelScRsp* unsafe_arena_release_rsp();

  // uint32 request_id = 1;
  void clear_request_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 request_id() const;
  void set_request_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_request_id() const;
  void _internal_set_request_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:pb.SSGame2GChooseLevelRsp)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::pb::ChooseLevelScRsp* rsp_;
  ::PROTOBUF_NAMESPACE_ID::uint32 request_id_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_gate_5fgame_5fmsg_2eproto;
};
// -------------------------------------------------------------------

class SSGate2GUserDisConnectNotify PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:pb.SSGate2GUserDisConnectNotify) */ {
 public:
  inline SSGate2GUserDisConnectNotify() : SSGate2GUserDisConnectNotify(nullptr) {}
  virtual ~SSGate2GUserDisConnectNotify();

  SSGate2GUserDisConnectNotify(const SSGate2GUserDisConnectNotify& from);
  SSGate2GUserDisConnectNotify(SSGate2GUserDisConnectNotify&& from) noexcept
    : SSGate2GUserDisConnectNotify() {
    *this = ::std::move(from);
  }

  inline SSGate2GUserDisConnectNotify& operator=(const SSGate2GUserDisConnectNotify& from) {
    CopyFrom(from);
    return *this;
  }
  inline SSGate2GUserDisConnectNotify& operator=(SSGate2GUserDisConnectNotify&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const SSGate2GUserDisConnectNotify& default_instance();

  static inline const SSGate2GUserDisConnectNotify* internal_default_instance() {
    return reinterpret_cast<const SSGate2GUserDisConnectNotify*>(
               &_SSGate2GUserDisConnectNotify_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    19;

  friend void swap(SSGate2GUserDisConnectNotify& a, SSGate2GUserDisConnectNotify& b) {
    a.Swap(&b);
  }
  inline void Swap(SSGate2GUserDisConnectNotify* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SSGate2GUserDisConnectNotify* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline SSGate2GUserDisConnectNotify* New() const final {
    return CreateMaybeMessage<SSGate2GUserDisConnectNotify>(nullptr);
  }

  SSGate2GUserDisConnectNotify* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<SSGate2GUserDisConnectNotify>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const SSGate2GUserDisConnectNotify& from);
  void MergeFrom(const SSGate2GUserDisConnectNotify& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SSGate2GUserDisConnectNotify* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "pb.SSGate2GUserDisConnectNotify";
  }
  protected:
  explicit SSGate2GUserDisConnectNotify(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_gate_5fgame_5fmsg_2eproto);
    return ::descriptor_table_gate_5fgame_5fmsg_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kAccountidFieldNumber = 1,
  };
  // uint32 accountid = 1;
  void clear_accountid();
  ::PROTOBUF_NAMESPACE_ID::uint32 accountid() const;
  void set_accountid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_accountid() const;
  void _internal_set_accountid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:pb.SSGate2GUserDisConnectNotify)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::uint32 accountid_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_gate_5fgame_5fmsg_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// SSGateLoginReq

// uint32 requsted_id = 1;
inline void SSGateLoginReq::clear_requsted_id() {
  requsted_id_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 SSGateLoginReq::_internal_requsted_id() const {
  return requsted_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 SSGateLoginReq::requsted_id() const {
  // @@protoc_insertion_point(field_get:pb.SSGateLoginReq.requsted_id)
  return _internal_requsted_id();
}
inline void SSGateLoginReq::_internal_set_requsted_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  requsted_id_ = value;
}
inline void SSGateLoginReq::set_requsted_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_requsted_id(value);
  // @@protoc_insertion_point(field_set:pb.SSGateLoginReq.requsted_id)
}

// .pb.LoginCsReq req = 2;
inline bool SSGateLoginReq::_internal_has_req() const {
  return this != internal_default_instance() && req_ != nullptr;
}
inline bool SSGateLoginReq::has_req() const {
  return _internal_has_req();
}
inline const ::pb::LoginCsReq& SSGateLoginReq::_internal_req() const {
  const ::pb::LoginCsReq* p = req_;
  return p != nullptr ? *p : reinterpret_cast<const ::pb::LoginCsReq&>(
      ::pb::_LoginCsReq_default_instance_);
}
inline const ::pb::LoginCsReq& SSGateLoginReq::req() const {
  // @@protoc_insertion_point(field_get:pb.SSGateLoginReq.req)
  return _internal_req();
}
inline void SSGateLoginReq::unsafe_arena_set_allocated_req(
    ::pb::LoginCsReq* req) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(req_);
  }
  req_ = req;
  if (req) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:pb.SSGateLoginReq.req)
}
inline ::pb::LoginCsReq* SSGateLoginReq::release_req() {
  
  ::pb::LoginCsReq* temp = req_;
  req_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::pb::LoginCsReq* SSGateLoginReq::unsafe_arena_release_req() {
  // @@protoc_insertion_point(field_release:pb.SSGateLoginReq.req)
  
  ::pb::LoginCsReq* temp = req_;
  req_ = nullptr;
  return temp;
}
inline ::pb::LoginCsReq* SSGateLoginReq::_internal_mutable_req() {
  
  if (req_ == nullptr) {
    auto* p = CreateMaybeMessage<::pb::LoginCsReq>(GetArena());
    req_ = p;
  }
  return req_;
}
inline ::pb::LoginCsReq* SSGateLoginReq::mutable_req() {
  // @@protoc_insertion_point(field_mutable:pb.SSGateLoginReq.req)
  return _internal_mutable_req();
}
inline void SSGateLoginReq::set_allocated_req(::pb::LoginCsReq* req) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(req_);
  }
  if (req) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(req)->GetArena();
    if (message_arena != submessage_arena) {
      req = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, req, submessage_arena);
    }
    
  } else {
    
  }
  req_ = req;
  // @@protoc_insertion_point(field_set_allocated:pb.SSGateLoginReq.req)
}

// -------------------------------------------------------------------

// SSGateLoginRsp

// uint32 request_id = 1;
inline void SSGateLoginRsp::clear_request_id() {
  request_id_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 SSGateLoginRsp::_internal_request_id() const {
  return request_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 SSGateLoginRsp::request_id() const {
  // @@protoc_insertion_point(field_get:pb.SSGateLoginRsp.request_id)
  return _internal_request_id();
}
inline void SSGateLoginRsp::_internal_set_request_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  request_id_ = value;
}
inline void SSGateLoginRsp::set_request_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_request_id(value);
  // @@protoc_insertion_point(field_set:pb.SSGateLoginRsp.request_id)
}

// .pb.LoginScRsp rsp = 2;
inline bool SSGateLoginRsp::_internal_has_rsp() const {
  return this != internal_default_instance() && rsp_ != nullptr;
}
inline bool SSGateLoginRsp::has_rsp() const {
  return _internal_has_rsp();
}
inline const ::pb::LoginScRsp& SSGateLoginRsp::_internal_rsp() const {
  const ::pb::LoginScRsp* p = rsp_;
  return p != nullptr ? *p : reinterpret_cast<const ::pb::LoginScRsp&>(
      ::pb::_LoginScRsp_default_instance_);
}
inline const ::pb::LoginScRsp& SSGateLoginRsp::rsp() const {
  // @@protoc_insertion_point(field_get:pb.SSGateLoginRsp.rsp)
  return _internal_rsp();
}
inline void SSGateLoginRsp::unsafe_arena_set_allocated_rsp(
    ::pb::LoginScRsp* rsp) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(rsp_);
  }
  rsp_ = rsp;
  if (rsp) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:pb.SSGateLoginRsp.rsp)
}
inline ::pb::LoginScRsp* SSGateLoginRsp::release_rsp() {
  
  ::pb::LoginScRsp* temp = rsp_;
  rsp_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::pb::LoginScRsp* SSGateLoginRsp::unsafe_arena_release_rsp() {
  // @@protoc_insertion_point(field_release:pb.SSGateLoginRsp.rsp)
  
  ::pb::LoginScRsp* temp = rsp_;
  rsp_ = nullptr;
  return temp;
}
inline ::pb::LoginScRsp* SSGateLoginRsp::_internal_mutable_rsp() {
  
  if (rsp_ == nullptr) {
    auto* p = CreateMaybeMessage<::pb::LoginScRsp>(GetArena());
    rsp_ = p;
  }
  return rsp_;
}
inline ::pb::LoginScRsp* SSGateLoginRsp::mutable_rsp() {
  // @@protoc_insertion_point(field_mutable:pb.SSGateLoginRsp.rsp)
  return _internal_mutable_rsp();
}
inline void SSGateLoginRsp::set_allocated_rsp(::pb::LoginScRsp* rsp) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(rsp_);
  }
  if (rsp) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(rsp)->GetArena();
    if (message_arena != submessage_arena) {
      rsp = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, rsp, submessage_arena);
    }
    
  } else {
    
  }
  rsp_ = rsp;
  // @@protoc_insertion_point(field_set_allocated:pb.SSGateLoginRsp.rsp)
}

// -------------------------------------------------------------------

// AccountInfo

// string username = 1;
inline void AccountInfo::clear_username() {
  username_.ClearToEmpty();
}
inline const std::string& AccountInfo::username() const {
  // @@protoc_insertion_point(field_get:pb.AccountInfo.username)
  return _internal_username();
}
inline void AccountInfo::set_username(const std::string& value) {
  _internal_set_username(value);
  // @@protoc_insertion_point(field_set:pb.AccountInfo.username)
}
inline std::string* AccountInfo::mutable_username() {
  // @@protoc_insertion_point(field_mutable:pb.AccountInfo.username)
  return _internal_mutable_username();
}
inline const std::string& AccountInfo::_internal_username() const {
  return username_.Get();
}
inline void AccountInfo::_internal_set_username(const std::string& value) {
  
  username_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void AccountInfo::set_username(std::string&& value) {
  
  username_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:pb.AccountInfo.username)
}
inline void AccountInfo::set_username(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  username_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:pb.AccountInfo.username)
}
inline void AccountInfo::set_username(const char* value,
    size_t size) {
  
  username_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:pb.AccountInfo.username)
}
inline std::string* AccountInfo::_internal_mutable_username() {
  
  return username_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* AccountInfo::release_username() {
  // @@protoc_insertion_point(field_release:pb.AccountInfo.username)
  return username_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void AccountInfo::set_allocated_username(std::string* username) {
  if (username != nullptr) {
    
  } else {
    
  }
  username_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), username,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:pb.AccountInfo.username)
}

// uint32 acountid = 2;
inline void AccountInfo::clear_acountid() {
  acountid_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 AccountInfo::_internal_acountid() const {
  return acountid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 AccountInfo::acountid() const {
  // @@protoc_insertion_point(field_get:pb.AccountInfo.acountid)
  return _internal_acountid();
}
inline void AccountInfo::_internal_set_acountid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  acountid_ = value;
}
inline void AccountInfo::set_acountid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_acountid(value);
  // @@protoc_insertion_point(field_set:pb.AccountInfo.acountid)
}

// -------------------------------------------------------------------

// SSAccountInfoNotify

// repeated .pb.AccountInfo infos = 1;
inline int SSAccountInfoNotify::_internal_infos_size() const {
  return infos_.size();
}
inline int SSAccountInfoNotify::infos_size() const {
  return _internal_infos_size();
}
inline void SSAccountInfoNotify::clear_infos() {
  infos_.Clear();
}
inline ::pb::AccountInfo* SSAccountInfoNotify::mutable_infos(int index) {
  // @@protoc_insertion_point(field_mutable:pb.SSAccountInfoNotify.infos)
  return infos_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::pb::AccountInfo >*
SSAccountInfoNotify::mutable_infos() {
  // @@protoc_insertion_point(field_mutable_list:pb.SSAccountInfoNotify.infos)
  return &infos_;
}
inline const ::pb::AccountInfo& SSAccountInfoNotify::_internal_infos(int index) const {
  return infos_.Get(index);
}
inline const ::pb::AccountInfo& SSAccountInfoNotify::infos(int index) const {
  // @@protoc_insertion_point(field_get:pb.SSAccountInfoNotify.infos)
  return _internal_infos(index);
}
inline ::pb::AccountInfo* SSAccountInfoNotify::_internal_add_infos() {
  return infos_.Add();
}
inline ::pb::AccountInfo* SSAccountInfoNotify::add_infos() {
  // @@protoc_insertion_point(field_add:pb.SSAccountInfoNotify.infos)
  return _internal_add_infos();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::pb::AccountInfo >&
SSAccountInfoNotify::infos() const {
  // @@protoc_insertion_point(field_list:pb.SSAccountInfoNotify.infos)
  return infos_;
}

// -------------------------------------------------------------------

// UserOnlineInfoCache

// uint32 account_id = 1;
inline void UserOnlineInfoCache::clear_account_id() {
  account_id_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 UserOnlineInfoCache::_internal_account_id() const {
  return account_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 UserOnlineInfoCache::account_id() const {
  // @@protoc_insertion_point(field_get:pb.UserOnlineInfoCache.account_id)
  return _internal_account_id();
}
inline void UserOnlineInfoCache::_internal_set_account_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  account_id_ = value;
}
inline void UserOnlineInfoCache::set_account_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_account_id(value);
  // @@protoc_insertion_point(field_set:pb.UserOnlineInfoCache.account_id)
}

// string game_addr = 2;
inline void UserOnlineInfoCache::clear_game_addr() {
  game_addr_.ClearToEmpty();
}
inline const std::string& UserOnlineInfoCache::game_addr() const {
  // @@protoc_insertion_point(field_get:pb.UserOnlineInfoCache.game_addr)
  return _internal_game_addr();
}
inline void UserOnlineInfoCache::set_game_addr(const std::string& value) {
  _internal_set_game_addr(value);
  // @@protoc_insertion_point(field_set:pb.UserOnlineInfoCache.game_addr)
}
inline std::string* UserOnlineInfoCache::mutable_game_addr() {
  // @@protoc_insertion_point(field_mutable:pb.UserOnlineInfoCache.game_addr)
  return _internal_mutable_game_addr();
}
inline const std::string& UserOnlineInfoCache::_internal_game_addr() const {
  return game_addr_.Get();
}
inline void UserOnlineInfoCache::_internal_set_game_addr(const std::string& value) {
  
  game_addr_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void UserOnlineInfoCache::set_game_addr(std::string&& value) {
  
  game_addr_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:pb.UserOnlineInfoCache.game_addr)
}
inline void UserOnlineInfoCache::set_game_addr(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  game_addr_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:pb.UserOnlineInfoCache.game_addr)
}
inline void UserOnlineInfoCache::set_game_addr(const char* value,
    size_t size) {
  
  game_addr_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:pb.UserOnlineInfoCache.game_addr)
}
inline std::string* UserOnlineInfoCache::_internal_mutable_game_addr() {
  
  return game_addr_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* UserOnlineInfoCache::release_game_addr() {
  // @@protoc_insertion_point(field_release:pb.UserOnlineInfoCache.game_addr)
  return game_addr_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void UserOnlineInfoCache::set_allocated_game_addr(std::string* game_addr) {
  if (game_addr != nullptr) {
    
  } else {
    
  }
  game_addr_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), game_addr,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:pb.UserOnlineInfoCache.game_addr)
}

// uint32 game_port = 3;
inline void UserOnlineInfoCache::clear_game_port() {
  game_port_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 UserOnlineInfoCache::_internal_game_port() const {
  return game_port_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 UserOnlineInfoCache::game_port() const {
  // @@protoc_insertion_point(field_get:pb.UserOnlineInfoCache.game_port)
  return _internal_game_port();
}
inline void UserOnlineInfoCache::_internal_set_game_port(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  game_port_ = value;
}
inline void UserOnlineInfoCache::set_game_port(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_game_port(value);
  // @@protoc_insertion_point(field_set:pb.UserOnlineInfoCache.game_port)
}

// string gate_addr = 4;
inline void UserOnlineInfoCache::clear_gate_addr() {
  gate_addr_.ClearToEmpty();
}
inline const std::string& UserOnlineInfoCache::gate_addr() const {
  // @@protoc_insertion_point(field_get:pb.UserOnlineInfoCache.gate_addr)
  return _internal_gate_addr();
}
inline void UserOnlineInfoCache::set_gate_addr(const std::string& value) {
  _internal_set_gate_addr(value);
  // @@protoc_insertion_point(field_set:pb.UserOnlineInfoCache.gate_addr)
}
inline std::string* UserOnlineInfoCache::mutable_gate_addr() {
  // @@protoc_insertion_point(field_mutable:pb.UserOnlineInfoCache.gate_addr)
  return _internal_mutable_gate_addr();
}
inline const std::string& UserOnlineInfoCache::_internal_gate_addr() const {
  return gate_addr_.Get();
}
inline void UserOnlineInfoCache::_internal_set_gate_addr(const std::string& value) {
  
  gate_addr_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void UserOnlineInfoCache::set_gate_addr(std::string&& value) {
  
  gate_addr_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:pb.UserOnlineInfoCache.gate_addr)
}
inline void UserOnlineInfoCache::set_gate_addr(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  gate_addr_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:pb.UserOnlineInfoCache.gate_addr)
}
inline void UserOnlineInfoCache::set_gate_addr(const char* value,
    size_t size) {
  
  gate_addr_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:pb.UserOnlineInfoCache.gate_addr)
}
inline std::string* UserOnlineInfoCache::_internal_mutable_gate_addr() {
  
  return gate_addr_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* UserOnlineInfoCache::release_gate_addr() {
  // @@protoc_insertion_point(field_release:pb.UserOnlineInfoCache.gate_addr)
  return gate_addr_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void UserOnlineInfoCache::set_allocated_gate_addr(std::string* gate_addr) {
  if (gate_addr != nullptr) {
    
  } else {
    
  }
  gate_addr_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), gate_addr,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:pb.UserOnlineInfoCache.gate_addr)
}

// string gate_port = 5;
inline void UserOnlineInfoCache::clear_gate_port() {
  gate_port_.ClearToEmpty();
}
inline const std::string& UserOnlineInfoCache::gate_port() const {
  // @@protoc_insertion_point(field_get:pb.UserOnlineInfoCache.gate_port)
  return _internal_gate_port();
}
inline void UserOnlineInfoCache::set_gate_port(const std::string& value) {
  _internal_set_gate_port(value);
  // @@protoc_insertion_point(field_set:pb.UserOnlineInfoCache.gate_port)
}
inline std::string* UserOnlineInfoCache::mutable_gate_port() {
  // @@protoc_insertion_point(field_mutable:pb.UserOnlineInfoCache.gate_port)
  return _internal_mutable_gate_port();
}
inline const std::string& UserOnlineInfoCache::_internal_gate_port() const {
  return gate_port_.Get();
}
inline void UserOnlineInfoCache::_internal_set_gate_port(const std::string& value) {
  
  gate_port_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void UserOnlineInfoCache::set_gate_port(std::string&& value) {
  
  gate_port_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:pb.UserOnlineInfoCache.gate_port)
}
inline void UserOnlineInfoCache::set_gate_port(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  gate_port_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:pb.UserOnlineInfoCache.gate_port)
}
inline void UserOnlineInfoCache::set_gate_port(const char* value,
    size_t size) {
  
  gate_port_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:pb.UserOnlineInfoCache.gate_port)
}
inline std::string* UserOnlineInfoCache::_internal_mutable_gate_port() {
  
  return gate_port_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* UserOnlineInfoCache::release_gate_port() {
  // @@protoc_insertion_point(field_release:pb.UserOnlineInfoCache.gate_port)
  return gate_port_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void UserOnlineInfoCache::set_allocated_gate_port(std::string* gate_port) {
  if (gate_port != nullptr) {
    
  } else {
    
  }
  gate_port_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), gate_port,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:pb.UserOnlineInfoCache.gate_port)
}

// -------------------------------------------------------------------

// SSForceUserDisConnectReq

// .pb.SSForceUserDisConnectReq.RetCode retcode = 1;
inline void SSForceUserDisConnectReq::clear_retcode() {
  retcode_ = 0;
}
inline ::pb::SSForceUserDisConnectReq_RetCode SSForceUserDisConnectReq::_internal_retcode() const {
  return static_cast< ::pb::SSForceUserDisConnectReq_RetCode >(retcode_);
}
inline ::pb::SSForceUserDisConnectReq_RetCode SSForceUserDisConnectReq::retcode() const {
  // @@protoc_insertion_point(field_get:pb.SSForceUserDisConnectReq.retcode)
  return _internal_retcode();
}
inline void SSForceUserDisConnectReq::_internal_set_retcode(::pb::SSForceUserDisConnectReq_RetCode value) {
  
  retcode_ = value;
}
inline void SSForceUserDisConnectReq::set_retcode(::pb::SSForceUserDisConnectReq_RetCode value) {
  _internal_set_retcode(value);
  // @@protoc_insertion_point(field_set:pb.SSForceUserDisConnectReq.retcode)
}

// uint32 accountid = 2;
inline void SSForceUserDisConnectReq::clear_accountid() {
  accountid_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 SSForceUserDisConnectReq::_internal_accountid() const {
  return accountid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 SSForceUserDisConnectReq::accountid() const {
  // @@protoc_insertion_point(field_get:pb.SSForceUserDisConnectReq.accountid)
  return _internal_accountid();
}
inline void SSForceUserDisConnectReq::_internal_set_accountid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  accountid_ = value;
}
inline void SSForceUserDisConnectReq::set_accountid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_accountid(value);
  // @@protoc_insertion_point(field_set:pb.SSForceUserDisConnectReq.accountid)
}

// uint32 request_gc_id = 3;
inline void SSForceUserDisConnectReq::clear_request_gc_id() {
  request_gc_id_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 SSForceUserDisConnectReq::_internal_request_gc_id() const {
  return request_gc_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 SSForceUserDisConnectReq::request_gc_id() const {
  // @@protoc_insertion_point(field_get:pb.SSForceUserDisConnectReq.request_gc_id)
  return _internal_request_gc_id();
}
inline void SSForceUserDisConnectReq::_internal_set_request_gc_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  request_gc_id_ = value;
}
inline void SSForceUserDisConnectReq::set_request_gc_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_request_gc_id(value);
  // @@protoc_insertion_point(field_set:pb.SSForceUserDisConnectReq.request_gc_id)
}

// uint32 request_gg_id = 4;
inline void SSForceUserDisConnectReq::clear_request_gg_id() {
  request_gg_id_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 SSForceUserDisConnectReq::_internal_request_gg_id() const {
  return request_gg_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 SSForceUserDisConnectReq::request_gg_id() const {
  // @@protoc_insertion_point(field_get:pb.SSForceUserDisConnectReq.request_gg_id)
  return _internal_request_gg_id();
}
inline void SSForceUserDisConnectReq::_internal_set_request_gg_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  request_gg_id_ = value;
}
inline void SSForceUserDisConnectReq::set_request_gg_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_request_gg_id(value);
  // @@protoc_insertion_point(field_set:pb.SSForceUserDisConnectReq.request_gg_id)
}

// -------------------------------------------------------------------

// SSForceUserDisConnectRsp

// .pb.SSForceUserDisConnectRsp.RetCode retcode = 1;
inline void SSForceUserDisConnectRsp::clear_retcode() {
  retcode_ = 0;
}
inline ::pb::SSForceUserDisConnectRsp_RetCode SSForceUserDisConnectRsp::_internal_retcode() const {
  return static_cast< ::pb::SSForceUserDisConnectRsp_RetCode >(retcode_);
}
inline ::pb::SSForceUserDisConnectRsp_RetCode SSForceUserDisConnectRsp::retcode() const {
  // @@protoc_insertion_point(field_get:pb.SSForceUserDisConnectRsp.retcode)
  return _internal_retcode();
}
inline void SSForceUserDisConnectRsp::_internal_set_retcode(::pb::SSForceUserDisConnectRsp_RetCode value) {
  
  retcode_ = value;
}
inline void SSForceUserDisConnectRsp::set_retcode(::pb::SSForceUserDisConnectRsp_RetCode value) {
  _internal_set_retcode(value);
  // @@protoc_insertion_point(field_set:pb.SSForceUserDisConnectRsp.retcode)
}

// uint32 accountid = 2;
inline void SSForceUserDisConnectRsp::clear_accountid() {
  accountid_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 SSForceUserDisConnectRsp::_internal_accountid() const {
  return accountid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 SSForceUserDisConnectRsp::accountid() const {
  // @@protoc_insertion_point(field_get:pb.SSForceUserDisConnectRsp.accountid)
  return _internal_accountid();
}
inline void SSForceUserDisConnectRsp::_internal_set_accountid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  accountid_ = value;
}
inline void SSForceUserDisConnectRsp::set_accountid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_accountid(value);
  // @@protoc_insertion_point(field_set:pb.SSForceUserDisConnectRsp.accountid)
}

// uint32 request_gc_id = 3;
inline void SSForceUserDisConnectRsp::clear_request_gc_id() {
  request_gc_id_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 SSForceUserDisConnectRsp::_internal_request_gc_id() const {
  return request_gc_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 SSForceUserDisConnectRsp::request_gc_id() const {
  // @@protoc_insertion_point(field_get:pb.SSForceUserDisConnectRsp.request_gc_id)
  return _internal_request_gc_id();
}
inline void SSForceUserDisConnectRsp::_internal_set_request_gc_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  request_gc_id_ = value;
}
inline void SSForceUserDisConnectRsp::set_request_gc_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_request_gc_id(value);
  // @@protoc_insertion_point(field_set:pb.SSForceUserDisConnectRsp.request_gc_id)
}

// uint32 request_gg_id = 4;
inline void SSForceUserDisConnectRsp::clear_request_gg_id() {
  request_gg_id_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 SSForceUserDisConnectRsp::_internal_request_gg_id() const {
  return request_gg_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 SSForceUserDisConnectRsp::request_gg_id() const {
  // @@protoc_insertion_point(field_get:pb.SSForceUserDisConnectRsp.request_gg_id)
  return _internal_request_gg_id();
}
inline void SSForceUserDisConnectRsp::_internal_set_request_gg_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  request_gg_id_ = value;
}
inline void SSForceUserDisConnectRsp::set_request_gg_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_request_gg_id(value);
  // @@protoc_insertion_point(field_set:pb.SSForceUserDisConnectRsp.request_gg_id)
}

// -------------------------------------------------------------------

// SSBattleMsgNotify

// uint32 request_id = 1;
inline void SSBattleMsgNotify::clear_request_id() {
  request_id_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 SSBattleMsgNotify::_internal_request_id() const {
  return request_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 SSBattleMsgNotify::request_id() const {
  // @@protoc_insertion_point(field_get:pb.SSBattleMsgNotify.request_id)
  return _internal_request_id();
}
inline void SSBattleMsgNotify::_internal_set_request_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  request_id_ = value;
}
inline void SSBattleMsgNotify::set_request_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_request_id(value);
  // @@protoc_insertion_point(field_set:pb.SSBattleMsgNotify.request_id)
}

// .pb.BattleMsgScNotify notify = 2;
inline bool SSBattleMsgNotify::_internal_has_notify() const {
  return this != internal_default_instance() && notify_ != nullptr;
}
inline bool SSBattleMsgNotify::has_notify() const {
  return _internal_has_notify();
}
inline const ::pb::BattleMsgScNotify& SSBattleMsgNotify::_internal_notify() const {
  const ::pb::BattleMsgScNotify* p = notify_;
  return p != nullptr ? *p : reinterpret_cast<const ::pb::BattleMsgScNotify&>(
      ::pb::_BattleMsgScNotify_default_instance_);
}
inline const ::pb::BattleMsgScNotify& SSBattleMsgNotify::notify() const {
  // @@protoc_insertion_point(field_get:pb.SSBattleMsgNotify.notify)
  return _internal_notify();
}
inline void SSBattleMsgNotify::unsafe_arena_set_allocated_notify(
    ::pb::BattleMsgScNotify* notify) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(notify_);
  }
  notify_ = notify;
  if (notify) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:pb.SSBattleMsgNotify.notify)
}
inline ::pb::BattleMsgScNotify* SSBattleMsgNotify::release_notify() {
  
  ::pb::BattleMsgScNotify* temp = notify_;
  notify_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::pb::BattleMsgScNotify* SSBattleMsgNotify::unsafe_arena_release_notify() {
  // @@protoc_insertion_point(field_release:pb.SSBattleMsgNotify.notify)
  
  ::pb::BattleMsgScNotify* temp = notify_;
  notify_ = nullptr;
  return temp;
}
inline ::pb::BattleMsgScNotify* SSBattleMsgNotify::_internal_mutable_notify() {
  
  if (notify_ == nullptr) {
    auto* p = CreateMaybeMessage<::pb::BattleMsgScNotify>(GetArena());
    notify_ = p;
  }
  return notify_;
}
inline ::pb::BattleMsgScNotify* SSBattleMsgNotify::mutable_notify() {
  // @@protoc_insertion_point(field_mutable:pb.SSBattleMsgNotify.notify)
  return _internal_mutable_notify();
}
inline void SSBattleMsgNotify::set_allocated_notify(::pb::BattleMsgScNotify* notify) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(notify_);
  }
  if (notify) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(notify)->GetArena();
    if (message_arena != submessage_arena) {
      notify = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, notify, submessage_arena);
    }
    
  } else {
    
  }
  notify_ = notify;
  // @@protoc_insertion_point(field_set_allocated:pb.SSBattleMsgNotify.notify)
}

// -------------------------------------------------------------------

// SSGame2GRoomMsgNotify

// uint32 request_id = 1;
inline void SSGame2GRoomMsgNotify::clear_request_id() {
  request_id_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 SSGame2GRoomMsgNotify::_internal_request_id() const {
  return request_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 SSGame2GRoomMsgNotify::request_id() const {
  // @@protoc_insertion_point(field_get:pb.SSGame2GRoomMsgNotify.request_id)
  return _internal_request_id();
}
inline void SSGame2GRoomMsgNotify::_internal_set_request_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  request_id_ = value;
}
inline void SSGame2GRoomMsgNotify::set_request_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_request_id(value);
  // @@protoc_insertion_point(field_set:pb.SSGame2GRoomMsgNotify.request_id)
}

// .pb.SCGate2ClientMsgNotify notify = 2;
inline bool SSGame2GRoomMsgNotify::_internal_has_notify() const {
  return this != internal_default_instance() && notify_ != nullptr;
}
inline bool SSGame2GRoomMsgNotify::has_notify() const {
  return _internal_has_notify();
}
inline const ::pb::SCGate2ClientMsgNotify& SSGame2GRoomMsgNotify::_internal_notify() const {
  const ::pb::SCGate2ClientMsgNotify* p = notify_;
  return p != nullptr ? *p : reinterpret_cast<const ::pb::SCGate2ClientMsgNotify&>(
      ::pb::_SCGate2ClientMsgNotify_default_instance_);
}
inline const ::pb::SCGate2ClientMsgNotify& SSGame2GRoomMsgNotify::notify() const {
  // @@protoc_insertion_point(field_get:pb.SSGame2GRoomMsgNotify.notify)
  return _internal_notify();
}
inline void SSGame2GRoomMsgNotify::unsafe_arena_set_allocated_notify(
    ::pb::SCGate2ClientMsgNotify* notify) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(notify_);
  }
  notify_ = notify;
  if (notify) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:pb.SSGame2GRoomMsgNotify.notify)
}
inline ::pb::SCGate2ClientMsgNotify* SSGame2GRoomMsgNotify::release_notify() {
  
  ::pb::SCGate2ClientMsgNotify* temp = notify_;
  notify_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::pb::SCGate2ClientMsgNotify* SSGame2GRoomMsgNotify::unsafe_arena_release_notify() {
  // @@protoc_insertion_point(field_release:pb.SSGame2GRoomMsgNotify.notify)
  
  ::pb::SCGate2ClientMsgNotify* temp = notify_;
  notify_ = nullptr;
  return temp;
}
inline ::pb::SCGate2ClientMsgNotify* SSGame2GRoomMsgNotify::_internal_mutable_notify() {
  
  if (notify_ == nullptr) {
    auto* p = CreateMaybeMessage<::pb::SCGate2ClientMsgNotify>(GetArena());
    notify_ = p;
  }
  return notify_;
}
inline ::pb::SCGate2ClientMsgNotify* SSGame2GRoomMsgNotify::mutable_notify() {
  // @@protoc_insertion_point(field_mutable:pb.SSGame2GRoomMsgNotify.notify)
  return _internal_mutable_notify();
}
inline void SSGame2GRoomMsgNotify::set_allocated_notify(::pb::SCGate2ClientMsgNotify* notify) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(notify_);
  }
  if (notify) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(notify)->GetArena();
    if (message_arena != submessage_arena) {
      notify = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, notify, submessage_arena);
    }
    
  } else {
    
  }
  notify_ = notify;
  // @@protoc_insertion_point(field_set_allocated:pb.SSGame2GRoomMsgNotify.notify)
}

// -------------------------------------------------------------------

// SSGate2GCreateRoomReq

// uint32 request_id = 1;
inline void SSGate2GCreateRoomReq::clear_request_id() {
  request_id_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 SSGate2GCreateRoomReq::_internal_request_id() const {
  return request_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 SSGate2GCreateRoomReq::request_id() const {
  // @@protoc_insertion_point(field_get:pb.SSGate2GCreateRoomReq.request_id)
  return _internal_request_id();
}
inline void SSGate2GCreateRoomReq::_internal_set_request_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  request_id_ = value;
}
inline void SSGate2GCreateRoomReq::set_request_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_request_id(value);
  // @@protoc_insertion_point(field_set:pb.SSGate2GCreateRoomReq.request_id)
}

// .pb.TryCreateRoomCsReq req = 2;
inline bool SSGate2GCreateRoomReq::_internal_has_req() const {
  return this != internal_default_instance() && req_ != nullptr;
}
inline bool SSGate2GCreateRoomReq::has_req() const {
  return _internal_has_req();
}
inline const ::pb::TryCreateRoomCsReq& SSGate2GCreateRoomReq::_internal_req() const {
  const ::pb::TryCreateRoomCsReq* p = req_;
  return p != nullptr ? *p : reinterpret_cast<const ::pb::TryCreateRoomCsReq&>(
      ::pb::_TryCreateRoomCsReq_default_instance_);
}
inline const ::pb::TryCreateRoomCsReq& SSGate2GCreateRoomReq::req() const {
  // @@protoc_insertion_point(field_get:pb.SSGate2GCreateRoomReq.req)
  return _internal_req();
}
inline void SSGate2GCreateRoomReq::unsafe_arena_set_allocated_req(
    ::pb::TryCreateRoomCsReq* req) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(req_);
  }
  req_ = req;
  if (req) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:pb.SSGate2GCreateRoomReq.req)
}
inline ::pb::TryCreateRoomCsReq* SSGate2GCreateRoomReq::release_req() {
  
  ::pb::TryCreateRoomCsReq* temp = req_;
  req_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::pb::TryCreateRoomCsReq* SSGate2GCreateRoomReq::unsafe_arena_release_req() {
  // @@protoc_insertion_point(field_release:pb.SSGate2GCreateRoomReq.req)
  
  ::pb::TryCreateRoomCsReq* temp = req_;
  req_ = nullptr;
  return temp;
}
inline ::pb::TryCreateRoomCsReq* SSGate2GCreateRoomReq::_internal_mutable_req() {
  
  if (req_ == nullptr) {
    auto* p = CreateMaybeMessage<::pb::TryCreateRoomCsReq>(GetArena());
    req_ = p;
  }
  return req_;
}
inline ::pb::TryCreateRoomCsReq* SSGate2GCreateRoomReq::mutable_req() {
  // @@protoc_insertion_point(field_mutable:pb.SSGate2GCreateRoomReq.req)
  return _internal_mutable_req();
}
inline void SSGate2GCreateRoomReq::set_allocated_req(::pb::TryCreateRoomCsReq* req) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(req_);
  }
  if (req) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(req)->GetArena();
    if (message_arena != submessage_arena) {
      req = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, req, submessage_arena);
    }
    
  } else {
    
  }
  req_ = req;
  // @@protoc_insertion_point(field_set_allocated:pb.SSGate2GCreateRoomReq.req)
}

// -------------------------------------------------------------------

// SSGame2GCreateRoomRsp

// uint32 request_id = 1;
inline void SSGame2GCreateRoomRsp::clear_request_id() {
  request_id_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 SSGame2GCreateRoomRsp::_internal_request_id() const {
  return request_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 SSGame2GCreateRoomRsp::request_id() const {
  // @@protoc_insertion_point(field_get:pb.SSGame2GCreateRoomRsp.request_id)
  return _internal_request_id();
}
inline void SSGame2GCreateRoomRsp::_internal_set_request_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  request_id_ = value;
}
inline void SSGame2GCreateRoomRsp::set_request_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_request_id(value);
  // @@protoc_insertion_point(field_set:pb.SSGame2GCreateRoomRsp.request_id)
}

// .pb.TryCreateRoomScRsp rsp = 2;
inline bool SSGame2GCreateRoomRsp::_internal_has_rsp() const {
  return this != internal_default_instance() && rsp_ != nullptr;
}
inline bool SSGame2GCreateRoomRsp::has_rsp() const {
  return _internal_has_rsp();
}
inline const ::pb::TryCreateRoomScRsp& SSGame2GCreateRoomRsp::_internal_rsp() const {
  const ::pb::TryCreateRoomScRsp* p = rsp_;
  return p != nullptr ? *p : reinterpret_cast<const ::pb::TryCreateRoomScRsp&>(
      ::pb::_TryCreateRoomScRsp_default_instance_);
}
inline const ::pb::TryCreateRoomScRsp& SSGame2GCreateRoomRsp::rsp() const {
  // @@protoc_insertion_point(field_get:pb.SSGame2GCreateRoomRsp.rsp)
  return _internal_rsp();
}
inline void SSGame2GCreateRoomRsp::unsafe_arena_set_allocated_rsp(
    ::pb::TryCreateRoomScRsp* rsp) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(rsp_);
  }
  rsp_ = rsp;
  if (rsp) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:pb.SSGame2GCreateRoomRsp.rsp)
}
inline ::pb::TryCreateRoomScRsp* SSGame2GCreateRoomRsp::release_rsp() {
  
  ::pb::TryCreateRoomScRsp* temp = rsp_;
  rsp_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::pb::TryCreateRoomScRsp* SSGame2GCreateRoomRsp::unsafe_arena_release_rsp() {
  // @@protoc_insertion_point(field_release:pb.SSGame2GCreateRoomRsp.rsp)
  
  ::pb::TryCreateRoomScRsp* temp = rsp_;
  rsp_ = nullptr;
  return temp;
}
inline ::pb::TryCreateRoomScRsp* SSGame2GCreateRoomRsp::_internal_mutable_rsp() {
  
  if (rsp_ == nullptr) {
    auto* p = CreateMaybeMessage<::pb::TryCreateRoomScRsp>(GetArena());
    rsp_ = p;
  }
  return rsp_;
}
inline ::pb::TryCreateRoomScRsp* SSGame2GCreateRoomRsp::mutable_rsp() {
  // @@protoc_insertion_point(field_mutable:pb.SSGame2GCreateRoomRsp.rsp)
  return _internal_mutable_rsp();
}
inline void SSGame2GCreateRoomRsp::set_allocated_rsp(::pb::TryCreateRoomScRsp* rsp) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(rsp_);
  }
  if (rsp) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(rsp)->GetArena();
    if (message_arena != submessage_arena) {
      rsp = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, rsp, submessage_arena);
    }
    
  } else {
    
  }
  rsp_ = rsp;
  // @@protoc_insertion_point(field_set_allocated:pb.SSGame2GCreateRoomRsp.rsp)
}

// -------------------------------------------------------------------

// SSGate2GEnterRoomReq

// uint32 request_id = 1;
inline void SSGate2GEnterRoomReq::clear_request_id() {
  request_id_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 SSGate2GEnterRoomReq::_internal_request_id() const {
  return request_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 SSGate2GEnterRoomReq::request_id() const {
  // @@protoc_insertion_point(field_get:pb.SSGate2GEnterRoomReq.request_id)
  return _internal_request_id();
}
inline void SSGate2GEnterRoomReq::_internal_set_request_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  request_id_ = value;
}
inline void SSGate2GEnterRoomReq::set_request_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_request_id(value);
  // @@protoc_insertion_point(field_set:pb.SSGate2GEnterRoomReq.request_id)
}

// .pb.TryEnterRoomCsReq req = 2;
inline bool SSGate2GEnterRoomReq::_internal_has_req() const {
  return this != internal_default_instance() && req_ != nullptr;
}
inline bool SSGate2GEnterRoomReq::has_req() const {
  return _internal_has_req();
}
inline const ::pb::TryEnterRoomCsReq& SSGate2GEnterRoomReq::_internal_req() const {
  const ::pb::TryEnterRoomCsReq* p = req_;
  return p != nullptr ? *p : reinterpret_cast<const ::pb::TryEnterRoomCsReq&>(
      ::pb::_TryEnterRoomCsReq_default_instance_);
}
inline const ::pb::TryEnterRoomCsReq& SSGate2GEnterRoomReq::req() const {
  // @@protoc_insertion_point(field_get:pb.SSGate2GEnterRoomReq.req)
  return _internal_req();
}
inline void SSGate2GEnterRoomReq::unsafe_arena_set_allocated_req(
    ::pb::TryEnterRoomCsReq* req) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(req_);
  }
  req_ = req;
  if (req) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:pb.SSGate2GEnterRoomReq.req)
}
inline ::pb::TryEnterRoomCsReq* SSGate2GEnterRoomReq::release_req() {
  
  ::pb::TryEnterRoomCsReq* temp = req_;
  req_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::pb::TryEnterRoomCsReq* SSGate2GEnterRoomReq::unsafe_arena_release_req() {
  // @@protoc_insertion_point(field_release:pb.SSGate2GEnterRoomReq.req)
  
  ::pb::TryEnterRoomCsReq* temp = req_;
  req_ = nullptr;
  return temp;
}
inline ::pb::TryEnterRoomCsReq* SSGate2GEnterRoomReq::_internal_mutable_req() {
  
  if (req_ == nullptr) {
    auto* p = CreateMaybeMessage<::pb::TryEnterRoomCsReq>(GetArena());
    req_ = p;
  }
  return req_;
}
inline ::pb::TryEnterRoomCsReq* SSGate2GEnterRoomReq::mutable_req() {
  // @@protoc_insertion_point(field_mutable:pb.SSGate2GEnterRoomReq.req)
  return _internal_mutable_req();
}
inline void SSGate2GEnterRoomReq::set_allocated_req(::pb::TryEnterRoomCsReq* req) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(req_);
  }
  if (req) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(req)->GetArena();
    if (message_arena != submessage_arena) {
      req = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, req, submessage_arena);
    }
    
  } else {
    
  }
  req_ = req;
  // @@protoc_insertion_point(field_set_allocated:pb.SSGate2GEnterRoomReq.req)
}

// -------------------------------------------------------------------

// SSGame2GEnterRoomRsp

// uint32 request_id = 1;
inline void SSGame2GEnterRoomRsp::clear_request_id() {
  request_id_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 SSGame2GEnterRoomRsp::_internal_request_id() const {
  return request_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 SSGame2GEnterRoomRsp::request_id() const {
  // @@protoc_insertion_point(field_get:pb.SSGame2GEnterRoomRsp.request_id)
  return _internal_request_id();
}
inline void SSGame2GEnterRoomRsp::_internal_set_request_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  request_id_ = value;
}
inline void SSGame2GEnterRoomRsp::set_request_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_request_id(value);
  // @@protoc_insertion_point(field_set:pb.SSGame2GEnterRoomRsp.request_id)
}

// .pb.TryEnterRoomScRsp rsp = 2;
inline bool SSGame2GEnterRoomRsp::_internal_has_rsp() const {
  return this != internal_default_instance() && rsp_ != nullptr;
}
inline bool SSGame2GEnterRoomRsp::has_rsp() const {
  return _internal_has_rsp();
}
inline const ::pb::TryEnterRoomScRsp& SSGame2GEnterRoomRsp::_internal_rsp() const {
  const ::pb::TryEnterRoomScRsp* p = rsp_;
  return p != nullptr ? *p : reinterpret_cast<const ::pb::TryEnterRoomScRsp&>(
      ::pb::_TryEnterRoomScRsp_default_instance_);
}
inline const ::pb::TryEnterRoomScRsp& SSGame2GEnterRoomRsp::rsp() const {
  // @@protoc_insertion_point(field_get:pb.SSGame2GEnterRoomRsp.rsp)
  return _internal_rsp();
}
inline void SSGame2GEnterRoomRsp::unsafe_arena_set_allocated_rsp(
    ::pb::TryEnterRoomScRsp* rsp) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(rsp_);
  }
  rsp_ = rsp;
  if (rsp) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:pb.SSGame2GEnterRoomRsp.rsp)
}
inline ::pb::TryEnterRoomScRsp* SSGame2GEnterRoomRsp::release_rsp() {
  
  ::pb::TryEnterRoomScRsp* temp = rsp_;
  rsp_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::pb::TryEnterRoomScRsp* SSGame2GEnterRoomRsp::unsafe_arena_release_rsp() {
  // @@protoc_insertion_point(field_release:pb.SSGame2GEnterRoomRsp.rsp)
  
  ::pb::TryEnterRoomScRsp* temp = rsp_;
  rsp_ = nullptr;
  return temp;
}
inline ::pb::TryEnterRoomScRsp* SSGame2GEnterRoomRsp::_internal_mutable_rsp() {
  
  if (rsp_ == nullptr) {
    auto* p = CreateMaybeMessage<::pb::TryEnterRoomScRsp>(GetArena());
    rsp_ = p;
  }
  return rsp_;
}
inline ::pb::TryEnterRoomScRsp* SSGame2GEnterRoomRsp::mutable_rsp() {
  // @@protoc_insertion_point(field_mutable:pb.SSGame2GEnterRoomRsp.rsp)
  return _internal_mutable_rsp();
}
inline void SSGame2GEnterRoomRsp::set_allocated_rsp(::pb::TryEnterRoomScRsp* rsp) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(rsp_);
  }
  if (rsp) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(rsp)->GetArena();
    if (message_arena != submessage_arena) {
      rsp = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, rsp, submessage_arena);
    }
    
  } else {
    
  }
  rsp_ = rsp;
  // @@protoc_insertion_point(field_set_allocated:pb.SSGame2GEnterRoomRsp.rsp)
}

// -------------------------------------------------------------------

// SSGate2GLeaveRoomReq

// uint32 request_id = 1;
inline void SSGate2GLeaveRoomReq::clear_request_id() {
  request_id_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 SSGate2GLeaveRoomReq::_internal_request_id() const {
  return request_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 SSGate2GLeaveRoomReq::request_id() const {
  // @@protoc_insertion_point(field_get:pb.SSGate2GLeaveRoomReq.request_id)
  return _internal_request_id();
}
inline void SSGate2GLeaveRoomReq::_internal_set_request_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  request_id_ = value;
}
inline void SSGate2GLeaveRoomReq::set_request_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_request_id(value);
  // @@protoc_insertion_point(field_set:pb.SSGate2GLeaveRoomReq.request_id)
}

// .pb.TryLeaveRoomCsReq req = 2;
inline bool SSGate2GLeaveRoomReq::_internal_has_req() const {
  return this != internal_default_instance() && req_ != nullptr;
}
inline bool SSGate2GLeaveRoomReq::has_req() const {
  return _internal_has_req();
}
inline const ::pb::TryLeaveRoomCsReq& SSGate2GLeaveRoomReq::_internal_req() const {
  const ::pb::TryLeaveRoomCsReq* p = req_;
  return p != nullptr ? *p : reinterpret_cast<const ::pb::TryLeaveRoomCsReq&>(
      ::pb::_TryLeaveRoomCsReq_default_instance_);
}
inline const ::pb::TryLeaveRoomCsReq& SSGate2GLeaveRoomReq::req() const {
  // @@protoc_insertion_point(field_get:pb.SSGate2GLeaveRoomReq.req)
  return _internal_req();
}
inline void SSGate2GLeaveRoomReq::unsafe_arena_set_allocated_req(
    ::pb::TryLeaveRoomCsReq* req) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(req_);
  }
  req_ = req;
  if (req) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:pb.SSGate2GLeaveRoomReq.req)
}
inline ::pb::TryLeaveRoomCsReq* SSGate2GLeaveRoomReq::release_req() {
  
  ::pb::TryLeaveRoomCsReq* temp = req_;
  req_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::pb::TryLeaveRoomCsReq* SSGate2GLeaveRoomReq::unsafe_arena_release_req() {
  // @@protoc_insertion_point(field_release:pb.SSGate2GLeaveRoomReq.req)
  
  ::pb::TryLeaveRoomCsReq* temp = req_;
  req_ = nullptr;
  return temp;
}
inline ::pb::TryLeaveRoomCsReq* SSGate2GLeaveRoomReq::_internal_mutable_req() {
  
  if (req_ == nullptr) {
    auto* p = CreateMaybeMessage<::pb::TryLeaveRoomCsReq>(GetArena());
    req_ = p;
  }
  return req_;
}
inline ::pb::TryLeaveRoomCsReq* SSGate2GLeaveRoomReq::mutable_req() {
  // @@protoc_insertion_point(field_mutable:pb.SSGate2GLeaveRoomReq.req)
  return _internal_mutable_req();
}
inline void SSGate2GLeaveRoomReq::set_allocated_req(::pb::TryLeaveRoomCsReq* req) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(req_);
  }
  if (req) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(req)->GetArena();
    if (message_arena != submessage_arena) {
      req = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, req, submessage_arena);
    }
    
  } else {
    
  }
  req_ = req;
  // @@protoc_insertion_point(field_set_allocated:pb.SSGate2GLeaveRoomReq.req)
}

// -------------------------------------------------------------------

// SSGame2GLeaveRoomRsp

// uint32 request_id = 1;
inline void SSGame2GLeaveRoomRsp::clear_request_id() {
  request_id_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 SSGame2GLeaveRoomRsp::_internal_request_id() const {
  return request_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 SSGame2GLeaveRoomRsp::request_id() const {
  // @@protoc_insertion_point(field_get:pb.SSGame2GLeaveRoomRsp.request_id)
  return _internal_request_id();
}
inline void SSGame2GLeaveRoomRsp::_internal_set_request_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  request_id_ = value;
}
inline void SSGame2GLeaveRoomRsp::set_request_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_request_id(value);
  // @@protoc_insertion_point(field_set:pb.SSGame2GLeaveRoomRsp.request_id)
}

// .pb.TryLeaveRoomScRsp rsp = 2;
inline bool SSGame2GLeaveRoomRsp::_internal_has_rsp() const {
  return this != internal_default_instance() && rsp_ != nullptr;
}
inline bool SSGame2GLeaveRoomRsp::has_rsp() const {
  return _internal_has_rsp();
}
inline const ::pb::TryLeaveRoomScRsp& SSGame2GLeaveRoomRsp::_internal_rsp() const {
  const ::pb::TryLeaveRoomScRsp* p = rsp_;
  return p != nullptr ? *p : reinterpret_cast<const ::pb::TryLeaveRoomScRsp&>(
      ::pb::_TryLeaveRoomScRsp_default_instance_);
}
inline const ::pb::TryLeaveRoomScRsp& SSGame2GLeaveRoomRsp::rsp() const {
  // @@protoc_insertion_point(field_get:pb.SSGame2GLeaveRoomRsp.rsp)
  return _internal_rsp();
}
inline void SSGame2GLeaveRoomRsp::unsafe_arena_set_allocated_rsp(
    ::pb::TryLeaveRoomScRsp* rsp) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(rsp_);
  }
  rsp_ = rsp;
  if (rsp) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:pb.SSGame2GLeaveRoomRsp.rsp)
}
inline ::pb::TryLeaveRoomScRsp* SSGame2GLeaveRoomRsp::release_rsp() {
  
  ::pb::TryLeaveRoomScRsp* temp = rsp_;
  rsp_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::pb::TryLeaveRoomScRsp* SSGame2GLeaveRoomRsp::unsafe_arena_release_rsp() {
  // @@protoc_insertion_point(field_release:pb.SSGame2GLeaveRoomRsp.rsp)
  
  ::pb::TryLeaveRoomScRsp* temp = rsp_;
  rsp_ = nullptr;
  return temp;
}
inline ::pb::TryLeaveRoomScRsp* SSGame2GLeaveRoomRsp::_internal_mutable_rsp() {
  
  if (rsp_ == nullptr) {
    auto* p = CreateMaybeMessage<::pb::TryLeaveRoomScRsp>(GetArena());
    rsp_ = p;
  }
  return rsp_;
}
inline ::pb::TryLeaveRoomScRsp* SSGame2GLeaveRoomRsp::mutable_rsp() {
  // @@protoc_insertion_point(field_mutable:pb.SSGame2GLeaveRoomRsp.rsp)
  return _internal_mutable_rsp();
}
inline void SSGame2GLeaveRoomRsp::set_allocated_rsp(::pb::TryLeaveRoomScRsp* rsp) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(rsp_);
  }
  if (rsp) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(rsp)->GetArena();
    if (message_arena != submessage_arena) {
      rsp = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, rsp, submessage_arena);
    }
    
  } else {
    
  }
  rsp_ = rsp;
  // @@protoc_insertion_point(field_set_allocated:pb.SSGame2GLeaveRoomRsp.rsp)
}

// -------------------------------------------------------------------

// SSGate2GReadyRoomReq

// uint32 request_id = 1;
inline void SSGate2GReadyRoomReq::clear_request_id() {
  request_id_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 SSGate2GReadyRoomReq::_internal_request_id() const {
  return request_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 SSGate2GReadyRoomReq::request_id() const {
  // @@protoc_insertion_point(field_get:pb.SSGate2GReadyRoomReq.request_id)
  return _internal_request_id();
}
inline void SSGate2GReadyRoomReq::_internal_set_request_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  request_id_ = value;
}
inline void SSGate2GReadyRoomReq::set_request_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_request_id(value);
  // @@protoc_insertion_point(field_set:pb.SSGate2GReadyRoomReq.request_id)
}

// .pb.ReadyInRoomCsReq req = 2;
inline bool SSGate2GReadyRoomReq::_internal_has_req() const {
  return this != internal_default_instance() && req_ != nullptr;
}
inline bool SSGate2GReadyRoomReq::has_req() const {
  return _internal_has_req();
}
inline const ::pb::ReadyInRoomCsReq& SSGate2GReadyRoomReq::_internal_req() const {
  const ::pb::ReadyInRoomCsReq* p = req_;
  return p != nullptr ? *p : reinterpret_cast<const ::pb::ReadyInRoomCsReq&>(
      ::pb::_ReadyInRoomCsReq_default_instance_);
}
inline const ::pb::ReadyInRoomCsReq& SSGate2GReadyRoomReq::req() const {
  // @@protoc_insertion_point(field_get:pb.SSGate2GReadyRoomReq.req)
  return _internal_req();
}
inline void SSGate2GReadyRoomReq::unsafe_arena_set_allocated_req(
    ::pb::ReadyInRoomCsReq* req) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(req_);
  }
  req_ = req;
  if (req) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:pb.SSGate2GReadyRoomReq.req)
}
inline ::pb::ReadyInRoomCsReq* SSGate2GReadyRoomReq::release_req() {
  
  ::pb::ReadyInRoomCsReq* temp = req_;
  req_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::pb::ReadyInRoomCsReq* SSGate2GReadyRoomReq::unsafe_arena_release_req() {
  // @@protoc_insertion_point(field_release:pb.SSGate2GReadyRoomReq.req)
  
  ::pb::ReadyInRoomCsReq* temp = req_;
  req_ = nullptr;
  return temp;
}
inline ::pb::ReadyInRoomCsReq* SSGate2GReadyRoomReq::_internal_mutable_req() {
  
  if (req_ == nullptr) {
    auto* p = CreateMaybeMessage<::pb::ReadyInRoomCsReq>(GetArena());
    req_ = p;
  }
  return req_;
}
inline ::pb::ReadyInRoomCsReq* SSGate2GReadyRoomReq::mutable_req() {
  // @@protoc_insertion_point(field_mutable:pb.SSGate2GReadyRoomReq.req)
  return _internal_mutable_req();
}
inline void SSGate2GReadyRoomReq::set_allocated_req(::pb::ReadyInRoomCsReq* req) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(req_);
  }
  if (req) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(req)->GetArena();
    if (message_arena != submessage_arena) {
      req = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, req, submessage_arena);
    }
    
  } else {
    
  }
  req_ = req;
  // @@protoc_insertion_point(field_set_allocated:pb.SSGate2GReadyRoomReq.req)
}

// -------------------------------------------------------------------

// SSGame2GReadyRoomRsp

// uint32 request_id = 1;
inline void SSGame2GReadyRoomRsp::clear_request_id() {
  request_id_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 SSGame2GReadyRoomRsp::_internal_request_id() const {
  return request_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 SSGame2GReadyRoomRsp::request_id() const {
  // @@protoc_insertion_point(field_get:pb.SSGame2GReadyRoomRsp.request_id)
  return _internal_request_id();
}
inline void SSGame2GReadyRoomRsp::_internal_set_request_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  request_id_ = value;
}
inline void SSGame2GReadyRoomRsp::set_request_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_request_id(value);
  // @@protoc_insertion_point(field_set:pb.SSGame2GReadyRoomRsp.request_id)
}

// .pb.ReadyInRoomScRsp rsp = 2;
inline bool SSGame2GReadyRoomRsp::_internal_has_rsp() const {
  return this != internal_default_instance() && rsp_ != nullptr;
}
inline bool SSGame2GReadyRoomRsp::has_rsp() const {
  return _internal_has_rsp();
}
inline const ::pb::ReadyInRoomScRsp& SSGame2GReadyRoomRsp::_internal_rsp() const {
  const ::pb::ReadyInRoomScRsp* p = rsp_;
  return p != nullptr ? *p : reinterpret_cast<const ::pb::ReadyInRoomScRsp&>(
      ::pb::_ReadyInRoomScRsp_default_instance_);
}
inline const ::pb::ReadyInRoomScRsp& SSGame2GReadyRoomRsp::rsp() const {
  // @@protoc_insertion_point(field_get:pb.SSGame2GReadyRoomRsp.rsp)
  return _internal_rsp();
}
inline void SSGame2GReadyRoomRsp::unsafe_arena_set_allocated_rsp(
    ::pb::ReadyInRoomScRsp* rsp) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(rsp_);
  }
  rsp_ = rsp;
  if (rsp) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:pb.SSGame2GReadyRoomRsp.rsp)
}
inline ::pb::ReadyInRoomScRsp* SSGame2GReadyRoomRsp::release_rsp() {
  
  ::pb::ReadyInRoomScRsp* temp = rsp_;
  rsp_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::pb::ReadyInRoomScRsp* SSGame2GReadyRoomRsp::unsafe_arena_release_rsp() {
  // @@protoc_insertion_point(field_release:pb.SSGame2GReadyRoomRsp.rsp)
  
  ::pb::ReadyInRoomScRsp* temp = rsp_;
  rsp_ = nullptr;
  return temp;
}
inline ::pb::ReadyInRoomScRsp* SSGame2GReadyRoomRsp::_internal_mutable_rsp() {
  
  if (rsp_ == nullptr) {
    auto* p = CreateMaybeMessage<::pb::ReadyInRoomScRsp>(GetArena());
    rsp_ = p;
  }
  return rsp_;
}
inline ::pb::ReadyInRoomScRsp* SSGame2GReadyRoomRsp::mutable_rsp() {
  // @@protoc_insertion_point(field_mutable:pb.SSGame2GReadyRoomRsp.rsp)
  return _internal_mutable_rsp();
}
inline void SSGame2GReadyRoomRsp::set_allocated_rsp(::pb::ReadyInRoomScRsp* rsp) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(rsp_);
  }
  if (rsp) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(rsp)->GetArena();
    if (message_arena != submessage_arena) {
      rsp = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, rsp, submessage_arena);
    }
    
  } else {
    
  }
  rsp_ = rsp;
  // @@protoc_insertion_point(field_set_allocated:pb.SSGame2GReadyRoomRsp.rsp)
}

// -------------------------------------------------------------------

// SSGate2GChooseLevelReq

// uint32 request_id = 1;
inline void SSGate2GChooseLevelReq::clear_request_id() {
  request_id_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 SSGate2GChooseLevelReq::_internal_request_id() const {
  return request_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 SSGate2GChooseLevelReq::request_id() const {
  // @@protoc_insertion_point(field_get:pb.SSGate2GChooseLevelReq.request_id)
  return _internal_request_id();
}
inline void SSGate2GChooseLevelReq::_internal_set_request_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  request_id_ = value;
}
inline void SSGate2GChooseLevelReq::set_request_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_request_id(value);
  // @@protoc_insertion_point(field_set:pb.SSGate2GChooseLevelReq.request_id)
}

// .pb.ChooseLevelCsReq req = 2;
inline bool SSGate2GChooseLevelReq::_internal_has_req() const {
  return this != internal_default_instance() && req_ != nullptr;
}
inline bool SSGate2GChooseLevelReq::has_req() const {
  return _internal_has_req();
}
inline const ::pb::ChooseLevelCsReq& SSGate2GChooseLevelReq::_internal_req() const {
  const ::pb::ChooseLevelCsReq* p = req_;
  return p != nullptr ? *p : reinterpret_cast<const ::pb::ChooseLevelCsReq&>(
      ::pb::_ChooseLevelCsReq_default_instance_);
}
inline const ::pb::ChooseLevelCsReq& SSGate2GChooseLevelReq::req() const {
  // @@protoc_insertion_point(field_get:pb.SSGate2GChooseLevelReq.req)
  return _internal_req();
}
inline void SSGate2GChooseLevelReq::unsafe_arena_set_allocated_req(
    ::pb::ChooseLevelCsReq* req) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(req_);
  }
  req_ = req;
  if (req) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:pb.SSGate2GChooseLevelReq.req)
}
inline ::pb::ChooseLevelCsReq* SSGate2GChooseLevelReq::release_req() {
  
  ::pb::ChooseLevelCsReq* temp = req_;
  req_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::pb::ChooseLevelCsReq* SSGate2GChooseLevelReq::unsafe_arena_release_req() {
  // @@protoc_insertion_point(field_release:pb.SSGate2GChooseLevelReq.req)
  
  ::pb::ChooseLevelCsReq* temp = req_;
  req_ = nullptr;
  return temp;
}
inline ::pb::ChooseLevelCsReq* SSGate2GChooseLevelReq::_internal_mutable_req() {
  
  if (req_ == nullptr) {
    auto* p = CreateMaybeMessage<::pb::ChooseLevelCsReq>(GetArena());
    req_ = p;
  }
  return req_;
}
inline ::pb::ChooseLevelCsReq* SSGate2GChooseLevelReq::mutable_req() {
  // @@protoc_insertion_point(field_mutable:pb.SSGate2GChooseLevelReq.req)
  return _internal_mutable_req();
}
inline void SSGate2GChooseLevelReq::set_allocated_req(::pb::ChooseLevelCsReq* req) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(req_);
  }
  if (req) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(req)->GetArena();
    if (message_arena != submessage_arena) {
      req = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, req, submessage_arena);
    }
    
  } else {
    
  }
  req_ = req;
  // @@protoc_insertion_point(field_set_allocated:pb.SSGate2GChooseLevelReq.req)
}

// -------------------------------------------------------------------

// SSGame2GChooseLevelRsp

// uint32 request_id = 1;
inline void SSGame2GChooseLevelRsp::clear_request_id() {
  request_id_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 SSGame2GChooseLevelRsp::_internal_request_id() const {
  return request_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 SSGame2GChooseLevelRsp::request_id() const {
  // @@protoc_insertion_point(field_get:pb.SSGame2GChooseLevelRsp.request_id)
  return _internal_request_id();
}
inline void SSGame2GChooseLevelRsp::_internal_set_request_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  request_id_ = value;
}
inline void SSGame2GChooseLevelRsp::set_request_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_request_id(value);
  // @@protoc_insertion_point(field_set:pb.SSGame2GChooseLevelRsp.request_id)
}

// .pb.ChooseLevelScRsp rsp = 2;
inline bool SSGame2GChooseLevelRsp::_internal_has_rsp() const {
  return this != internal_default_instance() && rsp_ != nullptr;
}
inline bool SSGame2GChooseLevelRsp::has_rsp() const {
  return _internal_has_rsp();
}
inline const ::pb::ChooseLevelScRsp& SSGame2GChooseLevelRsp::_internal_rsp() const {
  const ::pb::ChooseLevelScRsp* p = rsp_;
  return p != nullptr ? *p : reinterpret_cast<const ::pb::ChooseLevelScRsp&>(
      ::pb::_ChooseLevelScRsp_default_instance_);
}
inline const ::pb::ChooseLevelScRsp& SSGame2GChooseLevelRsp::rsp() const {
  // @@protoc_insertion_point(field_get:pb.SSGame2GChooseLevelRsp.rsp)
  return _internal_rsp();
}
inline void SSGame2GChooseLevelRsp::unsafe_arena_set_allocated_rsp(
    ::pb::ChooseLevelScRsp* rsp) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(rsp_);
  }
  rsp_ = rsp;
  if (rsp) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:pb.SSGame2GChooseLevelRsp.rsp)
}
inline ::pb::ChooseLevelScRsp* SSGame2GChooseLevelRsp::release_rsp() {
  
  ::pb::ChooseLevelScRsp* temp = rsp_;
  rsp_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::pb::ChooseLevelScRsp* SSGame2GChooseLevelRsp::unsafe_arena_release_rsp() {
  // @@protoc_insertion_point(field_release:pb.SSGame2GChooseLevelRsp.rsp)
  
  ::pb::ChooseLevelScRsp* temp = rsp_;
  rsp_ = nullptr;
  return temp;
}
inline ::pb::ChooseLevelScRsp* SSGame2GChooseLevelRsp::_internal_mutable_rsp() {
  
  if (rsp_ == nullptr) {
    auto* p = CreateMaybeMessage<::pb::ChooseLevelScRsp>(GetArena());
    rsp_ = p;
  }
  return rsp_;
}
inline ::pb::ChooseLevelScRsp* SSGame2GChooseLevelRsp::mutable_rsp() {
  // @@protoc_insertion_point(field_mutable:pb.SSGame2GChooseLevelRsp.rsp)
  return _internal_mutable_rsp();
}
inline void SSGame2GChooseLevelRsp::set_allocated_rsp(::pb::ChooseLevelScRsp* rsp) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(rsp_);
  }
  if (rsp) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(rsp)->GetArena();
    if (message_arena != submessage_arena) {
      rsp = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, rsp, submessage_arena);
    }
    
  } else {
    
  }
  rsp_ = rsp;
  // @@protoc_insertion_point(field_set_allocated:pb.SSGame2GChooseLevelRsp.rsp)
}

// -------------------------------------------------------------------

// SSGate2GUserDisConnectNotify

// uint32 accountid = 1;
inline void SSGate2GUserDisConnectNotify::clear_accountid() {
  accountid_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 SSGate2GUserDisConnectNotify::_internal_accountid() const {
  return accountid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 SSGate2GUserDisConnectNotify::accountid() const {
  // @@protoc_insertion_point(field_get:pb.SSGate2GUserDisConnectNotify.accountid)
  return _internal_accountid();
}
inline void SSGate2GUserDisConnectNotify::_internal_set_accountid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  accountid_ = value;
}
inline void SSGate2GUserDisConnectNotify::set_accountid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_accountid(value);
  // @@protoc_insertion_point(field_set:pb.SSGate2GUserDisConnectNotify.accountid)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace pb

PROTOBUF_NAMESPACE_OPEN

template <> struct is_proto_enum< ::pb::SSForceUserDisConnectReq_RetCode> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::pb::SSForceUserDisConnectReq_RetCode>() {
  return ::pb::SSForceUserDisConnectReq_RetCode_descriptor();
}
template <> struct is_proto_enum< ::pb::SSForceUserDisConnectRsp_RetCode> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::pb::SSForceUserDisConnectRsp_RetCode>() {
  return ::pb::SSForceUserDisConnectRsp_RetCode_descriptor();
}
template <> struct is_proto_enum< ::pb::SS_GATE_MSG_CMD> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::pb::SS_GATE_MSG_CMD>() {
  return ::pb::SS_GATE_MSG_CMD_descriptor();
}

PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_gate_5fgame_5fmsg_2eproto
