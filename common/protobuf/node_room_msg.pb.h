// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: node_room_msg.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_node_5froom_5fmsg_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_node_5froom_5fmsg_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3014000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3014000 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "CsCmd.pb.h"
#include "game_node_msg.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_node_5froom_5fmsg_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_node_5froom_5fmsg_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxiliaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[13]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_node_5froom_5fmsg_2eproto;
namespace pb {
class SSN2RChooseLevelReq;
class SSN2RChooseLevelReqDefaultTypeInternal;
extern SSN2RChooseLevelReqDefaultTypeInternal _SSN2RChooseLevelReq_default_instance_;
class SSN2RCreateRoomReq;
class SSN2RCreateRoomReqDefaultTypeInternal;
extern SSN2RCreateRoomReqDefaultTypeInternal _SSN2RCreateRoomReq_default_instance_;
class SSN2REnterRoomReq;
class SSN2REnterRoomReqDefaultTypeInternal;
extern SSN2REnterRoomReqDefaultTypeInternal _SSN2REnterRoomReq_default_instance_;
class SSN2RLeaveRoomReq;
class SSN2RLeaveRoomReqDefaultTypeInternal;
extern SSN2RLeaveRoomReqDefaultTypeInternal _SSN2RLeaveRoomReq_default_instance_;
class SSN2RPullMsgReq;
class SSN2RPullMsgReqDefaultTypeInternal;
extern SSN2RPullMsgReqDefaultTypeInternal _SSN2RPullMsgReq_default_instance_;
class SSN2RReadyInRoomReq;
class SSN2RReadyInRoomReqDefaultTypeInternal;
extern SSN2RReadyInRoomReqDefaultTypeInternal _SSN2RReadyInRoomReq_default_instance_;
class SSR2NChooseLevelRsp;
class SSR2NChooseLevelRspDefaultTypeInternal;
extern SSR2NChooseLevelRspDefaultTypeInternal _SSR2NChooseLevelRsp_default_instance_;
class SSR2NCreateRoomRsp;
class SSR2NCreateRoomRspDefaultTypeInternal;
extern SSR2NCreateRoomRspDefaultTypeInternal _SSR2NCreateRoomRsp_default_instance_;
class SSR2NEnterRoomRsp;
class SSR2NEnterRoomRspDefaultTypeInternal;
extern SSR2NEnterRoomRspDefaultTypeInternal _SSR2NEnterRoomRsp_default_instance_;
class SSR2NLeaveRoomRsp;
class SSR2NLeaveRoomRspDefaultTypeInternal;
extern SSR2NLeaveRoomRspDefaultTypeInternal _SSR2NLeaveRoomRsp_default_instance_;
class SSR2NPullRoomMsgRSP;
class SSR2NPullRoomMsgRSPDefaultTypeInternal;
extern SSR2NPullRoomMsgRSPDefaultTypeInternal _SSR2NPullRoomMsgRSP_default_instance_;
class SSR2NPullRoomMsgRsp;
class SSR2NPullRoomMsgRspDefaultTypeInternal;
extern SSR2NPullRoomMsgRspDefaultTypeInternal _SSR2NPullRoomMsgRsp_default_instance_;
class SSR2NReadyInRoomRsp;
class SSR2NReadyInRoomRspDefaultTypeInternal;
extern SSR2NReadyInRoomRspDefaultTypeInternal _SSR2NReadyInRoomRsp_default_instance_;
}  // namespace pb
PROTOBUF_NAMESPACE_OPEN
template<> ::pb::SSN2RChooseLevelReq* Arena::CreateMaybeMessage<::pb::SSN2RChooseLevelReq>(Arena*);
template<> ::pb::SSN2RCreateRoomReq* Arena::CreateMaybeMessage<::pb::SSN2RCreateRoomReq>(Arena*);
template<> ::pb::SSN2REnterRoomReq* Arena::CreateMaybeMessage<::pb::SSN2REnterRoomReq>(Arena*);
template<> ::pb::SSN2RLeaveRoomReq* Arena::CreateMaybeMessage<::pb::SSN2RLeaveRoomReq>(Arena*);
template<> ::pb::SSN2RPullMsgReq* Arena::CreateMaybeMessage<::pb::SSN2RPullMsgReq>(Arena*);
template<> ::pb::SSN2RReadyInRoomReq* Arena::CreateMaybeMessage<::pb::SSN2RReadyInRoomReq>(Arena*);
template<> ::pb::SSR2NChooseLevelRsp* Arena::CreateMaybeMessage<::pb::SSR2NChooseLevelRsp>(Arena*);
template<> ::pb::SSR2NCreateRoomRsp* Arena::CreateMaybeMessage<::pb::SSR2NCreateRoomRsp>(Arena*);
template<> ::pb::SSR2NEnterRoomRsp* Arena::CreateMaybeMessage<::pb::SSR2NEnterRoomRsp>(Arena*);
template<> ::pb::SSR2NLeaveRoomRsp* Arena::CreateMaybeMessage<::pb::SSR2NLeaveRoomRsp>(Arena*);
template<> ::pb::SSR2NPullRoomMsgRSP* Arena::CreateMaybeMessage<::pb::SSR2NPullRoomMsgRSP>(Arena*);
template<> ::pb::SSR2NPullRoomMsgRsp* Arena::CreateMaybeMessage<::pb::SSR2NPullRoomMsgRsp>(Arena*);
template<> ::pb::SSR2NReadyInRoomRsp* Arena::CreateMaybeMessage<::pb::SSR2NReadyInRoomRsp>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace pb {

enum SS_NODE_ROOM_MSG_CMD : int {
  SS_NODE_MSG_DEFAULT = 0,
  SS_NODE_ROOM_PULLROOMINFO_REQ = 600,
  SS_ROOM_NODE_PULLROOMINFO_RSP = 601,
  SS_NODE_ROOM_CREATEROOM_REQ = 602,
  SS_ROOM_NODE_CREATEROOM_RSP = 603,
  SS_NODE_ROOM_ENTERROOM_REQ = 604,
  SS_ROOM_NODE_ENTERROOM_RSP = 605,
  SS_NODE_ROOM_LEAVEROOM_REQ = 606,
  SS_ROOM_NODE_LEAVEROOM_RSP = 607,
  SS_NODE_ROOM_CHOOSELEVEL_REQ = 608,
  SS_ROOM_NODE_CHOOSELEVEL_RSP = 609,
  SS_NODE_ROOM_READYROOM_REQ = 610,
  SS_ROOM_NODE_READYROOM_RSP = 611,
  SS_NODE_ROOM_PULLBATTLEINFO_REQ = 612,
  SS_ROOM_NODE_PULLBATTLEINFO_RSP = 613,
  SS_NODE_ROOM_MSG_CMD_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::min(),
  SS_NODE_ROOM_MSG_CMD_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::max()
};
bool SS_NODE_ROOM_MSG_CMD_IsValid(int value);
constexpr SS_NODE_ROOM_MSG_CMD SS_NODE_ROOM_MSG_CMD_MIN = SS_NODE_MSG_DEFAULT;
constexpr SS_NODE_ROOM_MSG_CMD SS_NODE_ROOM_MSG_CMD_MAX = SS_ROOM_NODE_PULLBATTLEINFO_RSP;
constexpr int SS_NODE_ROOM_MSG_CMD_ARRAYSIZE = SS_NODE_ROOM_MSG_CMD_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* SS_NODE_ROOM_MSG_CMD_descriptor();
template<typename T>
inline const std::string& SS_NODE_ROOM_MSG_CMD_Name(T enum_t_value) {
  static_assert(::std::is_same<T, SS_NODE_ROOM_MSG_CMD>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function SS_NODE_ROOM_MSG_CMD_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    SS_NODE_ROOM_MSG_CMD_descriptor(), enum_t_value);
}
inline bool SS_NODE_ROOM_MSG_CMD_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, SS_NODE_ROOM_MSG_CMD* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<SS_NODE_ROOM_MSG_CMD>(
    SS_NODE_ROOM_MSG_CMD_descriptor(), name, value);
}
// ===================================================================

class SSN2RPullMsgReq PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:pb.SSN2RPullMsgReq) */ {
 public:
  inline SSN2RPullMsgReq() : SSN2RPullMsgReq(nullptr) {}
  virtual ~SSN2RPullMsgReq();

  SSN2RPullMsgReq(const SSN2RPullMsgReq& from);
  SSN2RPullMsgReq(SSN2RPullMsgReq&& from) noexcept
    : SSN2RPullMsgReq() {
    *this = ::std::move(from);
  }

  inline SSN2RPullMsgReq& operator=(const SSN2RPullMsgReq& from) {
    CopyFrom(from);
    return *this;
  }
  inline SSN2RPullMsgReq& operator=(SSN2RPullMsgReq&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const SSN2RPullMsgReq& default_instance();

  static inline const SSN2RPullMsgReq* internal_default_instance() {
    return reinterpret_cast<const SSN2RPullMsgReq*>(
               &_SSN2RPullMsgReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(SSN2RPullMsgReq& a, SSN2RPullMsgReq& b) {
    a.Swap(&b);
  }
  inline void Swap(SSN2RPullMsgReq* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SSN2RPullMsgReq* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline SSN2RPullMsgReq* New() const final {
    return CreateMaybeMessage<SSN2RPullMsgReq>(nullptr);
  }

  SSN2RPullMsgReq* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<SSN2RPullMsgReq>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const SSN2RPullMsgReq& from);
  void MergeFrom(const SSN2RPullMsgReq& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SSN2RPullMsgReq* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "pb.SSN2RPullMsgReq";
  }
  protected:
  explicit SSN2RPullMsgReq(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_node_5froom_5fmsg_2eproto);
    return ::descriptor_table_node_5froom_5fmsg_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kReqFieldNumber = 2,
    kRequestIdFieldNumber = 1,
  };
  // .pb.SSG2NPullMsgInfoReq req = 2;
  bool has_req() const;
  private:
  bool _internal_has_req() const;
  public:
  void clear_req();
  const ::pb::SSG2NPullMsgInfoReq& req() const;
  ::pb::SSG2NPullMsgInfoReq* release_req();
  ::pb::SSG2NPullMsgInfoReq* mutable_req();
  void set_allocated_req(::pb::SSG2NPullMsgInfoReq* req);
  private:
  const ::pb::SSG2NPullMsgInfoReq& _internal_req() const;
  ::pb::SSG2NPullMsgInfoReq* _internal_mutable_req();
  public:
  void unsafe_arena_set_allocated_req(
      ::pb::SSG2NPullMsgInfoReq* req);
  ::pb::SSG2NPullMsgInfoReq* unsafe_arena_release_req();

  // uint32 request_id = 1;
  void clear_request_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 request_id() const;
  void set_request_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_request_id() const;
  void _internal_set_request_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:pb.SSN2RPullMsgReq)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::pb::SSG2NPullMsgInfoReq* req_;
  ::PROTOBUF_NAMESPACE_ID::uint32 request_id_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_node_5froom_5fmsg_2eproto;
};
// -------------------------------------------------------------------

class SSR2NPullRoomMsgRsp PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:pb.SSR2NPullRoomMsgRsp) */ {
 public:
  inline SSR2NPullRoomMsgRsp() : SSR2NPullRoomMsgRsp(nullptr) {}
  virtual ~SSR2NPullRoomMsgRsp();

  SSR2NPullRoomMsgRsp(const SSR2NPullRoomMsgRsp& from);
  SSR2NPullRoomMsgRsp(SSR2NPullRoomMsgRsp&& from) noexcept
    : SSR2NPullRoomMsgRsp() {
    *this = ::std::move(from);
  }

  inline SSR2NPullRoomMsgRsp& operator=(const SSR2NPullRoomMsgRsp& from) {
    CopyFrom(from);
    return *this;
  }
  inline SSR2NPullRoomMsgRsp& operator=(SSR2NPullRoomMsgRsp&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const SSR2NPullRoomMsgRsp& default_instance();

  static inline const SSR2NPullRoomMsgRsp* internal_default_instance() {
    return reinterpret_cast<const SSR2NPullRoomMsgRsp*>(
               &_SSR2NPullRoomMsgRsp_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(SSR2NPullRoomMsgRsp& a, SSR2NPullRoomMsgRsp& b) {
    a.Swap(&b);
  }
  inline void Swap(SSR2NPullRoomMsgRsp* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SSR2NPullRoomMsgRsp* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline SSR2NPullRoomMsgRsp* New() const final {
    return CreateMaybeMessage<SSR2NPullRoomMsgRsp>(nullptr);
  }

  SSR2NPullRoomMsgRsp* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<SSR2NPullRoomMsgRsp>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const SSR2NPullRoomMsgRsp& from);
  void MergeFrom(const SSR2NPullRoomMsgRsp& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SSR2NPullRoomMsgRsp* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "pb.SSR2NPullRoomMsgRsp";
  }
  protected:
  explicit SSR2NPullRoomMsgRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_node_5froom_5fmsg_2eproto);
    return ::descriptor_table_node_5froom_5fmsg_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kRspFieldNumber = 2,
    kRequestIdFieldNumber = 1,
  };
  // .pb.SSN2GPullMsgInfoRsp rsp = 2;
  bool has_rsp() const;
  private:
  bool _internal_has_rsp() const;
  public:
  void clear_rsp();
  const ::pb::SSN2GPullMsgInfoRsp& rsp() const;
  ::pb::SSN2GPullMsgInfoRsp* release_rsp();
  ::pb::SSN2GPullMsgInfoRsp* mutable_rsp();
  void set_allocated_rsp(::pb::SSN2GPullMsgInfoRsp* rsp);
  private:
  const ::pb::SSN2GPullMsgInfoRsp& _internal_rsp() const;
  ::pb::SSN2GPullMsgInfoRsp* _internal_mutable_rsp();
  public:
  void unsafe_arena_set_allocated_rsp(
      ::pb::SSN2GPullMsgInfoRsp* rsp);
  ::pb::SSN2GPullMsgInfoRsp* unsafe_arena_release_rsp();

  // uint32 request_id = 1;
  void clear_request_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 request_id() const;
  void set_request_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_request_id() const;
  void _internal_set_request_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:pb.SSR2NPullRoomMsgRsp)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::pb::SSN2GPullMsgInfoRsp* rsp_;
  ::PROTOBUF_NAMESPACE_ID::uint32 request_id_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_node_5froom_5fmsg_2eproto;
};
// -------------------------------------------------------------------

class SSR2NPullRoomMsgRSP PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:pb.SSR2NPullRoomMsgRSP) */ {
 public:
  inline SSR2NPullRoomMsgRSP() : SSR2NPullRoomMsgRSP(nullptr) {}
  virtual ~SSR2NPullRoomMsgRSP();

  SSR2NPullRoomMsgRSP(const SSR2NPullRoomMsgRSP& from);
  SSR2NPullRoomMsgRSP(SSR2NPullRoomMsgRSP&& from) noexcept
    : SSR2NPullRoomMsgRSP() {
    *this = ::std::move(from);
  }

  inline SSR2NPullRoomMsgRSP& operator=(const SSR2NPullRoomMsgRSP& from) {
    CopyFrom(from);
    return *this;
  }
  inline SSR2NPullRoomMsgRSP& operator=(SSR2NPullRoomMsgRSP&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const SSR2NPullRoomMsgRSP& default_instance();

  static inline const SSR2NPullRoomMsgRSP* internal_default_instance() {
    return reinterpret_cast<const SSR2NPullRoomMsgRSP*>(
               &_SSR2NPullRoomMsgRSP_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(SSR2NPullRoomMsgRSP& a, SSR2NPullRoomMsgRSP& b) {
    a.Swap(&b);
  }
  inline void Swap(SSR2NPullRoomMsgRSP* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SSR2NPullRoomMsgRSP* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline SSR2NPullRoomMsgRSP* New() const final {
    return CreateMaybeMessage<SSR2NPullRoomMsgRSP>(nullptr);
  }

  SSR2NPullRoomMsgRSP* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<SSR2NPullRoomMsgRSP>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const SSR2NPullRoomMsgRSP& from);
  void MergeFrom(const SSR2NPullRoomMsgRSP& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SSR2NPullRoomMsgRSP* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "pb.SSR2NPullRoomMsgRSP";
  }
  protected:
  explicit SSR2NPullRoomMsgRSP(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_node_5froom_5fmsg_2eproto);
    return ::descriptor_table_node_5froom_5fmsg_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kRspFieldNumber = 2,
    kRequestIdFieldNumber = 1,
  };
  // .pb.SSN2GPullBattleMsgInfoRsp rsp = 2;
  bool has_rsp() const;
  private:
  bool _internal_has_rsp() const;
  public:
  void clear_rsp();
  const ::pb::SSN2GPullBattleMsgInfoRsp& rsp() const;
  ::pb::SSN2GPullBattleMsgInfoRsp* release_rsp();
  ::pb::SSN2GPullBattleMsgInfoRsp* mutable_rsp();
  void set_allocated_rsp(::pb::SSN2GPullBattleMsgInfoRsp* rsp);
  private:
  const ::pb::SSN2GPullBattleMsgInfoRsp& _internal_rsp() const;
  ::pb::SSN2GPullBattleMsgInfoRsp* _internal_mutable_rsp();
  public:
  void unsafe_arena_set_allocated_rsp(
      ::pb::SSN2GPullBattleMsgInfoRsp* rsp);
  ::pb::SSN2GPullBattleMsgInfoRsp* unsafe_arena_release_rsp();

  // uint32 request_id = 1;
  void clear_request_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 request_id() const;
  void set_request_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_request_id() const;
  void _internal_set_request_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:pb.SSR2NPullRoomMsgRSP)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::pb::SSN2GPullBattleMsgInfoRsp* rsp_;
  ::PROTOBUF_NAMESPACE_ID::uint32 request_id_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_node_5froom_5fmsg_2eproto;
};
// -------------------------------------------------------------------

class SSN2RCreateRoomReq PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:pb.SSN2RCreateRoomReq) */ {
 public:
  inline SSN2RCreateRoomReq() : SSN2RCreateRoomReq(nullptr) {}
  virtual ~SSN2RCreateRoomReq();

  SSN2RCreateRoomReq(const SSN2RCreateRoomReq& from);
  SSN2RCreateRoomReq(SSN2RCreateRoomReq&& from) noexcept
    : SSN2RCreateRoomReq() {
    *this = ::std::move(from);
  }

  inline SSN2RCreateRoomReq& operator=(const SSN2RCreateRoomReq& from) {
    CopyFrom(from);
    return *this;
  }
  inline SSN2RCreateRoomReq& operator=(SSN2RCreateRoomReq&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const SSN2RCreateRoomReq& default_instance();

  static inline const SSN2RCreateRoomReq* internal_default_instance() {
    return reinterpret_cast<const SSN2RCreateRoomReq*>(
               &_SSN2RCreateRoomReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(SSN2RCreateRoomReq& a, SSN2RCreateRoomReq& b) {
    a.Swap(&b);
  }
  inline void Swap(SSN2RCreateRoomReq* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SSN2RCreateRoomReq* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline SSN2RCreateRoomReq* New() const final {
    return CreateMaybeMessage<SSN2RCreateRoomReq>(nullptr);
  }

  SSN2RCreateRoomReq* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<SSN2RCreateRoomReq>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const SSN2RCreateRoomReq& from);
  void MergeFrom(const SSN2RCreateRoomReq& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SSN2RCreateRoomReq* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "pb.SSN2RCreateRoomReq";
  }
  protected:
  explicit SSN2RCreateRoomReq(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_node_5froom_5fmsg_2eproto);
    return ::descriptor_table_node_5froom_5fmsg_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kReqFieldNumber = 2,
    kRequestIdFieldNumber = 1,
  };
  // .pb.SSG2NCreateRoomReq req = 2;
  bool has_req() const;
  private:
  bool _internal_has_req() const;
  public:
  void clear_req();
  const ::pb::SSG2NCreateRoomReq& req() const;
  ::pb::SSG2NCreateRoomReq* release_req();
  ::pb::SSG2NCreateRoomReq* mutable_req();
  void set_allocated_req(::pb::SSG2NCreateRoomReq* req);
  private:
  const ::pb::SSG2NCreateRoomReq& _internal_req() const;
  ::pb::SSG2NCreateRoomReq* _internal_mutable_req();
  public:
  void unsafe_arena_set_allocated_req(
      ::pb::SSG2NCreateRoomReq* req);
  ::pb::SSG2NCreateRoomReq* unsafe_arena_release_req();

  // uint64 request_id = 1;
  void clear_request_id();
  ::PROTOBUF_NAMESPACE_ID::uint64 request_id() const;
  void set_request_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_request_id() const;
  void _internal_set_request_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:pb.SSN2RCreateRoomReq)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::pb::SSG2NCreateRoomReq* req_;
  ::PROTOBUF_NAMESPACE_ID::uint64 request_id_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_node_5froom_5fmsg_2eproto;
};
// -------------------------------------------------------------------

class SSR2NCreateRoomRsp PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:pb.SSR2NCreateRoomRsp) */ {
 public:
  inline SSR2NCreateRoomRsp() : SSR2NCreateRoomRsp(nullptr) {}
  virtual ~SSR2NCreateRoomRsp();

  SSR2NCreateRoomRsp(const SSR2NCreateRoomRsp& from);
  SSR2NCreateRoomRsp(SSR2NCreateRoomRsp&& from) noexcept
    : SSR2NCreateRoomRsp() {
    *this = ::std::move(from);
  }

  inline SSR2NCreateRoomRsp& operator=(const SSR2NCreateRoomRsp& from) {
    CopyFrom(from);
    return *this;
  }
  inline SSR2NCreateRoomRsp& operator=(SSR2NCreateRoomRsp&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const SSR2NCreateRoomRsp& default_instance();

  static inline const SSR2NCreateRoomRsp* internal_default_instance() {
    return reinterpret_cast<const SSR2NCreateRoomRsp*>(
               &_SSR2NCreateRoomRsp_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(SSR2NCreateRoomRsp& a, SSR2NCreateRoomRsp& b) {
    a.Swap(&b);
  }
  inline void Swap(SSR2NCreateRoomRsp* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SSR2NCreateRoomRsp* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline SSR2NCreateRoomRsp* New() const final {
    return CreateMaybeMessage<SSR2NCreateRoomRsp>(nullptr);
  }

  SSR2NCreateRoomRsp* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<SSR2NCreateRoomRsp>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const SSR2NCreateRoomRsp& from);
  void MergeFrom(const SSR2NCreateRoomRsp& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SSR2NCreateRoomRsp* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "pb.SSR2NCreateRoomRsp";
  }
  protected:
  explicit SSR2NCreateRoomRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_node_5froom_5fmsg_2eproto);
    return ::descriptor_table_node_5froom_5fmsg_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kRspFieldNumber = 2,
    kRequestIdFieldNumber = 1,
  };
  // .pb.SSN2GCreateRoomRsp rsp = 2;
  bool has_rsp() const;
  private:
  bool _internal_has_rsp() const;
  public:
  void clear_rsp();
  const ::pb::SSN2GCreateRoomRsp& rsp() const;
  ::pb::SSN2GCreateRoomRsp* release_rsp();
  ::pb::SSN2GCreateRoomRsp* mutable_rsp();
  void set_allocated_rsp(::pb::SSN2GCreateRoomRsp* rsp);
  private:
  const ::pb::SSN2GCreateRoomRsp& _internal_rsp() const;
  ::pb::SSN2GCreateRoomRsp* _internal_mutable_rsp();
  public:
  void unsafe_arena_set_allocated_rsp(
      ::pb::SSN2GCreateRoomRsp* rsp);
  ::pb::SSN2GCreateRoomRsp* unsafe_arena_release_rsp();

  // uint64 request_id = 1;
  void clear_request_id();
  ::PROTOBUF_NAMESPACE_ID::uint64 request_id() const;
  void set_request_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_request_id() const;
  void _internal_set_request_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:pb.SSR2NCreateRoomRsp)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::pb::SSN2GCreateRoomRsp* rsp_;
  ::PROTOBUF_NAMESPACE_ID::uint64 request_id_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_node_5froom_5fmsg_2eproto;
};
// -------------------------------------------------------------------

class SSN2REnterRoomReq PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:pb.SSN2REnterRoomReq) */ {
 public:
  inline SSN2REnterRoomReq() : SSN2REnterRoomReq(nullptr) {}
  virtual ~SSN2REnterRoomReq();

  SSN2REnterRoomReq(const SSN2REnterRoomReq& from);
  SSN2REnterRoomReq(SSN2REnterRoomReq&& from) noexcept
    : SSN2REnterRoomReq() {
    *this = ::std::move(from);
  }

  inline SSN2REnterRoomReq& operator=(const SSN2REnterRoomReq& from) {
    CopyFrom(from);
    return *this;
  }
  inline SSN2REnterRoomReq& operator=(SSN2REnterRoomReq&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const SSN2REnterRoomReq& default_instance();

  static inline const SSN2REnterRoomReq* internal_default_instance() {
    return reinterpret_cast<const SSN2REnterRoomReq*>(
               &_SSN2REnterRoomReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(SSN2REnterRoomReq& a, SSN2REnterRoomReq& b) {
    a.Swap(&b);
  }
  inline void Swap(SSN2REnterRoomReq* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SSN2REnterRoomReq* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline SSN2REnterRoomReq* New() const final {
    return CreateMaybeMessage<SSN2REnterRoomReq>(nullptr);
  }

  SSN2REnterRoomReq* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<SSN2REnterRoomReq>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const SSN2REnterRoomReq& from);
  void MergeFrom(const SSN2REnterRoomReq& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SSN2REnterRoomReq* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "pb.SSN2REnterRoomReq";
  }
  protected:
  explicit SSN2REnterRoomReq(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_node_5froom_5fmsg_2eproto);
    return ::descriptor_table_node_5froom_5fmsg_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kReqFieldNumber = 2,
    kRequestIdFieldNumber = 1,
  };
  // .pb.SSG2NEnterRoomReq req = 2;
  bool has_req() const;
  private:
  bool _internal_has_req() const;
  public:
  void clear_req();
  const ::pb::SSG2NEnterRoomReq& req() const;
  ::pb::SSG2NEnterRoomReq* release_req();
  ::pb::SSG2NEnterRoomReq* mutable_req();
  void set_allocated_req(::pb::SSG2NEnterRoomReq* req);
  private:
  const ::pb::SSG2NEnterRoomReq& _internal_req() const;
  ::pb::SSG2NEnterRoomReq* _internal_mutable_req();
  public:
  void unsafe_arena_set_allocated_req(
      ::pb::SSG2NEnterRoomReq* req);
  ::pb::SSG2NEnterRoomReq* unsafe_arena_release_req();

  // uint64 request_id = 1;
  void clear_request_id();
  ::PROTOBUF_NAMESPACE_ID::uint64 request_id() const;
  void set_request_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_request_id() const;
  void _internal_set_request_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:pb.SSN2REnterRoomReq)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::pb::SSG2NEnterRoomReq* req_;
  ::PROTOBUF_NAMESPACE_ID::uint64 request_id_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_node_5froom_5fmsg_2eproto;
};
// -------------------------------------------------------------------

class SSR2NEnterRoomRsp PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:pb.SSR2NEnterRoomRsp) */ {
 public:
  inline SSR2NEnterRoomRsp() : SSR2NEnterRoomRsp(nullptr) {}
  virtual ~SSR2NEnterRoomRsp();

  SSR2NEnterRoomRsp(const SSR2NEnterRoomRsp& from);
  SSR2NEnterRoomRsp(SSR2NEnterRoomRsp&& from) noexcept
    : SSR2NEnterRoomRsp() {
    *this = ::std::move(from);
  }

  inline SSR2NEnterRoomRsp& operator=(const SSR2NEnterRoomRsp& from) {
    CopyFrom(from);
    return *this;
  }
  inline SSR2NEnterRoomRsp& operator=(SSR2NEnterRoomRsp&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const SSR2NEnterRoomRsp& default_instance();

  static inline const SSR2NEnterRoomRsp* internal_default_instance() {
    return reinterpret_cast<const SSR2NEnterRoomRsp*>(
               &_SSR2NEnterRoomRsp_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  friend void swap(SSR2NEnterRoomRsp& a, SSR2NEnterRoomRsp& b) {
    a.Swap(&b);
  }
  inline void Swap(SSR2NEnterRoomRsp* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SSR2NEnterRoomRsp* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline SSR2NEnterRoomRsp* New() const final {
    return CreateMaybeMessage<SSR2NEnterRoomRsp>(nullptr);
  }

  SSR2NEnterRoomRsp* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<SSR2NEnterRoomRsp>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const SSR2NEnterRoomRsp& from);
  void MergeFrom(const SSR2NEnterRoomRsp& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SSR2NEnterRoomRsp* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "pb.SSR2NEnterRoomRsp";
  }
  protected:
  explicit SSR2NEnterRoomRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_node_5froom_5fmsg_2eproto);
    return ::descriptor_table_node_5froom_5fmsg_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kRspFieldNumber = 2,
    kRequestIdFieldNumber = 1,
  };
  // .pb.SSN2GEnterRoomRsp rsp = 2;
  bool has_rsp() const;
  private:
  bool _internal_has_rsp() const;
  public:
  void clear_rsp();
  const ::pb::SSN2GEnterRoomRsp& rsp() const;
  ::pb::SSN2GEnterRoomRsp* release_rsp();
  ::pb::SSN2GEnterRoomRsp* mutable_rsp();
  void set_allocated_rsp(::pb::SSN2GEnterRoomRsp* rsp);
  private:
  const ::pb::SSN2GEnterRoomRsp& _internal_rsp() const;
  ::pb::SSN2GEnterRoomRsp* _internal_mutable_rsp();
  public:
  void unsafe_arena_set_allocated_rsp(
      ::pb::SSN2GEnterRoomRsp* rsp);
  ::pb::SSN2GEnterRoomRsp* unsafe_arena_release_rsp();

  // uint64 request_id = 1;
  void clear_request_id();
  ::PROTOBUF_NAMESPACE_ID::uint64 request_id() const;
  void set_request_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_request_id() const;
  void _internal_set_request_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:pb.SSR2NEnterRoomRsp)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::pb::SSN2GEnterRoomRsp* rsp_;
  ::PROTOBUF_NAMESPACE_ID::uint64 request_id_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_node_5froom_5fmsg_2eproto;
};
// -------------------------------------------------------------------

class SSN2RLeaveRoomReq PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:pb.SSN2RLeaveRoomReq) */ {
 public:
  inline SSN2RLeaveRoomReq() : SSN2RLeaveRoomReq(nullptr) {}
  virtual ~SSN2RLeaveRoomReq();

  SSN2RLeaveRoomReq(const SSN2RLeaveRoomReq& from);
  SSN2RLeaveRoomReq(SSN2RLeaveRoomReq&& from) noexcept
    : SSN2RLeaveRoomReq() {
    *this = ::std::move(from);
  }

  inline SSN2RLeaveRoomReq& operator=(const SSN2RLeaveRoomReq& from) {
    CopyFrom(from);
    return *this;
  }
  inline SSN2RLeaveRoomReq& operator=(SSN2RLeaveRoomReq&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const SSN2RLeaveRoomReq& default_instance();

  static inline const SSN2RLeaveRoomReq* internal_default_instance() {
    return reinterpret_cast<const SSN2RLeaveRoomReq*>(
               &_SSN2RLeaveRoomReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  friend void swap(SSN2RLeaveRoomReq& a, SSN2RLeaveRoomReq& b) {
    a.Swap(&b);
  }
  inline void Swap(SSN2RLeaveRoomReq* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SSN2RLeaveRoomReq* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline SSN2RLeaveRoomReq* New() const final {
    return CreateMaybeMessage<SSN2RLeaveRoomReq>(nullptr);
  }

  SSN2RLeaveRoomReq* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<SSN2RLeaveRoomReq>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const SSN2RLeaveRoomReq& from);
  void MergeFrom(const SSN2RLeaveRoomReq& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SSN2RLeaveRoomReq* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "pb.SSN2RLeaveRoomReq";
  }
  protected:
  explicit SSN2RLeaveRoomReq(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_node_5froom_5fmsg_2eproto);
    return ::descriptor_table_node_5froom_5fmsg_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kReqFieldNumber = 2,
    kRequestIdFieldNumber = 1,
  };
  // .pb.SSG2NLeaveRoomReq req = 2;
  bool has_req() const;
  private:
  bool _internal_has_req() const;
  public:
  void clear_req();
  const ::pb::SSG2NLeaveRoomReq& req() const;
  ::pb::SSG2NLeaveRoomReq* release_req();
  ::pb::SSG2NLeaveRoomReq* mutable_req();
  void set_allocated_req(::pb::SSG2NLeaveRoomReq* req);
  private:
  const ::pb::SSG2NLeaveRoomReq& _internal_req() const;
  ::pb::SSG2NLeaveRoomReq* _internal_mutable_req();
  public:
  void unsafe_arena_set_allocated_req(
      ::pb::SSG2NLeaveRoomReq* req);
  ::pb::SSG2NLeaveRoomReq* unsafe_arena_release_req();

  // uint64 request_id = 1;
  void clear_request_id();
  ::PROTOBUF_NAMESPACE_ID::uint64 request_id() const;
  void set_request_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_request_id() const;
  void _internal_set_request_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:pb.SSN2RLeaveRoomReq)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::pb::SSG2NLeaveRoomReq* req_;
  ::PROTOBUF_NAMESPACE_ID::uint64 request_id_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_node_5froom_5fmsg_2eproto;
};
// -------------------------------------------------------------------

class SSR2NLeaveRoomRsp PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:pb.SSR2NLeaveRoomRsp) */ {
 public:
  inline SSR2NLeaveRoomRsp() : SSR2NLeaveRoomRsp(nullptr) {}
  virtual ~SSR2NLeaveRoomRsp();

  SSR2NLeaveRoomRsp(const SSR2NLeaveRoomRsp& from);
  SSR2NLeaveRoomRsp(SSR2NLeaveRoomRsp&& from) noexcept
    : SSR2NLeaveRoomRsp() {
    *this = ::std::move(from);
  }

  inline SSR2NLeaveRoomRsp& operator=(const SSR2NLeaveRoomRsp& from) {
    CopyFrom(from);
    return *this;
  }
  inline SSR2NLeaveRoomRsp& operator=(SSR2NLeaveRoomRsp&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const SSR2NLeaveRoomRsp& default_instance();

  static inline const SSR2NLeaveRoomRsp* internal_default_instance() {
    return reinterpret_cast<const SSR2NLeaveRoomRsp*>(
               &_SSR2NLeaveRoomRsp_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  friend void swap(SSR2NLeaveRoomRsp& a, SSR2NLeaveRoomRsp& b) {
    a.Swap(&b);
  }
  inline void Swap(SSR2NLeaveRoomRsp* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SSR2NLeaveRoomRsp* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline SSR2NLeaveRoomRsp* New() const final {
    return CreateMaybeMessage<SSR2NLeaveRoomRsp>(nullptr);
  }

  SSR2NLeaveRoomRsp* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<SSR2NLeaveRoomRsp>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const SSR2NLeaveRoomRsp& from);
  void MergeFrom(const SSR2NLeaveRoomRsp& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SSR2NLeaveRoomRsp* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "pb.SSR2NLeaveRoomRsp";
  }
  protected:
  explicit SSR2NLeaveRoomRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_node_5froom_5fmsg_2eproto);
    return ::descriptor_table_node_5froom_5fmsg_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kRspFieldNumber = 2,
    kRequestIdFieldNumber = 1,
  };
  // .pb.SSN2GLeaveRoomRsp rsp = 2;
  bool has_rsp() const;
  private:
  bool _internal_has_rsp() const;
  public:
  void clear_rsp();
  const ::pb::SSN2GLeaveRoomRsp& rsp() const;
  ::pb::SSN2GLeaveRoomRsp* release_rsp();
  ::pb::SSN2GLeaveRoomRsp* mutable_rsp();
  void set_allocated_rsp(::pb::SSN2GLeaveRoomRsp* rsp);
  private:
  const ::pb::SSN2GLeaveRoomRsp& _internal_rsp() const;
  ::pb::SSN2GLeaveRoomRsp* _internal_mutable_rsp();
  public:
  void unsafe_arena_set_allocated_rsp(
      ::pb::SSN2GLeaveRoomRsp* rsp);
  ::pb::SSN2GLeaveRoomRsp* unsafe_arena_release_rsp();

  // uint64 request_id = 1;
  void clear_request_id();
  ::PROTOBUF_NAMESPACE_ID::uint64 request_id() const;
  void set_request_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_request_id() const;
  void _internal_set_request_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:pb.SSR2NLeaveRoomRsp)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::pb::SSN2GLeaveRoomRsp* rsp_;
  ::PROTOBUF_NAMESPACE_ID::uint64 request_id_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_node_5froom_5fmsg_2eproto;
};
// -------------------------------------------------------------------

class SSN2RChooseLevelReq PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:pb.SSN2RChooseLevelReq) */ {
 public:
  inline SSN2RChooseLevelReq() : SSN2RChooseLevelReq(nullptr) {}
  virtual ~SSN2RChooseLevelReq();

  SSN2RChooseLevelReq(const SSN2RChooseLevelReq& from);
  SSN2RChooseLevelReq(SSN2RChooseLevelReq&& from) noexcept
    : SSN2RChooseLevelReq() {
    *this = ::std::move(from);
  }

  inline SSN2RChooseLevelReq& operator=(const SSN2RChooseLevelReq& from) {
    CopyFrom(from);
    return *this;
  }
  inline SSN2RChooseLevelReq& operator=(SSN2RChooseLevelReq&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const SSN2RChooseLevelReq& default_instance();

  static inline const SSN2RChooseLevelReq* internal_default_instance() {
    return reinterpret_cast<const SSN2RChooseLevelReq*>(
               &_SSN2RChooseLevelReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  friend void swap(SSN2RChooseLevelReq& a, SSN2RChooseLevelReq& b) {
    a.Swap(&b);
  }
  inline void Swap(SSN2RChooseLevelReq* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SSN2RChooseLevelReq* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline SSN2RChooseLevelReq* New() const final {
    return CreateMaybeMessage<SSN2RChooseLevelReq>(nullptr);
  }

  SSN2RChooseLevelReq* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<SSN2RChooseLevelReq>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const SSN2RChooseLevelReq& from);
  void MergeFrom(const SSN2RChooseLevelReq& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SSN2RChooseLevelReq* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "pb.SSN2RChooseLevelReq";
  }
  protected:
  explicit SSN2RChooseLevelReq(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_node_5froom_5fmsg_2eproto);
    return ::descriptor_table_node_5froom_5fmsg_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kReqFieldNumber = 2,
    kRequestIdFieldNumber = 1,
  };
  // .pb.SSG2NChooseLevelReq req = 2;
  bool has_req() const;
  private:
  bool _internal_has_req() const;
  public:
  void clear_req();
  const ::pb::SSG2NChooseLevelReq& req() const;
  ::pb::SSG2NChooseLevelReq* release_req();
  ::pb::SSG2NChooseLevelReq* mutable_req();
  void set_allocated_req(::pb::SSG2NChooseLevelReq* req);
  private:
  const ::pb::SSG2NChooseLevelReq& _internal_req() const;
  ::pb::SSG2NChooseLevelReq* _internal_mutable_req();
  public:
  void unsafe_arena_set_allocated_req(
      ::pb::SSG2NChooseLevelReq* req);
  ::pb::SSG2NChooseLevelReq* unsafe_arena_release_req();

  // uint64 request_id = 1;
  void clear_request_id();
  ::PROTOBUF_NAMESPACE_ID::uint64 request_id() const;
  void set_request_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_request_id() const;
  void _internal_set_request_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:pb.SSN2RChooseLevelReq)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::pb::SSG2NChooseLevelReq* req_;
  ::PROTOBUF_NAMESPACE_ID::uint64 request_id_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_node_5froom_5fmsg_2eproto;
};
// -------------------------------------------------------------------

class SSR2NChooseLevelRsp PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:pb.SSR2NChooseLevelRsp) */ {
 public:
  inline SSR2NChooseLevelRsp() : SSR2NChooseLevelRsp(nullptr) {}
  virtual ~SSR2NChooseLevelRsp();

  SSR2NChooseLevelRsp(const SSR2NChooseLevelRsp& from);
  SSR2NChooseLevelRsp(SSR2NChooseLevelRsp&& from) noexcept
    : SSR2NChooseLevelRsp() {
    *this = ::std::move(from);
  }

  inline SSR2NChooseLevelRsp& operator=(const SSR2NChooseLevelRsp& from) {
    CopyFrom(from);
    return *this;
  }
  inline SSR2NChooseLevelRsp& operator=(SSR2NChooseLevelRsp&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const SSR2NChooseLevelRsp& default_instance();

  static inline const SSR2NChooseLevelRsp* internal_default_instance() {
    return reinterpret_cast<const SSR2NChooseLevelRsp*>(
               &_SSR2NChooseLevelRsp_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  friend void swap(SSR2NChooseLevelRsp& a, SSR2NChooseLevelRsp& b) {
    a.Swap(&b);
  }
  inline void Swap(SSR2NChooseLevelRsp* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SSR2NChooseLevelRsp* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline SSR2NChooseLevelRsp* New() const final {
    return CreateMaybeMessage<SSR2NChooseLevelRsp>(nullptr);
  }

  SSR2NChooseLevelRsp* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<SSR2NChooseLevelRsp>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const SSR2NChooseLevelRsp& from);
  void MergeFrom(const SSR2NChooseLevelRsp& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SSR2NChooseLevelRsp* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "pb.SSR2NChooseLevelRsp";
  }
  protected:
  explicit SSR2NChooseLevelRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_node_5froom_5fmsg_2eproto);
    return ::descriptor_table_node_5froom_5fmsg_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kRspFieldNumber = 2,
    kRequestIdFieldNumber = 1,
  };
  // .pb.SSN2GChooseLevelRsp rsp = 2;
  bool has_rsp() const;
  private:
  bool _internal_has_rsp() const;
  public:
  void clear_rsp();
  const ::pb::SSN2GChooseLevelRsp& rsp() const;
  ::pb::SSN2GChooseLevelRsp* release_rsp();
  ::pb::SSN2GChooseLevelRsp* mutable_rsp();
  void set_allocated_rsp(::pb::SSN2GChooseLevelRsp* rsp);
  private:
  const ::pb::SSN2GChooseLevelRsp& _internal_rsp() const;
  ::pb::SSN2GChooseLevelRsp* _internal_mutable_rsp();
  public:
  void unsafe_arena_set_allocated_rsp(
      ::pb::SSN2GChooseLevelRsp* rsp);
  ::pb::SSN2GChooseLevelRsp* unsafe_arena_release_rsp();

  // uint64 request_id = 1;
  void clear_request_id();
  ::PROTOBUF_NAMESPACE_ID::uint64 request_id() const;
  void set_request_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_request_id() const;
  void _internal_set_request_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:pb.SSR2NChooseLevelRsp)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::pb::SSN2GChooseLevelRsp* rsp_;
  ::PROTOBUF_NAMESPACE_ID::uint64 request_id_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_node_5froom_5fmsg_2eproto;
};
// -------------------------------------------------------------------

class SSN2RReadyInRoomReq PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:pb.SSN2RReadyInRoomReq) */ {
 public:
  inline SSN2RReadyInRoomReq() : SSN2RReadyInRoomReq(nullptr) {}
  virtual ~SSN2RReadyInRoomReq();

  SSN2RReadyInRoomReq(const SSN2RReadyInRoomReq& from);
  SSN2RReadyInRoomReq(SSN2RReadyInRoomReq&& from) noexcept
    : SSN2RReadyInRoomReq() {
    *this = ::std::move(from);
  }

  inline SSN2RReadyInRoomReq& operator=(const SSN2RReadyInRoomReq& from) {
    CopyFrom(from);
    return *this;
  }
  inline SSN2RReadyInRoomReq& operator=(SSN2RReadyInRoomReq&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const SSN2RReadyInRoomReq& default_instance();

  static inline const SSN2RReadyInRoomReq* internal_default_instance() {
    return reinterpret_cast<const SSN2RReadyInRoomReq*>(
               &_SSN2RReadyInRoomReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    11;

  friend void swap(SSN2RReadyInRoomReq& a, SSN2RReadyInRoomReq& b) {
    a.Swap(&b);
  }
  inline void Swap(SSN2RReadyInRoomReq* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SSN2RReadyInRoomReq* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline SSN2RReadyInRoomReq* New() const final {
    return CreateMaybeMessage<SSN2RReadyInRoomReq>(nullptr);
  }

  SSN2RReadyInRoomReq* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<SSN2RReadyInRoomReq>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const SSN2RReadyInRoomReq& from);
  void MergeFrom(const SSN2RReadyInRoomReq& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SSN2RReadyInRoomReq* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "pb.SSN2RReadyInRoomReq";
  }
  protected:
  explicit SSN2RReadyInRoomReq(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_node_5froom_5fmsg_2eproto);
    return ::descriptor_table_node_5froom_5fmsg_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kReqFieldNumber = 2,
    kRequestIdFieldNumber = 1,
  };
  // .pb.SSG2NReadyInRoomReq req = 2;
  bool has_req() const;
  private:
  bool _internal_has_req() const;
  public:
  void clear_req();
  const ::pb::SSG2NReadyInRoomReq& req() const;
  ::pb::SSG2NReadyInRoomReq* release_req();
  ::pb::SSG2NReadyInRoomReq* mutable_req();
  void set_allocated_req(::pb::SSG2NReadyInRoomReq* req);
  private:
  const ::pb::SSG2NReadyInRoomReq& _internal_req() const;
  ::pb::SSG2NReadyInRoomReq* _internal_mutable_req();
  public:
  void unsafe_arena_set_allocated_req(
      ::pb::SSG2NReadyInRoomReq* req);
  ::pb::SSG2NReadyInRoomReq* unsafe_arena_release_req();

  // uint64 request_id = 1;
  void clear_request_id();
  ::PROTOBUF_NAMESPACE_ID::uint64 request_id() const;
  void set_request_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_request_id() const;
  void _internal_set_request_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:pb.SSN2RReadyInRoomReq)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::pb::SSG2NReadyInRoomReq* req_;
  ::PROTOBUF_NAMESPACE_ID::uint64 request_id_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_node_5froom_5fmsg_2eproto;
};
// -------------------------------------------------------------------

class SSR2NReadyInRoomRsp PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:pb.SSR2NReadyInRoomRsp) */ {
 public:
  inline SSR2NReadyInRoomRsp() : SSR2NReadyInRoomRsp(nullptr) {}
  virtual ~SSR2NReadyInRoomRsp();

  SSR2NReadyInRoomRsp(const SSR2NReadyInRoomRsp& from);
  SSR2NReadyInRoomRsp(SSR2NReadyInRoomRsp&& from) noexcept
    : SSR2NReadyInRoomRsp() {
    *this = ::std::move(from);
  }

  inline SSR2NReadyInRoomRsp& operator=(const SSR2NReadyInRoomRsp& from) {
    CopyFrom(from);
    return *this;
  }
  inline SSR2NReadyInRoomRsp& operator=(SSR2NReadyInRoomRsp&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const SSR2NReadyInRoomRsp& default_instance();

  static inline const SSR2NReadyInRoomRsp* internal_default_instance() {
    return reinterpret_cast<const SSR2NReadyInRoomRsp*>(
               &_SSR2NReadyInRoomRsp_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    12;

  friend void swap(SSR2NReadyInRoomRsp& a, SSR2NReadyInRoomRsp& b) {
    a.Swap(&b);
  }
  inline void Swap(SSR2NReadyInRoomRsp* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SSR2NReadyInRoomRsp* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline SSR2NReadyInRoomRsp* New() const final {
    return CreateMaybeMessage<SSR2NReadyInRoomRsp>(nullptr);
  }

  SSR2NReadyInRoomRsp* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<SSR2NReadyInRoomRsp>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const SSR2NReadyInRoomRsp& from);
  void MergeFrom(const SSR2NReadyInRoomRsp& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SSR2NReadyInRoomRsp* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "pb.SSR2NReadyInRoomRsp";
  }
  protected:
  explicit SSR2NReadyInRoomRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_node_5froom_5fmsg_2eproto);
    return ::descriptor_table_node_5froom_5fmsg_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kRspFieldNumber = 2,
    kRequestIdFieldNumber = 1,
  };
  // .pb.SSN2GReadyInRoomRsp rsp = 2;
  bool has_rsp() const;
  private:
  bool _internal_has_rsp() const;
  public:
  void clear_rsp();
  const ::pb::SSN2GReadyInRoomRsp& rsp() const;
  ::pb::SSN2GReadyInRoomRsp* release_rsp();
  ::pb::SSN2GReadyInRoomRsp* mutable_rsp();
  void set_allocated_rsp(::pb::SSN2GReadyInRoomRsp* rsp);
  private:
  const ::pb::SSN2GReadyInRoomRsp& _internal_rsp() const;
  ::pb::SSN2GReadyInRoomRsp* _internal_mutable_rsp();
  public:
  void unsafe_arena_set_allocated_rsp(
      ::pb::SSN2GReadyInRoomRsp* rsp);
  ::pb::SSN2GReadyInRoomRsp* unsafe_arena_release_rsp();

  // uint64 request_id = 1;
  void clear_request_id();
  ::PROTOBUF_NAMESPACE_ID::uint64 request_id() const;
  void set_request_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_request_id() const;
  void _internal_set_request_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:pb.SSR2NReadyInRoomRsp)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::pb::SSN2GReadyInRoomRsp* rsp_;
  ::PROTOBUF_NAMESPACE_ID::uint64 request_id_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_node_5froom_5fmsg_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// SSN2RPullMsgReq

// uint32 request_id = 1;
inline void SSN2RPullMsgReq::clear_request_id() {
  request_id_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 SSN2RPullMsgReq::_internal_request_id() const {
  return request_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 SSN2RPullMsgReq::request_id() const {
  // @@protoc_insertion_point(field_get:pb.SSN2RPullMsgReq.request_id)
  return _internal_request_id();
}
inline void SSN2RPullMsgReq::_internal_set_request_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  request_id_ = value;
}
inline void SSN2RPullMsgReq::set_request_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_request_id(value);
  // @@protoc_insertion_point(field_set:pb.SSN2RPullMsgReq.request_id)
}

// .pb.SSG2NPullMsgInfoReq req = 2;
inline bool SSN2RPullMsgReq::_internal_has_req() const {
  return this != internal_default_instance() && req_ != nullptr;
}
inline bool SSN2RPullMsgReq::has_req() const {
  return _internal_has_req();
}
inline const ::pb::SSG2NPullMsgInfoReq& SSN2RPullMsgReq::_internal_req() const {
  const ::pb::SSG2NPullMsgInfoReq* p = req_;
  return p != nullptr ? *p : reinterpret_cast<const ::pb::SSG2NPullMsgInfoReq&>(
      ::pb::_SSG2NPullMsgInfoReq_default_instance_);
}
inline const ::pb::SSG2NPullMsgInfoReq& SSN2RPullMsgReq::req() const {
  // @@protoc_insertion_point(field_get:pb.SSN2RPullMsgReq.req)
  return _internal_req();
}
inline void SSN2RPullMsgReq::unsafe_arena_set_allocated_req(
    ::pb::SSG2NPullMsgInfoReq* req) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(req_);
  }
  req_ = req;
  if (req) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:pb.SSN2RPullMsgReq.req)
}
inline ::pb::SSG2NPullMsgInfoReq* SSN2RPullMsgReq::release_req() {
  
  ::pb::SSG2NPullMsgInfoReq* temp = req_;
  req_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::pb::SSG2NPullMsgInfoReq* SSN2RPullMsgReq::unsafe_arena_release_req() {
  // @@protoc_insertion_point(field_release:pb.SSN2RPullMsgReq.req)
  
  ::pb::SSG2NPullMsgInfoReq* temp = req_;
  req_ = nullptr;
  return temp;
}
inline ::pb::SSG2NPullMsgInfoReq* SSN2RPullMsgReq::_internal_mutable_req() {
  
  if (req_ == nullptr) {
    auto* p = CreateMaybeMessage<::pb::SSG2NPullMsgInfoReq>(GetArena());
    req_ = p;
  }
  return req_;
}
inline ::pb::SSG2NPullMsgInfoReq* SSN2RPullMsgReq::mutable_req() {
  // @@protoc_insertion_point(field_mutable:pb.SSN2RPullMsgReq.req)
  return _internal_mutable_req();
}
inline void SSN2RPullMsgReq::set_allocated_req(::pb::SSG2NPullMsgInfoReq* req) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(req_);
  }
  if (req) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(req)->GetArena();
    if (message_arena != submessage_arena) {
      req = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, req, submessage_arena);
    }
    
  } else {
    
  }
  req_ = req;
  // @@protoc_insertion_point(field_set_allocated:pb.SSN2RPullMsgReq.req)
}

// -------------------------------------------------------------------

// SSR2NPullRoomMsgRsp

// uint32 request_id = 1;
inline void SSR2NPullRoomMsgRsp::clear_request_id() {
  request_id_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 SSR2NPullRoomMsgRsp::_internal_request_id() const {
  return request_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 SSR2NPullRoomMsgRsp::request_id() const {
  // @@protoc_insertion_point(field_get:pb.SSR2NPullRoomMsgRsp.request_id)
  return _internal_request_id();
}
inline void SSR2NPullRoomMsgRsp::_internal_set_request_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  request_id_ = value;
}
inline void SSR2NPullRoomMsgRsp::set_request_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_request_id(value);
  // @@protoc_insertion_point(field_set:pb.SSR2NPullRoomMsgRsp.request_id)
}

// .pb.SSN2GPullMsgInfoRsp rsp = 2;
inline bool SSR2NPullRoomMsgRsp::_internal_has_rsp() const {
  return this != internal_default_instance() && rsp_ != nullptr;
}
inline bool SSR2NPullRoomMsgRsp::has_rsp() const {
  return _internal_has_rsp();
}
inline const ::pb::SSN2GPullMsgInfoRsp& SSR2NPullRoomMsgRsp::_internal_rsp() const {
  const ::pb::SSN2GPullMsgInfoRsp* p = rsp_;
  return p != nullptr ? *p : reinterpret_cast<const ::pb::SSN2GPullMsgInfoRsp&>(
      ::pb::_SSN2GPullMsgInfoRsp_default_instance_);
}
inline const ::pb::SSN2GPullMsgInfoRsp& SSR2NPullRoomMsgRsp::rsp() const {
  // @@protoc_insertion_point(field_get:pb.SSR2NPullRoomMsgRsp.rsp)
  return _internal_rsp();
}
inline void SSR2NPullRoomMsgRsp::unsafe_arena_set_allocated_rsp(
    ::pb::SSN2GPullMsgInfoRsp* rsp) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(rsp_);
  }
  rsp_ = rsp;
  if (rsp) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:pb.SSR2NPullRoomMsgRsp.rsp)
}
inline ::pb::SSN2GPullMsgInfoRsp* SSR2NPullRoomMsgRsp::release_rsp() {
  
  ::pb::SSN2GPullMsgInfoRsp* temp = rsp_;
  rsp_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::pb::SSN2GPullMsgInfoRsp* SSR2NPullRoomMsgRsp::unsafe_arena_release_rsp() {
  // @@protoc_insertion_point(field_release:pb.SSR2NPullRoomMsgRsp.rsp)
  
  ::pb::SSN2GPullMsgInfoRsp* temp = rsp_;
  rsp_ = nullptr;
  return temp;
}
inline ::pb::SSN2GPullMsgInfoRsp* SSR2NPullRoomMsgRsp::_internal_mutable_rsp() {
  
  if (rsp_ == nullptr) {
    auto* p = CreateMaybeMessage<::pb::SSN2GPullMsgInfoRsp>(GetArena());
    rsp_ = p;
  }
  return rsp_;
}
inline ::pb::SSN2GPullMsgInfoRsp* SSR2NPullRoomMsgRsp::mutable_rsp() {
  // @@protoc_insertion_point(field_mutable:pb.SSR2NPullRoomMsgRsp.rsp)
  return _internal_mutable_rsp();
}
inline void SSR2NPullRoomMsgRsp::set_allocated_rsp(::pb::SSN2GPullMsgInfoRsp* rsp) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(rsp_);
  }
  if (rsp) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(rsp)->GetArena();
    if (message_arena != submessage_arena) {
      rsp = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, rsp, submessage_arena);
    }
    
  } else {
    
  }
  rsp_ = rsp;
  // @@protoc_insertion_point(field_set_allocated:pb.SSR2NPullRoomMsgRsp.rsp)
}

// -------------------------------------------------------------------

// SSR2NPullRoomMsgRSP

// uint32 request_id = 1;
inline void SSR2NPullRoomMsgRSP::clear_request_id() {
  request_id_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 SSR2NPullRoomMsgRSP::_internal_request_id() const {
  return request_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 SSR2NPullRoomMsgRSP::request_id() const {
  // @@protoc_insertion_point(field_get:pb.SSR2NPullRoomMsgRSP.request_id)
  return _internal_request_id();
}
inline void SSR2NPullRoomMsgRSP::_internal_set_request_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  request_id_ = value;
}
inline void SSR2NPullRoomMsgRSP::set_request_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_request_id(value);
  // @@protoc_insertion_point(field_set:pb.SSR2NPullRoomMsgRSP.request_id)
}

// .pb.SSN2GPullBattleMsgInfoRsp rsp = 2;
inline bool SSR2NPullRoomMsgRSP::_internal_has_rsp() const {
  return this != internal_default_instance() && rsp_ != nullptr;
}
inline bool SSR2NPullRoomMsgRSP::has_rsp() const {
  return _internal_has_rsp();
}
inline const ::pb::SSN2GPullBattleMsgInfoRsp& SSR2NPullRoomMsgRSP::_internal_rsp() const {
  const ::pb::SSN2GPullBattleMsgInfoRsp* p = rsp_;
  return p != nullptr ? *p : reinterpret_cast<const ::pb::SSN2GPullBattleMsgInfoRsp&>(
      ::pb::_SSN2GPullBattleMsgInfoRsp_default_instance_);
}
inline const ::pb::SSN2GPullBattleMsgInfoRsp& SSR2NPullRoomMsgRSP::rsp() const {
  // @@protoc_insertion_point(field_get:pb.SSR2NPullRoomMsgRSP.rsp)
  return _internal_rsp();
}
inline void SSR2NPullRoomMsgRSP::unsafe_arena_set_allocated_rsp(
    ::pb::SSN2GPullBattleMsgInfoRsp* rsp) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(rsp_);
  }
  rsp_ = rsp;
  if (rsp) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:pb.SSR2NPullRoomMsgRSP.rsp)
}
inline ::pb::SSN2GPullBattleMsgInfoRsp* SSR2NPullRoomMsgRSP::release_rsp() {
  
  ::pb::SSN2GPullBattleMsgInfoRsp* temp = rsp_;
  rsp_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::pb::SSN2GPullBattleMsgInfoRsp* SSR2NPullRoomMsgRSP::unsafe_arena_release_rsp() {
  // @@protoc_insertion_point(field_release:pb.SSR2NPullRoomMsgRSP.rsp)
  
  ::pb::SSN2GPullBattleMsgInfoRsp* temp = rsp_;
  rsp_ = nullptr;
  return temp;
}
inline ::pb::SSN2GPullBattleMsgInfoRsp* SSR2NPullRoomMsgRSP::_internal_mutable_rsp() {
  
  if (rsp_ == nullptr) {
    auto* p = CreateMaybeMessage<::pb::SSN2GPullBattleMsgInfoRsp>(GetArena());
    rsp_ = p;
  }
  return rsp_;
}
inline ::pb::SSN2GPullBattleMsgInfoRsp* SSR2NPullRoomMsgRSP::mutable_rsp() {
  // @@protoc_insertion_point(field_mutable:pb.SSR2NPullRoomMsgRSP.rsp)
  return _internal_mutable_rsp();
}
inline void SSR2NPullRoomMsgRSP::set_allocated_rsp(::pb::SSN2GPullBattleMsgInfoRsp* rsp) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(rsp_);
  }
  if (rsp) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(rsp)->GetArena();
    if (message_arena != submessage_arena) {
      rsp = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, rsp, submessage_arena);
    }
    
  } else {
    
  }
  rsp_ = rsp;
  // @@protoc_insertion_point(field_set_allocated:pb.SSR2NPullRoomMsgRSP.rsp)
}

// -------------------------------------------------------------------

// SSN2RCreateRoomReq

// uint64 request_id = 1;
inline void SSN2RCreateRoomReq::clear_request_id() {
  request_id_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 SSN2RCreateRoomReq::_internal_request_id() const {
  return request_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 SSN2RCreateRoomReq::request_id() const {
  // @@protoc_insertion_point(field_get:pb.SSN2RCreateRoomReq.request_id)
  return _internal_request_id();
}
inline void SSN2RCreateRoomReq::_internal_set_request_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  request_id_ = value;
}
inline void SSN2RCreateRoomReq::set_request_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_request_id(value);
  // @@protoc_insertion_point(field_set:pb.SSN2RCreateRoomReq.request_id)
}

// .pb.SSG2NCreateRoomReq req = 2;
inline bool SSN2RCreateRoomReq::_internal_has_req() const {
  return this != internal_default_instance() && req_ != nullptr;
}
inline bool SSN2RCreateRoomReq::has_req() const {
  return _internal_has_req();
}
inline const ::pb::SSG2NCreateRoomReq& SSN2RCreateRoomReq::_internal_req() const {
  const ::pb::SSG2NCreateRoomReq* p = req_;
  return p != nullptr ? *p : reinterpret_cast<const ::pb::SSG2NCreateRoomReq&>(
      ::pb::_SSG2NCreateRoomReq_default_instance_);
}
inline const ::pb::SSG2NCreateRoomReq& SSN2RCreateRoomReq::req() const {
  // @@protoc_insertion_point(field_get:pb.SSN2RCreateRoomReq.req)
  return _internal_req();
}
inline void SSN2RCreateRoomReq::unsafe_arena_set_allocated_req(
    ::pb::SSG2NCreateRoomReq* req) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(req_);
  }
  req_ = req;
  if (req) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:pb.SSN2RCreateRoomReq.req)
}
inline ::pb::SSG2NCreateRoomReq* SSN2RCreateRoomReq::release_req() {
  
  ::pb::SSG2NCreateRoomReq* temp = req_;
  req_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::pb::SSG2NCreateRoomReq* SSN2RCreateRoomReq::unsafe_arena_release_req() {
  // @@protoc_insertion_point(field_release:pb.SSN2RCreateRoomReq.req)
  
  ::pb::SSG2NCreateRoomReq* temp = req_;
  req_ = nullptr;
  return temp;
}
inline ::pb::SSG2NCreateRoomReq* SSN2RCreateRoomReq::_internal_mutable_req() {
  
  if (req_ == nullptr) {
    auto* p = CreateMaybeMessage<::pb::SSG2NCreateRoomReq>(GetArena());
    req_ = p;
  }
  return req_;
}
inline ::pb::SSG2NCreateRoomReq* SSN2RCreateRoomReq::mutable_req() {
  // @@protoc_insertion_point(field_mutable:pb.SSN2RCreateRoomReq.req)
  return _internal_mutable_req();
}
inline void SSN2RCreateRoomReq::set_allocated_req(::pb::SSG2NCreateRoomReq* req) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(req_);
  }
  if (req) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(req)->GetArena();
    if (message_arena != submessage_arena) {
      req = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, req, submessage_arena);
    }
    
  } else {
    
  }
  req_ = req;
  // @@protoc_insertion_point(field_set_allocated:pb.SSN2RCreateRoomReq.req)
}

// -------------------------------------------------------------------

// SSR2NCreateRoomRsp

// uint64 request_id = 1;
inline void SSR2NCreateRoomRsp::clear_request_id() {
  request_id_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 SSR2NCreateRoomRsp::_internal_request_id() const {
  return request_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 SSR2NCreateRoomRsp::request_id() const {
  // @@protoc_insertion_point(field_get:pb.SSR2NCreateRoomRsp.request_id)
  return _internal_request_id();
}
inline void SSR2NCreateRoomRsp::_internal_set_request_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  request_id_ = value;
}
inline void SSR2NCreateRoomRsp::set_request_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_request_id(value);
  // @@protoc_insertion_point(field_set:pb.SSR2NCreateRoomRsp.request_id)
}

// .pb.SSN2GCreateRoomRsp rsp = 2;
inline bool SSR2NCreateRoomRsp::_internal_has_rsp() const {
  return this != internal_default_instance() && rsp_ != nullptr;
}
inline bool SSR2NCreateRoomRsp::has_rsp() const {
  return _internal_has_rsp();
}
inline const ::pb::SSN2GCreateRoomRsp& SSR2NCreateRoomRsp::_internal_rsp() const {
  const ::pb::SSN2GCreateRoomRsp* p = rsp_;
  return p != nullptr ? *p : reinterpret_cast<const ::pb::SSN2GCreateRoomRsp&>(
      ::pb::_SSN2GCreateRoomRsp_default_instance_);
}
inline const ::pb::SSN2GCreateRoomRsp& SSR2NCreateRoomRsp::rsp() const {
  // @@protoc_insertion_point(field_get:pb.SSR2NCreateRoomRsp.rsp)
  return _internal_rsp();
}
inline void SSR2NCreateRoomRsp::unsafe_arena_set_allocated_rsp(
    ::pb::SSN2GCreateRoomRsp* rsp) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(rsp_);
  }
  rsp_ = rsp;
  if (rsp) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:pb.SSR2NCreateRoomRsp.rsp)
}
inline ::pb::SSN2GCreateRoomRsp* SSR2NCreateRoomRsp::release_rsp() {
  
  ::pb::SSN2GCreateRoomRsp* temp = rsp_;
  rsp_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::pb::SSN2GCreateRoomRsp* SSR2NCreateRoomRsp::unsafe_arena_release_rsp() {
  // @@protoc_insertion_point(field_release:pb.SSR2NCreateRoomRsp.rsp)
  
  ::pb::SSN2GCreateRoomRsp* temp = rsp_;
  rsp_ = nullptr;
  return temp;
}
inline ::pb::SSN2GCreateRoomRsp* SSR2NCreateRoomRsp::_internal_mutable_rsp() {
  
  if (rsp_ == nullptr) {
    auto* p = CreateMaybeMessage<::pb::SSN2GCreateRoomRsp>(GetArena());
    rsp_ = p;
  }
  return rsp_;
}
inline ::pb::SSN2GCreateRoomRsp* SSR2NCreateRoomRsp::mutable_rsp() {
  // @@protoc_insertion_point(field_mutable:pb.SSR2NCreateRoomRsp.rsp)
  return _internal_mutable_rsp();
}
inline void SSR2NCreateRoomRsp::set_allocated_rsp(::pb::SSN2GCreateRoomRsp* rsp) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(rsp_);
  }
  if (rsp) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(rsp)->GetArena();
    if (message_arena != submessage_arena) {
      rsp = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, rsp, submessage_arena);
    }
    
  } else {
    
  }
  rsp_ = rsp;
  // @@protoc_insertion_point(field_set_allocated:pb.SSR2NCreateRoomRsp.rsp)
}

// -------------------------------------------------------------------

// SSN2REnterRoomReq

// uint64 request_id = 1;
inline void SSN2REnterRoomReq::clear_request_id() {
  request_id_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 SSN2REnterRoomReq::_internal_request_id() const {
  return request_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 SSN2REnterRoomReq::request_id() const {
  // @@protoc_insertion_point(field_get:pb.SSN2REnterRoomReq.request_id)
  return _internal_request_id();
}
inline void SSN2REnterRoomReq::_internal_set_request_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  request_id_ = value;
}
inline void SSN2REnterRoomReq::set_request_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_request_id(value);
  // @@protoc_insertion_point(field_set:pb.SSN2REnterRoomReq.request_id)
}

// .pb.SSG2NEnterRoomReq req = 2;
inline bool SSN2REnterRoomReq::_internal_has_req() const {
  return this != internal_default_instance() && req_ != nullptr;
}
inline bool SSN2REnterRoomReq::has_req() const {
  return _internal_has_req();
}
inline const ::pb::SSG2NEnterRoomReq& SSN2REnterRoomReq::_internal_req() const {
  const ::pb::SSG2NEnterRoomReq* p = req_;
  return p != nullptr ? *p : reinterpret_cast<const ::pb::SSG2NEnterRoomReq&>(
      ::pb::_SSG2NEnterRoomReq_default_instance_);
}
inline const ::pb::SSG2NEnterRoomReq& SSN2REnterRoomReq::req() const {
  // @@protoc_insertion_point(field_get:pb.SSN2REnterRoomReq.req)
  return _internal_req();
}
inline void SSN2REnterRoomReq::unsafe_arena_set_allocated_req(
    ::pb::SSG2NEnterRoomReq* req) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(req_);
  }
  req_ = req;
  if (req) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:pb.SSN2REnterRoomReq.req)
}
inline ::pb::SSG2NEnterRoomReq* SSN2REnterRoomReq::release_req() {
  
  ::pb::SSG2NEnterRoomReq* temp = req_;
  req_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::pb::SSG2NEnterRoomReq* SSN2REnterRoomReq::unsafe_arena_release_req() {
  // @@protoc_insertion_point(field_release:pb.SSN2REnterRoomReq.req)
  
  ::pb::SSG2NEnterRoomReq* temp = req_;
  req_ = nullptr;
  return temp;
}
inline ::pb::SSG2NEnterRoomReq* SSN2REnterRoomReq::_internal_mutable_req() {
  
  if (req_ == nullptr) {
    auto* p = CreateMaybeMessage<::pb::SSG2NEnterRoomReq>(GetArena());
    req_ = p;
  }
  return req_;
}
inline ::pb::SSG2NEnterRoomReq* SSN2REnterRoomReq::mutable_req() {
  // @@protoc_insertion_point(field_mutable:pb.SSN2REnterRoomReq.req)
  return _internal_mutable_req();
}
inline void SSN2REnterRoomReq::set_allocated_req(::pb::SSG2NEnterRoomReq* req) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(req_);
  }
  if (req) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(req)->GetArena();
    if (message_arena != submessage_arena) {
      req = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, req, submessage_arena);
    }
    
  } else {
    
  }
  req_ = req;
  // @@protoc_insertion_point(field_set_allocated:pb.SSN2REnterRoomReq.req)
}

// -------------------------------------------------------------------

// SSR2NEnterRoomRsp

// uint64 request_id = 1;
inline void SSR2NEnterRoomRsp::clear_request_id() {
  request_id_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 SSR2NEnterRoomRsp::_internal_request_id() const {
  return request_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 SSR2NEnterRoomRsp::request_id() const {
  // @@protoc_insertion_point(field_get:pb.SSR2NEnterRoomRsp.request_id)
  return _internal_request_id();
}
inline void SSR2NEnterRoomRsp::_internal_set_request_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  request_id_ = value;
}
inline void SSR2NEnterRoomRsp::set_request_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_request_id(value);
  // @@protoc_insertion_point(field_set:pb.SSR2NEnterRoomRsp.request_id)
}

// .pb.SSN2GEnterRoomRsp rsp = 2;
inline bool SSR2NEnterRoomRsp::_internal_has_rsp() const {
  return this != internal_default_instance() && rsp_ != nullptr;
}
inline bool SSR2NEnterRoomRsp::has_rsp() const {
  return _internal_has_rsp();
}
inline const ::pb::SSN2GEnterRoomRsp& SSR2NEnterRoomRsp::_internal_rsp() const {
  const ::pb::SSN2GEnterRoomRsp* p = rsp_;
  return p != nullptr ? *p : reinterpret_cast<const ::pb::SSN2GEnterRoomRsp&>(
      ::pb::_SSN2GEnterRoomRsp_default_instance_);
}
inline const ::pb::SSN2GEnterRoomRsp& SSR2NEnterRoomRsp::rsp() const {
  // @@protoc_insertion_point(field_get:pb.SSR2NEnterRoomRsp.rsp)
  return _internal_rsp();
}
inline void SSR2NEnterRoomRsp::unsafe_arena_set_allocated_rsp(
    ::pb::SSN2GEnterRoomRsp* rsp) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(rsp_);
  }
  rsp_ = rsp;
  if (rsp) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:pb.SSR2NEnterRoomRsp.rsp)
}
inline ::pb::SSN2GEnterRoomRsp* SSR2NEnterRoomRsp::release_rsp() {
  
  ::pb::SSN2GEnterRoomRsp* temp = rsp_;
  rsp_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::pb::SSN2GEnterRoomRsp* SSR2NEnterRoomRsp::unsafe_arena_release_rsp() {
  // @@protoc_insertion_point(field_release:pb.SSR2NEnterRoomRsp.rsp)
  
  ::pb::SSN2GEnterRoomRsp* temp = rsp_;
  rsp_ = nullptr;
  return temp;
}
inline ::pb::SSN2GEnterRoomRsp* SSR2NEnterRoomRsp::_internal_mutable_rsp() {
  
  if (rsp_ == nullptr) {
    auto* p = CreateMaybeMessage<::pb::SSN2GEnterRoomRsp>(GetArena());
    rsp_ = p;
  }
  return rsp_;
}
inline ::pb::SSN2GEnterRoomRsp* SSR2NEnterRoomRsp::mutable_rsp() {
  // @@protoc_insertion_point(field_mutable:pb.SSR2NEnterRoomRsp.rsp)
  return _internal_mutable_rsp();
}
inline void SSR2NEnterRoomRsp::set_allocated_rsp(::pb::SSN2GEnterRoomRsp* rsp) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(rsp_);
  }
  if (rsp) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(rsp)->GetArena();
    if (message_arena != submessage_arena) {
      rsp = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, rsp, submessage_arena);
    }
    
  } else {
    
  }
  rsp_ = rsp;
  // @@protoc_insertion_point(field_set_allocated:pb.SSR2NEnterRoomRsp.rsp)
}

// -------------------------------------------------------------------

// SSN2RLeaveRoomReq

// uint64 request_id = 1;
inline void SSN2RLeaveRoomReq::clear_request_id() {
  request_id_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 SSN2RLeaveRoomReq::_internal_request_id() const {
  return request_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 SSN2RLeaveRoomReq::request_id() const {
  // @@protoc_insertion_point(field_get:pb.SSN2RLeaveRoomReq.request_id)
  return _internal_request_id();
}
inline void SSN2RLeaveRoomReq::_internal_set_request_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  request_id_ = value;
}
inline void SSN2RLeaveRoomReq::set_request_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_request_id(value);
  // @@protoc_insertion_point(field_set:pb.SSN2RLeaveRoomReq.request_id)
}

// .pb.SSG2NLeaveRoomReq req = 2;
inline bool SSN2RLeaveRoomReq::_internal_has_req() const {
  return this != internal_default_instance() && req_ != nullptr;
}
inline bool SSN2RLeaveRoomReq::has_req() const {
  return _internal_has_req();
}
inline const ::pb::SSG2NLeaveRoomReq& SSN2RLeaveRoomReq::_internal_req() const {
  const ::pb::SSG2NLeaveRoomReq* p = req_;
  return p != nullptr ? *p : reinterpret_cast<const ::pb::SSG2NLeaveRoomReq&>(
      ::pb::_SSG2NLeaveRoomReq_default_instance_);
}
inline const ::pb::SSG2NLeaveRoomReq& SSN2RLeaveRoomReq::req() const {
  // @@protoc_insertion_point(field_get:pb.SSN2RLeaveRoomReq.req)
  return _internal_req();
}
inline void SSN2RLeaveRoomReq::unsafe_arena_set_allocated_req(
    ::pb::SSG2NLeaveRoomReq* req) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(req_);
  }
  req_ = req;
  if (req) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:pb.SSN2RLeaveRoomReq.req)
}
inline ::pb::SSG2NLeaveRoomReq* SSN2RLeaveRoomReq::release_req() {
  
  ::pb::SSG2NLeaveRoomReq* temp = req_;
  req_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::pb::SSG2NLeaveRoomReq* SSN2RLeaveRoomReq::unsafe_arena_release_req() {
  // @@protoc_insertion_point(field_release:pb.SSN2RLeaveRoomReq.req)
  
  ::pb::SSG2NLeaveRoomReq* temp = req_;
  req_ = nullptr;
  return temp;
}
inline ::pb::SSG2NLeaveRoomReq* SSN2RLeaveRoomReq::_internal_mutable_req() {
  
  if (req_ == nullptr) {
    auto* p = CreateMaybeMessage<::pb::SSG2NLeaveRoomReq>(GetArena());
    req_ = p;
  }
  return req_;
}
inline ::pb::SSG2NLeaveRoomReq* SSN2RLeaveRoomReq::mutable_req() {
  // @@protoc_insertion_point(field_mutable:pb.SSN2RLeaveRoomReq.req)
  return _internal_mutable_req();
}
inline void SSN2RLeaveRoomReq::set_allocated_req(::pb::SSG2NLeaveRoomReq* req) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(req_);
  }
  if (req) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(req)->GetArena();
    if (message_arena != submessage_arena) {
      req = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, req, submessage_arena);
    }
    
  } else {
    
  }
  req_ = req;
  // @@protoc_insertion_point(field_set_allocated:pb.SSN2RLeaveRoomReq.req)
}

// -------------------------------------------------------------------

// SSR2NLeaveRoomRsp

// uint64 request_id = 1;
inline void SSR2NLeaveRoomRsp::clear_request_id() {
  request_id_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 SSR2NLeaveRoomRsp::_internal_request_id() const {
  return request_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 SSR2NLeaveRoomRsp::request_id() const {
  // @@protoc_insertion_point(field_get:pb.SSR2NLeaveRoomRsp.request_id)
  return _internal_request_id();
}
inline void SSR2NLeaveRoomRsp::_internal_set_request_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  request_id_ = value;
}
inline void SSR2NLeaveRoomRsp::set_request_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_request_id(value);
  // @@protoc_insertion_point(field_set:pb.SSR2NLeaveRoomRsp.request_id)
}

// .pb.SSN2GLeaveRoomRsp rsp = 2;
inline bool SSR2NLeaveRoomRsp::_internal_has_rsp() const {
  return this != internal_default_instance() && rsp_ != nullptr;
}
inline bool SSR2NLeaveRoomRsp::has_rsp() const {
  return _internal_has_rsp();
}
inline const ::pb::SSN2GLeaveRoomRsp& SSR2NLeaveRoomRsp::_internal_rsp() const {
  const ::pb::SSN2GLeaveRoomRsp* p = rsp_;
  return p != nullptr ? *p : reinterpret_cast<const ::pb::SSN2GLeaveRoomRsp&>(
      ::pb::_SSN2GLeaveRoomRsp_default_instance_);
}
inline const ::pb::SSN2GLeaveRoomRsp& SSR2NLeaveRoomRsp::rsp() const {
  // @@protoc_insertion_point(field_get:pb.SSR2NLeaveRoomRsp.rsp)
  return _internal_rsp();
}
inline void SSR2NLeaveRoomRsp::unsafe_arena_set_allocated_rsp(
    ::pb::SSN2GLeaveRoomRsp* rsp) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(rsp_);
  }
  rsp_ = rsp;
  if (rsp) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:pb.SSR2NLeaveRoomRsp.rsp)
}
inline ::pb::SSN2GLeaveRoomRsp* SSR2NLeaveRoomRsp::release_rsp() {
  
  ::pb::SSN2GLeaveRoomRsp* temp = rsp_;
  rsp_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::pb::SSN2GLeaveRoomRsp* SSR2NLeaveRoomRsp::unsafe_arena_release_rsp() {
  // @@protoc_insertion_point(field_release:pb.SSR2NLeaveRoomRsp.rsp)
  
  ::pb::SSN2GLeaveRoomRsp* temp = rsp_;
  rsp_ = nullptr;
  return temp;
}
inline ::pb::SSN2GLeaveRoomRsp* SSR2NLeaveRoomRsp::_internal_mutable_rsp() {
  
  if (rsp_ == nullptr) {
    auto* p = CreateMaybeMessage<::pb::SSN2GLeaveRoomRsp>(GetArena());
    rsp_ = p;
  }
  return rsp_;
}
inline ::pb::SSN2GLeaveRoomRsp* SSR2NLeaveRoomRsp::mutable_rsp() {
  // @@protoc_insertion_point(field_mutable:pb.SSR2NLeaveRoomRsp.rsp)
  return _internal_mutable_rsp();
}
inline void SSR2NLeaveRoomRsp::set_allocated_rsp(::pb::SSN2GLeaveRoomRsp* rsp) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(rsp_);
  }
  if (rsp) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(rsp)->GetArena();
    if (message_arena != submessage_arena) {
      rsp = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, rsp, submessage_arena);
    }
    
  } else {
    
  }
  rsp_ = rsp;
  // @@protoc_insertion_point(field_set_allocated:pb.SSR2NLeaveRoomRsp.rsp)
}

// -------------------------------------------------------------------

// SSN2RChooseLevelReq

// uint64 request_id = 1;
inline void SSN2RChooseLevelReq::clear_request_id() {
  request_id_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 SSN2RChooseLevelReq::_internal_request_id() const {
  return request_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 SSN2RChooseLevelReq::request_id() const {
  // @@protoc_insertion_point(field_get:pb.SSN2RChooseLevelReq.request_id)
  return _internal_request_id();
}
inline void SSN2RChooseLevelReq::_internal_set_request_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  request_id_ = value;
}
inline void SSN2RChooseLevelReq::set_request_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_request_id(value);
  // @@protoc_insertion_point(field_set:pb.SSN2RChooseLevelReq.request_id)
}

// .pb.SSG2NChooseLevelReq req = 2;
inline bool SSN2RChooseLevelReq::_internal_has_req() const {
  return this != internal_default_instance() && req_ != nullptr;
}
inline bool SSN2RChooseLevelReq::has_req() const {
  return _internal_has_req();
}
inline const ::pb::SSG2NChooseLevelReq& SSN2RChooseLevelReq::_internal_req() const {
  const ::pb::SSG2NChooseLevelReq* p = req_;
  return p != nullptr ? *p : reinterpret_cast<const ::pb::SSG2NChooseLevelReq&>(
      ::pb::_SSG2NChooseLevelReq_default_instance_);
}
inline const ::pb::SSG2NChooseLevelReq& SSN2RChooseLevelReq::req() const {
  // @@protoc_insertion_point(field_get:pb.SSN2RChooseLevelReq.req)
  return _internal_req();
}
inline void SSN2RChooseLevelReq::unsafe_arena_set_allocated_req(
    ::pb::SSG2NChooseLevelReq* req) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(req_);
  }
  req_ = req;
  if (req) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:pb.SSN2RChooseLevelReq.req)
}
inline ::pb::SSG2NChooseLevelReq* SSN2RChooseLevelReq::release_req() {
  
  ::pb::SSG2NChooseLevelReq* temp = req_;
  req_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::pb::SSG2NChooseLevelReq* SSN2RChooseLevelReq::unsafe_arena_release_req() {
  // @@protoc_insertion_point(field_release:pb.SSN2RChooseLevelReq.req)
  
  ::pb::SSG2NChooseLevelReq* temp = req_;
  req_ = nullptr;
  return temp;
}
inline ::pb::SSG2NChooseLevelReq* SSN2RChooseLevelReq::_internal_mutable_req() {
  
  if (req_ == nullptr) {
    auto* p = CreateMaybeMessage<::pb::SSG2NChooseLevelReq>(GetArena());
    req_ = p;
  }
  return req_;
}
inline ::pb::SSG2NChooseLevelReq* SSN2RChooseLevelReq::mutable_req() {
  // @@protoc_insertion_point(field_mutable:pb.SSN2RChooseLevelReq.req)
  return _internal_mutable_req();
}
inline void SSN2RChooseLevelReq::set_allocated_req(::pb::SSG2NChooseLevelReq* req) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(req_);
  }
  if (req) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(req)->GetArena();
    if (message_arena != submessage_arena) {
      req = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, req, submessage_arena);
    }
    
  } else {
    
  }
  req_ = req;
  // @@protoc_insertion_point(field_set_allocated:pb.SSN2RChooseLevelReq.req)
}

// -------------------------------------------------------------------

// SSR2NChooseLevelRsp

// uint64 request_id = 1;
inline void SSR2NChooseLevelRsp::clear_request_id() {
  request_id_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 SSR2NChooseLevelRsp::_internal_request_id() const {
  return request_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 SSR2NChooseLevelRsp::request_id() const {
  // @@protoc_insertion_point(field_get:pb.SSR2NChooseLevelRsp.request_id)
  return _internal_request_id();
}
inline void SSR2NChooseLevelRsp::_internal_set_request_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  request_id_ = value;
}
inline void SSR2NChooseLevelRsp::set_request_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_request_id(value);
  // @@protoc_insertion_point(field_set:pb.SSR2NChooseLevelRsp.request_id)
}

// .pb.SSN2GChooseLevelRsp rsp = 2;
inline bool SSR2NChooseLevelRsp::_internal_has_rsp() const {
  return this != internal_default_instance() && rsp_ != nullptr;
}
inline bool SSR2NChooseLevelRsp::has_rsp() const {
  return _internal_has_rsp();
}
inline const ::pb::SSN2GChooseLevelRsp& SSR2NChooseLevelRsp::_internal_rsp() const {
  const ::pb::SSN2GChooseLevelRsp* p = rsp_;
  return p != nullptr ? *p : reinterpret_cast<const ::pb::SSN2GChooseLevelRsp&>(
      ::pb::_SSN2GChooseLevelRsp_default_instance_);
}
inline const ::pb::SSN2GChooseLevelRsp& SSR2NChooseLevelRsp::rsp() const {
  // @@protoc_insertion_point(field_get:pb.SSR2NChooseLevelRsp.rsp)
  return _internal_rsp();
}
inline void SSR2NChooseLevelRsp::unsafe_arena_set_allocated_rsp(
    ::pb::SSN2GChooseLevelRsp* rsp) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(rsp_);
  }
  rsp_ = rsp;
  if (rsp) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:pb.SSR2NChooseLevelRsp.rsp)
}
inline ::pb::SSN2GChooseLevelRsp* SSR2NChooseLevelRsp::release_rsp() {
  
  ::pb::SSN2GChooseLevelRsp* temp = rsp_;
  rsp_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::pb::SSN2GChooseLevelRsp* SSR2NChooseLevelRsp::unsafe_arena_release_rsp() {
  // @@protoc_insertion_point(field_release:pb.SSR2NChooseLevelRsp.rsp)
  
  ::pb::SSN2GChooseLevelRsp* temp = rsp_;
  rsp_ = nullptr;
  return temp;
}
inline ::pb::SSN2GChooseLevelRsp* SSR2NChooseLevelRsp::_internal_mutable_rsp() {
  
  if (rsp_ == nullptr) {
    auto* p = CreateMaybeMessage<::pb::SSN2GChooseLevelRsp>(GetArena());
    rsp_ = p;
  }
  return rsp_;
}
inline ::pb::SSN2GChooseLevelRsp* SSR2NChooseLevelRsp::mutable_rsp() {
  // @@protoc_insertion_point(field_mutable:pb.SSR2NChooseLevelRsp.rsp)
  return _internal_mutable_rsp();
}
inline void SSR2NChooseLevelRsp::set_allocated_rsp(::pb::SSN2GChooseLevelRsp* rsp) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(rsp_);
  }
  if (rsp) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(rsp)->GetArena();
    if (message_arena != submessage_arena) {
      rsp = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, rsp, submessage_arena);
    }
    
  } else {
    
  }
  rsp_ = rsp;
  // @@protoc_insertion_point(field_set_allocated:pb.SSR2NChooseLevelRsp.rsp)
}

// -------------------------------------------------------------------

// SSN2RReadyInRoomReq

// uint64 request_id = 1;
inline void SSN2RReadyInRoomReq::clear_request_id() {
  request_id_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 SSN2RReadyInRoomReq::_internal_request_id() const {
  return request_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 SSN2RReadyInRoomReq::request_id() const {
  // @@protoc_insertion_point(field_get:pb.SSN2RReadyInRoomReq.request_id)
  return _internal_request_id();
}
inline void SSN2RReadyInRoomReq::_internal_set_request_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  request_id_ = value;
}
inline void SSN2RReadyInRoomReq::set_request_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_request_id(value);
  // @@protoc_insertion_point(field_set:pb.SSN2RReadyInRoomReq.request_id)
}

// .pb.SSG2NReadyInRoomReq req = 2;
inline bool SSN2RReadyInRoomReq::_internal_has_req() const {
  return this != internal_default_instance() && req_ != nullptr;
}
inline bool SSN2RReadyInRoomReq::has_req() const {
  return _internal_has_req();
}
inline const ::pb::SSG2NReadyInRoomReq& SSN2RReadyInRoomReq::_internal_req() const {
  const ::pb::SSG2NReadyInRoomReq* p = req_;
  return p != nullptr ? *p : reinterpret_cast<const ::pb::SSG2NReadyInRoomReq&>(
      ::pb::_SSG2NReadyInRoomReq_default_instance_);
}
inline const ::pb::SSG2NReadyInRoomReq& SSN2RReadyInRoomReq::req() const {
  // @@protoc_insertion_point(field_get:pb.SSN2RReadyInRoomReq.req)
  return _internal_req();
}
inline void SSN2RReadyInRoomReq::unsafe_arena_set_allocated_req(
    ::pb::SSG2NReadyInRoomReq* req) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(req_);
  }
  req_ = req;
  if (req) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:pb.SSN2RReadyInRoomReq.req)
}
inline ::pb::SSG2NReadyInRoomReq* SSN2RReadyInRoomReq::release_req() {
  
  ::pb::SSG2NReadyInRoomReq* temp = req_;
  req_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::pb::SSG2NReadyInRoomReq* SSN2RReadyInRoomReq::unsafe_arena_release_req() {
  // @@protoc_insertion_point(field_release:pb.SSN2RReadyInRoomReq.req)
  
  ::pb::SSG2NReadyInRoomReq* temp = req_;
  req_ = nullptr;
  return temp;
}
inline ::pb::SSG2NReadyInRoomReq* SSN2RReadyInRoomReq::_internal_mutable_req() {
  
  if (req_ == nullptr) {
    auto* p = CreateMaybeMessage<::pb::SSG2NReadyInRoomReq>(GetArena());
    req_ = p;
  }
  return req_;
}
inline ::pb::SSG2NReadyInRoomReq* SSN2RReadyInRoomReq::mutable_req() {
  // @@protoc_insertion_point(field_mutable:pb.SSN2RReadyInRoomReq.req)
  return _internal_mutable_req();
}
inline void SSN2RReadyInRoomReq::set_allocated_req(::pb::SSG2NReadyInRoomReq* req) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(req_);
  }
  if (req) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(req)->GetArena();
    if (message_arena != submessage_arena) {
      req = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, req, submessage_arena);
    }
    
  } else {
    
  }
  req_ = req;
  // @@protoc_insertion_point(field_set_allocated:pb.SSN2RReadyInRoomReq.req)
}

// -------------------------------------------------------------------

// SSR2NReadyInRoomRsp

// uint64 request_id = 1;
inline void SSR2NReadyInRoomRsp::clear_request_id() {
  request_id_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 SSR2NReadyInRoomRsp::_internal_request_id() const {
  return request_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 SSR2NReadyInRoomRsp::request_id() const {
  // @@protoc_insertion_point(field_get:pb.SSR2NReadyInRoomRsp.request_id)
  return _internal_request_id();
}
inline void SSR2NReadyInRoomRsp::_internal_set_request_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  request_id_ = value;
}
inline void SSR2NReadyInRoomRsp::set_request_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_request_id(value);
  // @@protoc_insertion_point(field_set:pb.SSR2NReadyInRoomRsp.request_id)
}

// .pb.SSN2GReadyInRoomRsp rsp = 2;
inline bool SSR2NReadyInRoomRsp::_internal_has_rsp() const {
  return this != internal_default_instance() && rsp_ != nullptr;
}
inline bool SSR2NReadyInRoomRsp::has_rsp() const {
  return _internal_has_rsp();
}
inline const ::pb::SSN2GReadyInRoomRsp& SSR2NReadyInRoomRsp::_internal_rsp() const {
  const ::pb::SSN2GReadyInRoomRsp* p = rsp_;
  return p != nullptr ? *p : reinterpret_cast<const ::pb::SSN2GReadyInRoomRsp&>(
      ::pb::_SSN2GReadyInRoomRsp_default_instance_);
}
inline const ::pb::SSN2GReadyInRoomRsp& SSR2NReadyInRoomRsp::rsp() const {
  // @@protoc_insertion_point(field_get:pb.SSR2NReadyInRoomRsp.rsp)
  return _internal_rsp();
}
inline void SSR2NReadyInRoomRsp::unsafe_arena_set_allocated_rsp(
    ::pb::SSN2GReadyInRoomRsp* rsp) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(rsp_);
  }
  rsp_ = rsp;
  if (rsp) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:pb.SSR2NReadyInRoomRsp.rsp)
}
inline ::pb::SSN2GReadyInRoomRsp* SSR2NReadyInRoomRsp::release_rsp() {
  
  ::pb::SSN2GReadyInRoomRsp* temp = rsp_;
  rsp_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::pb::SSN2GReadyInRoomRsp* SSR2NReadyInRoomRsp::unsafe_arena_release_rsp() {
  // @@protoc_insertion_point(field_release:pb.SSR2NReadyInRoomRsp.rsp)
  
  ::pb::SSN2GReadyInRoomRsp* temp = rsp_;
  rsp_ = nullptr;
  return temp;
}
inline ::pb::SSN2GReadyInRoomRsp* SSR2NReadyInRoomRsp::_internal_mutable_rsp() {
  
  if (rsp_ == nullptr) {
    auto* p = CreateMaybeMessage<::pb::SSN2GReadyInRoomRsp>(GetArena());
    rsp_ = p;
  }
  return rsp_;
}
inline ::pb::SSN2GReadyInRoomRsp* SSR2NReadyInRoomRsp::mutable_rsp() {
  // @@protoc_insertion_point(field_mutable:pb.SSR2NReadyInRoomRsp.rsp)
  return _internal_mutable_rsp();
}
inline void SSR2NReadyInRoomRsp::set_allocated_rsp(::pb::SSN2GReadyInRoomRsp* rsp) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(rsp_);
  }
  if (rsp) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(rsp)->GetArena();
    if (message_arena != submessage_arena) {
      rsp = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, rsp, submessage_arena);
    }
    
  } else {
    
  }
  rsp_ = rsp;
  // @@protoc_insertion_point(field_set_allocated:pb.SSR2NReadyInRoomRsp.rsp)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace pb

PROTOBUF_NAMESPACE_OPEN

template <> struct is_proto_enum< ::pb::SS_NODE_ROOM_MSG_CMD> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::pb::SS_NODE_ROOM_MSG_CMD>() {
  return ::pb::SS_NODE_ROOM_MSG_CMD_descriptor();
}

PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_node_5froom_5fmsg_2eproto
