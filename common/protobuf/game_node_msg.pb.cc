// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: game_node_msg.proto

#include "game_node_msg.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_game_5fnode_5fmsg_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_BattleServerMsg_game_5fnode_5fmsg_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_CsCmd_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ChooseLevelCsReq_CsCmd_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_CsCmd_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ChooseLevelScRsp_CsCmd_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_CsCmd_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_InRoomUserInfo_CsCmd_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_CsCmd_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ReadyInRoomCsReq_CsCmd_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_CsCmd_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ReadyInRoomScRsp_CsCmd_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_CsCmd_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_RoomInfoMsg_CsCmd_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_CsCmd_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_TryCreateRoomCsReq_CsCmd_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_CsCmd_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_TryCreateRoomScRsp_CsCmd_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_CsCmd_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_TryEnterRoomCsReq_CsCmd_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_CsCmd_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_TryEnterRoomScRsp_CsCmd_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_CsCmd_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_TryLeaveRoomCsReq_CsCmd_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_CsCmd_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_TryLeaveRoomScRsp_CsCmd_2eproto;
namespace pb {
class SSG2NPullMsgInfoReqDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SSG2NPullMsgInfoReq> _instance;
} _SSG2NPullMsgInfoReq_default_instance_;
class SSN2GPullMsgInfoRspDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SSN2GPullMsgInfoRsp> _instance;
} _SSN2GPullMsgInfoRsp_default_instance_;
class BattleServerMsgDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<BattleServerMsg> _instance;
} _BattleServerMsg_default_instance_;
class SSN2GPullBattleMsgInfoRspDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SSN2GPullBattleMsgInfoRsp> _instance;
} _SSN2GPullBattleMsgInfoRsp_default_instance_;
class SSG2NCreateRoomReqDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SSG2NCreateRoomReq> _instance;
} _SSG2NCreateRoomReq_default_instance_;
class SSN2GCreateRoomRspDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SSN2GCreateRoomRsp> _instance;
} _SSN2GCreateRoomRsp_default_instance_;
class SSG2NEnterRoomReqDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SSG2NEnterRoomReq> _instance;
} _SSG2NEnterRoomReq_default_instance_;
class SSN2GEnterRoomRspDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SSN2GEnterRoomRsp> _instance;
} _SSN2GEnterRoomRsp_default_instance_;
class SSG2NLeaveRoomReqDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SSG2NLeaveRoomReq> _instance;
} _SSG2NLeaveRoomReq_default_instance_;
class SSN2GLeaveRoomRspDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SSN2GLeaveRoomRsp> _instance;
} _SSN2GLeaveRoomRsp_default_instance_;
class SSG2NChooseLevelReqDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SSG2NChooseLevelReq> _instance;
} _SSG2NChooseLevelReq_default_instance_;
class SSN2GChooseLevelRspDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SSN2GChooseLevelRsp> _instance;
} _SSN2GChooseLevelRsp_default_instance_;
class SSG2NReadyInRoomReqDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SSG2NReadyInRoomReq> _instance;
} _SSG2NReadyInRoomReq_default_instance_;
class SSN2GReadyInRoomRspDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SSN2GReadyInRoomRsp> _instance;
} _SSN2GReadyInRoomRsp_default_instance_;
class SSG2NUserDisConnectRoomNotifyDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SSG2NUserDisConnectRoomNotify> _instance;
} _SSG2NUserDisConnectRoomNotify_default_instance_;
class SSN2GUserDisConnecteTimeoutNotifyDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SSN2GUserDisConnecteTimeoutNotify> _instance;
} _SSN2GUserDisConnecteTimeoutNotify_default_instance_;
}  // namespace pb
static void InitDefaultsscc_info_BattleServerMsg_game_5fnode_5fmsg_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pb::_BattleServerMsg_default_instance_;
    new (ptr) ::pb::BattleServerMsg();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_BattleServerMsg_game_5fnode_5fmsg_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_BattleServerMsg_game_5fnode_5fmsg_2eproto}, {}};

static void InitDefaultsscc_info_SSG2NChooseLevelReq_game_5fnode_5fmsg_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pb::_SSG2NChooseLevelReq_default_instance_;
    new (ptr) ::pb::SSG2NChooseLevelReq();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_SSG2NChooseLevelReq_game_5fnode_5fmsg_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_SSG2NChooseLevelReq_game_5fnode_5fmsg_2eproto}, {
      &scc_info_ChooseLevelCsReq_CsCmd_2eproto.base,}};

static void InitDefaultsscc_info_SSG2NCreateRoomReq_game_5fnode_5fmsg_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pb::_SSG2NCreateRoomReq_default_instance_;
    new (ptr) ::pb::SSG2NCreateRoomReq();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_SSG2NCreateRoomReq_game_5fnode_5fmsg_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_SSG2NCreateRoomReq_game_5fnode_5fmsg_2eproto}, {
      &scc_info_TryCreateRoomCsReq_CsCmd_2eproto.base,}};

static void InitDefaultsscc_info_SSG2NEnterRoomReq_game_5fnode_5fmsg_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pb::_SSG2NEnterRoomReq_default_instance_;
    new (ptr) ::pb::SSG2NEnterRoomReq();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_SSG2NEnterRoomReq_game_5fnode_5fmsg_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_SSG2NEnterRoomReq_game_5fnode_5fmsg_2eproto}, {
      &scc_info_TryEnterRoomCsReq_CsCmd_2eproto.base,}};

static void InitDefaultsscc_info_SSG2NLeaveRoomReq_game_5fnode_5fmsg_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pb::_SSG2NLeaveRoomReq_default_instance_;
    new (ptr) ::pb::SSG2NLeaveRoomReq();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_SSG2NLeaveRoomReq_game_5fnode_5fmsg_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_SSG2NLeaveRoomReq_game_5fnode_5fmsg_2eproto}, {
      &scc_info_TryLeaveRoomCsReq_CsCmd_2eproto.base,}};

static void InitDefaultsscc_info_SSG2NPullMsgInfoReq_game_5fnode_5fmsg_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pb::_SSG2NPullMsgInfoReq_default_instance_;
    new (ptr) ::pb::SSG2NPullMsgInfoReq();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_SSG2NPullMsgInfoReq_game_5fnode_5fmsg_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_SSG2NPullMsgInfoReq_game_5fnode_5fmsg_2eproto}, {}};

static void InitDefaultsscc_info_SSG2NReadyInRoomReq_game_5fnode_5fmsg_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pb::_SSG2NReadyInRoomReq_default_instance_;
    new (ptr) ::pb::SSG2NReadyInRoomReq();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_SSG2NReadyInRoomReq_game_5fnode_5fmsg_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_SSG2NReadyInRoomReq_game_5fnode_5fmsg_2eproto}, {
      &scc_info_ReadyInRoomCsReq_CsCmd_2eproto.base,}};

static void InitDefaultsscc_info_SSG2NUserDisConnectRoomNotify_game_5fnode_5fmsg_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pb::_SSG2NUserDisConnectRoomNotify_default_instance_;
    new (ptr) ::pb::SSG2NUserDisConnectRoomNotify();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_SSG2NUserDisConnectRoomNotify_game_5fnode_5fmsg_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_SSG2NUserDisConnectRoomNotify_game_5fnode_5fmsg_2eproto}, {}};

static void InitDefaultsscc_info_SSN2GChooseLevelRsp_game_5fnode_5fmsg_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pb::_SSN2GChooseLevelRsp_default_instance_;
    new (ptr) ::pb::SSN2GChooseLevelRsp();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_SSN2GChooseLevelRsp_game_5fnode_5fmsg_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_SSN2GChooseLevelRsp_game_5fnode_5fmsg_2eproto}, {
      &scc_info_ChooseLevelScRsp_CsCmd_2eproto.base,}};

static void InitDefaultsscc_info_SSN2GCreateRoomRsp_game_5fnode_5fmsg_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pb::_SSN2GCreateRoomRsp_default_instance_;
    new (ptr) ::pb::SSN2GCreateRoomRsp();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_SSN2GCreateRoomRsp_game_5fnode_5fmsg_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_SSN2GCreateRoomRsp_game_5fnode_5fmsg_2eproto}, {
      &scc_info_TryCreateRoomScRsp_CsCmd_2eproto.base,}};

static void InitDefaultsscc_info_SSN2GEnterRoomRsp_game_5fnode_5fmsg_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pb::_SSN2GEnterRoomRsp_default_instance_;
    new (ptr) ::pb::SSN2GEnterRoomRsp();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_SSN2GEnterRoomRsp_game_5fnode_5fmsg_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_SSN2GEnterRoomRsp_game_5fnode_5fmsg_2eproto}, {
      &scc_info_TryEnterRoomScRsp_CsCmd_2eproto.base,}};

static void InitDefaultsscc_info_SSN2GLeaveRoomRsp_game_5fnode_5fmsg_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pb::_SSN2GLeaveRoomRsp_default_instance_;
    new (ptr) ::pb::SSN2GLeaveRoomRsp();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_SSN2GLeaveRoomRsp_game_5fnode_5fmsg_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_SSN2GLeaveRoomRsp_game_5fnode_5fmsg_2eproto}, {
      &scc_info_TryLeaveRoomScRsp_CsCmd_2eproto.base,}};

static void InitDefaultsscc_info_SSN2GPullBattleMsgInfoRsp_game_5fnode_5fmsg_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pb::_SSN2GPullBattleMsgInfoRsp_default_instance_;
    new (ptr) ::pb::SSN2GPullBattleMsgInfoRsp();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_SSN2GPullBattleMsgInfoRsp_game_5fnode_5fmsg_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_SSN2GPullBattleMsgInfoRsp_game_5fnode_5fmsg_2eproto}, {
      &scc_info_BattleServerMsg_game_5fnode_5fmsg_2eproto.base,}};

static void InitDefaultsscc_info_SSN2GPullMsgInfoRsp_game_5fnode_5fmsg_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pb::_SSN2GPullMsgInfoRsp_default_instance_;
    new (ptr) ::pb::SSN2GPullMsgInfoRsp();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_SSN2GPullMsgInfoRsp_game_5fnode_5fmsg_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_SSN2GPullMsgInfoRsp_game_5fnode_5fmsg_2eproto}, {
      &scc_info_RoomInfoMsg_CsCmd_2eproto.base,
      &scc_info_InRoomUserInfo_CsCmd_2eproto.base,}};

static void InitDefaultsscc_info_SSN2GReadyInRoomRsp_game_5fnode_5fmsg_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pb::_SSN2GReadyInRoomRsp_default_instance_;
    new (ptr) ::pb::SSN2GReadyInRoomRsp();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_SSN2GReadyInRoomRsp_game_5fnode_5fmsg_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_SSN2GReadyInRoomRsp_game_5fnode_5fmsg_2eproto}, {
      &scc_info_ReadyInRoomScRsp_CsCmd_2eproto.base,}};

static void InitDefaultsscc_info_SSN2GUserDisConnecteTimeoutNotify_game_5fnode_5fmsg_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pb::_SSN2GUserDisConnecteTimeoutNotify_default_instance_;
    new (ptr) ::pb::SSN2GUserDisConnecteTimeoutNotify();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_SSN2GUserDisConnecteTimeoutNotify_game_5fnode_5fmsg_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_SSN2GUserDisConnecteTimeoutNotify_game_5fnode_5fmsg_2eproto}, {}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_game_5fnode_5fmsg_2eproto[16];
static const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* file_level_enum_descriptors_game_5fnode_5fmsg_2eproto[3];
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_game_5fnode_5fmsg_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_game_5fnode_5fmsg_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::pb::SSG2NPullMsgInfoReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::pb::SSG2NPullMsgInfoReq, roomid_),
  PROTOBUF_FIELD_OFFSET(::pb::SSG2NPullMsgInfoReq, accountid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::pb::SSN2GPullMsgInfoRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::pb::SSN2GPullMsgInfoRsp, retcode_),
  PROTOBUF_FIELD_OFFSET(::pb::SSN2GPullMsgInfoRsp, accountid_),
  PROTOBUF_FIELD_OFFSET(::pb::SSN2GPullMsgInfoRsp, roommsg_),
  PROTOBUF_FIELD_OFFSET(::pb::SSN2GPullMsgInfoRsp, userlists_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::pb::BattleServerMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::pb::BattleServerMsg, addr_),
  PROTOBUF_FIELD_OFFSET(::pb::BattleServerMsg, port_),
  PROTOBUF_FIELD_OFFSET(::pb::BattleServerMsg, token_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::pb::SSN2GPullBattleMsgInfoRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::pb::SSN2GPullBattleMsgInfoRsp, retcode_),
  PROTOBUF_FIELD_OFFSET(::pb::SSN2GPullBattleMsgInfoRsp, accountid_),
  PROTOBUF_FIELD_OFFSET(::pb::SSN2GPullBattleMsgInfoRsp, battleservermsg_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::pb::SSG2NCreateRoomReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::pb::SSG2NCreateRoomReq, accountid_),
  PROTOBUF_FIELD_OFFSET(::pb::SSG2NCreateRoomReq, req_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::pb::SSN2GCreateRoomRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::pb::SSN2GCreateRoomRsp, accountid_),
  PROTOBUF_FIELD_OFFSET(::pb::SSN2GCreateRoomRsp, rsp_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::pb::SSG2NEnterRoomReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::pb::SSG2NEnterRoomReq, accountid_),
  PROTOBUF_FIELD_OFFSET(::pb::SSG2NEnterRoomReq, roomid_),
  PROTOBUF_FIELD_OFFSET(::pb::SSG2NEnterRoomReq, req_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::pb::SSN2GEnterRoomRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::pb::SSN2GEnterRoomRsp, accountid_),
  PROTOBUF_FIELD_OFFSET(::pb::SSN2GEnterRoomRsp, rsp_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::pb::SSG2NLeaveRoomReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::pb::SSG2NLeaveRoomReq, accountid_),
  PROTOBUF_FIELD_OFFSET(::pb::SSG2NLeaveRoomReq, roomid_),
  PROTOBUF_FIELD_OFFSET(::pb::SSG2NLeaveRoomReq, req_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::pb::SSN2GLeaveRoomRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::pb::SSN2GLeaveRoomRsp, accountid_),
  PROTOBUF_FIELD_OFFSET(::pb::SSN2GLeaveRoomRsp, rsp_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::pb::SSG2NChooseLevelReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::pb::SSG2NChooseLevelReq, accountid_),
  PROTOBUF_FIELD_OFFSET(::pb::SSG2NChooseLevelReq, roomid_),
  PROTOBUF_FIELD_OFFSET(::pb::SSG2NChooseLevelReq, req_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::pb::SSN2GChooseLevelRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::pb::SSN2GChooseLevelRsp, accountid_),
  PROTOBUF_FIELD_OFFSET(::pb::SSN2GChooseLevelRsp, rsp_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::pb::SSG2NReadyInRoomReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::pb::SSG2NReadyInRoomReq, accountid_),
  PROTOBUF_FIELD_OFFSET(::pb::SSG2NReadyInRoomReq, roomid_),
  PROTOBUF_FIELD_OFFSET(::pb::SSG2NReadyInRoomReq, req_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::pb::SSN2GReadyInRoomRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::pb::SSN2GReadyInRoomRsp, accountid_),
  PROTOBUF_FIELD_OFFSET(::pb::SSN2GReadyInRoomRsp, rsp_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::pb::SSG2NUserDisConnectRoomNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::pb::SSG2NUserDisConnectRoomNotify, accountid_),
  PROTOBUF_FIELD_OFFSET(::pb::SSG2NUserDisConnectRoomNotify, roomid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::pb::SSN2GUserDisConnecteTimeoutNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::pb::SSN2GUserDisConnecteTimeoutNotify, accountid_),
  PROTOBUF_FIELD_OFFSET(::pb::SSN2GUserDisConnecteTimeoutNotify, roomid_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::pb::SSG2NPullMsgInfoReq)},
  { 7, -1, sizeof(::pb::SSN2GPullMsgInfoRsp)},
  { 16, -1, sizeof(::pb::BattleServerMsg)},
  { 24, -1, sizeof(::pb::SSN2GPullBattleMsgInfoRsp)},
  { 32, -1, sizeof(::pb::SSG2NCreateRoomReq)},
  { 39, -1, sizeof(::pb::SSN2GCreateRoomRsp)},
  { 46, -1, sizeof(::pb::SSG2NEnterRoomReq)},
  { 54, -1, sizeof(::pb::SSN2GEnterRoomRsp)},
  { 61, -1, sizeof(::pb::SSG2NLeaveRoomReq)},
  { 69, -1, sizeof(::pb::SSN2GLeaveRoomRsp)},
  { 76, -1, sizeof(::pb::SSG2NChooseLevelReq)},
  { 84, -1, sizeof(::pb::SSN2GChooseLevelRsp)},
  { 91, -1, sizeof(::pb::SSG2NReadyInRoomReq)},
  { 99, -1, sizeof(::pb::SSN2GReadyInRoomRsp)},
  { 106, -1, sizeof(::pb::SSG2NUserDisConnectRoomNotify)},
  { 113, -1, sizeof(::pb::SSN2GUserDisConnecteTimeoutNotify)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::pb::_SSG2NPullMsgInfoReq_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::pb::_SSN2GPullMsgInfoRsp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::pb::_BattleServerMsg_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::pb::_SSN2GPullBattleMsgInfoRsp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::pb::_SSG2NCreateRoomReq_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::pb::_SSN2GCreateRoomRsp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::pb::_SSG2NEnterRoomReq_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::pb::_SSN2GEnterRoomRsp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::pb::_SSG2NLeaveRoomReq_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::pb::_SSN2GLeaveRoomRsp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::pb::_SSG2NChooseLevelReq_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::pb::_SSN2GChooseLevelRsp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::pb::_SSG2NReadyInRoomReq_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::pb::_SSN2GReadyInRoomRsp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::pb::_SSG2NUserDisConnectRoomNotify_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::pb::_SSN2GUserDisConnecteTimeoutNotify_default_instance_),
};

const char descriptor_table_protodef_game_5fnode_5fmsg_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\023game_node_msg.proto\022\002pb\032\013CsCmd.proto\"8"
  "\n\023SSG2NPullMsgInfoReq\022\016\n\006roomid\030\001 \001(\004\022\021\n"
  "\taccountid\030\002 \001(\r\"\203\002\n\023SSN2GPullMsgInfoRsp"
  "\0220\n\007retcode\030\001 \001(\0162\037.pb.SSN2GPullMsgInfoR"
  "sp.RetCode\022\021\n\taccountid\030\002 \001(\r\022 \n\007roomMsg"
  "\030\003 \001(\0132\017.pb.RoomInfoMsg\022%\n\tuserlists\030\004 \003"
  "(\0132\022.pb.InRoomUserInfo\"^\n\007RetCode\022\014\n\010RET"
  "_SUCC\020\000\022\016\n\nRET_FAILED\020\001\022\026\n\022RET_ROOM_NOT_"
  "EXIST\020\002\022\035\n\031RET_SERVEICE_NOT_AVAILBLE\020\003\"<"
  "\n\017BattleServerMsg\022\014\n\004addr\030\001 \001(\t\022\014\n\004port\030"
  "\002 \001(\r\022\r\n\005token\030\003 \001(\t\"\364\001\n\031SSN2GPullBattle"
  "MsgInfoRsp\0226\n\007retcode\030\001 \001(\0162%.pb.SSN2GPu"
  "llBattleMsgInfoRsp.RetCode\022\021\n\taccountid\030"
  "\002 \001(\004\022,\n\017battleServerMsg\030\003 \001(\0132\023.pb.Batt"
  "leServerMsg\"^\n\007RetCode\022\014\n\010RET_SUCC\020\000\022\016\n\n"
  "RET_FAILED\020\001\022\026\n\022RET_ROOM_NOT_EXIST\020\002\022\035\n\031"
  "RET_SERVEICE_NOT_AVAILBLE\020\003\"L\n\022SSG2NCrea"
  "teRoomReq\022\021\n\taccountid\030\001 \001(\004\022#\n\003req\030\002 \001("
  "\0132\026.pb.TryCreateRoomCsReq\"L\n\022SSN2GCreate"
  "RoomRsp\022\021\n\taccountid\030\001 \001(\004\022#\n\003rsp\030\002 \001(\0132"
  "\026.pb.TryCreateRoomScRsp\"Z\n\021SSG2NEnterRoo"
  "mReq\022\021\n\taccountid\030\001 \001(\004\022\016\n\006RoomID\030\002 \001(\004\022"
  "\"\n\003req\030\003 \001(\0132\025.pb.TryEnterRoomCsReq\"J\n\021S"
  "SN2GEnterRoomRsp\022\021\n\taccountid\030\001 \001(\004\022\"\n\003r"
  "sp\030\002 \001(\0132\025.pb.TryEnterRoomScRsp\"Z\n\021SSG2N"
  "LeaveRoomReq\022\021\n\taccountid\030\001 \001(\004\022\016\n\006RoomI"
  "D\030\002 \001(\004\022\"\n\003req\030\003 \001(\0132\025.pb.TryLeaveRoomCs"
  "Req\"J\n\021SSN2GLeaveRoomRsp\022\021\n\taccountid\030\001 "
  "\001(\004\022\"\n\003rsp\030\002 \001(\0132\025.pb.TryLeaveRoomScRsp\""
  "[\n\023SSG2NChooseLevelReq\022\021\n\taccountid\030\001 \001("
  "\004\022\016\n\006RoomID\030\002 \001(\004\022!\n\003req\030\003 \001(\0132\024.pb.Choo"
  "seLevelCsReq\"K\n\023SSN2GChooseLevelRsp\022\021\n\ta"
  "ccountid\030\001 \001(\r\022!\n\003rsp\030\002 \001(\0132\024.pb.ChooseL"
  "evelScRsp\"[\n\023SSG2NReadyInRoomReq\022\021\n\tacco"
  "untid\030\001 \001(\004\022\016\n\006RoomID\030\002 \001(\004\022!\n\003req\030\003 \001(\013"
  "2\024.pb.ReadyInRoomCsReq\"K\n\023SSN2GReadyInRo"
  "omRsp\022\021\n\taccountid\030\001 \001(\004\022!\n\003rsp\030\002 \001(\0132\024."
  "pb.ReadyInRoomScRsp\"B\n\035SSG2NUserDisConne"
  "ctRoomNotify\022\021\n\taccountid\030\001 \001(\004\022\016\n\006roomi"
  "d\030\002 \001(\004\"F\n!SSN2GUserDisConnecteTimeoutNo"
  "tify\022\021\n\taccountid\030\001 \001(\004\022\016\n\006roomid\030\002 \001(\004*"
  "\360\004\n\024SS_GAME_NODE_MSG_CMD\022\027\n\023SS_GAME_MSG_"
  "DEFAULT\020\000\022\"\n\035SS_GAME_NODE_PULLROOMINFO_R"
  "EQ\020\364\003\022\"\n\035SS_NODE_GAME_PULLROOMINFO_RSP\020\365"
  "\003\022 \n\033SS_GAME_NODE_CREATEROOM_REQ\020\366\003\022 \n\033S"
  "S_NODE_GAME_CREATEROOM_RSP\020\367\003\022\037\n\032SS_GAME"
  "_NODE_ENTERROOM_REQ\020\370\003\022\037\n\032SS_NODE_GAME_E"
  "NTERROOM_RSP\020\371\003\022\037\n\032SS_GAME_NODE_LEAVEROO"
  "M_REQ\020\372\003\022\037\n\032SS_NODE_GAME_LEAVEROOM_RSP\020\373"
  "\003\022!\n\034SS_GAME_NODE_CHOOSELEVEL_REQ\020\374\003\022!\n\034"
  "SS_NODE_GAME_CHOOSELEVEL_RSP\020\375\003\022\037\n\032SS_GA"
  "ME_NODE_READYROOM_REQ\020\376\003\022\037\n\032SS_NODE_GAME"
  "_READYROOM_RSP\020\377\003\022$\n\037SS_GAME_NODE_PULLBA"
  "TTLEINFO_REQ\020\200\004\022$\n\037SS_NODE_GAME_PULLBATT"
  "LEINFO_RSP\020\201\004\022(\n#SS_GAME_NODE_USER_DISCO"
  "NNECT_NOTIFY\020\202\004\0221\n,SS_NODE_GAME_USER__DI"
  "SCONNECT_TIMEOUT_NOTIFY\020\203\004b\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_game_5fnode_5fmsg_2eproto_deps[1] = {
  &::descriptor_table_CsCmd_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_game_5fnode_5fmsg_2eproto_sccs[16] = {
  &scc_info_BattleServerMsg_game_5fnode_5fmsg_2eproto.base,
  &scc_info_SSG2NChooseLevelReq_game_5fnode_5fmsg_2eproto.base,
  &scc_info_SSG2NCreateRoomReq_game_5fnode_5fmsg_2eproto.base,
  &scc_info_SSG2NEnterRoomReq_game_5fnode_5fmsg_2eproto.base,
  &scc_info_SSG2NLeaveRoomReq_game_5fnode_5fmsg_2eproto.base,
  &scc_info_SSG2NPullMsgInfoReq_game_5fnode_5fmsg_2eproto.base,
  &scc_info_SSG2NReadyInRoomReq_game_5fnode_5fmsg_2eproto.base,
  &scc_info_SSG2NUserDisConnectRoomNotify_game_5fnode_5fmsg_2eproto.base,
  &scc_info_SSN2GChooseLevelRsp_game_5fnode_5fmsg_2eproto.base,
  &scc_info_SSN2GCreateRoomRsp_game_5fnode_5fmsg_2eproto.base,
  &scc_info_SSN2GEnterRoomRsp_game_5fnode_5fmsg_2eproto.base,
  &scc_info_SSN2GLeaveRoomRsp_game_5fnode_5fmsg_2eproto.base,
  &scc_info_SSN2GPullBattleMsgInfoRsp_game_5fnode_5fmsg_2eproto.base,
  &scc_info_SSN2GPullMsgInfoRsp_game_5fnode_5fmsg_2eproto.base,
  &scc_info_SSN2GReadyInRoomRsp_game_5fnode_5fmsg_2eproto.base,
  &scc_info_SSN2GUserDisConnecteTimeoutNotify_game_5fnode_5fmsg_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_game_5fnode_5fmsg_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_game_5fnode_5fmsg_2eproto = {
  false, false, descriptor_table_protodef_game_5fnode_5fmsg_2eproto, "game_node_msg.proto", 2274,
  &descriptor_table_game_5fnode_5fmsg_2eproto_once, descriptor_table_game_5fnode_5fmsg_2eproto_sccs, descriptor_table_game_5fnode_5fmsg_2eproto_deps, 16, 1,
  schemas, file_default_instances, TableStruct_game_5fnode_5fmsg_2eproto::offsets,
  file_level_metadata_game_5fnode_5fmsg_2eproto, 16, file_level_enum_descriptors_game_5fnode_5fmsg_2eproto, file_level_service_descriptors_game_5fnode_5fmsg_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_game_5fnode_5fmsg_2eproto = (static_cast<void>(::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_game_5fnode_5fmsg_2eproto)), true);
namespace pb {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* SSN2GPullMsgInfoRsp_RetCode_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_game_5fnode_5fmsg_2eproto);
  return file_level_enum_descriptors_game_5fnode_5fmsg_2eproto[0];
}
bool SSN2GPullMsgInfoRsp_RetCode_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr SSN2GPullMsgInfoRsp_RetCode SSN2GPullMsgInfoRsp::RET_SUCC;
constexpr SSN2GPullMsgInfoRsp_RetCode SSN2GPullMsgInfoRsp::RET_FAILED;
constexpr SSN2GPullMsgInfoRsp_RetCode SSN2GPullMsgInfoRsp::RET_ROOM_NOT_EXIST;
constexpr SSN2GPullMsgInfoRsp_RetCode SSN2GPullMsgInfoRsp::RET_SERVEICE_NOT_AVAILBLE;
constexpr SSN2GPullMsgInfoRsp_RetCode SSN2GPullMsgInfoRsp::RetCode_MIN;
constexpr SSN2GPullMsgInfoRsp_RetCode SSN2GPullMsgInfoRsp::RetCode_MAX;
constexpr int SSN2GPullMsgInfoRsp::RetCode_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* SSN2GPullBattleMsgInfoRsp_RetCode_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_game_5fnode_5fmsg_2eproto);
  return file_level_enum_descriptors_game_5fnode_5fmsg_2eproto[1];
}
bool SSN2GPullBattleMsgInfoRsp_RetCode_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr SSN2GPullBattleMsgInfoRsp_RetCode SSN2GPullBattleMsgInfoRsp::RET_SUCC;
constexpr SSN2GPullBattleMsgInfoRsp_RetCode SSN2GPullBattleMsgInfoRsp::RET_FAILED;
constexpr SSN2GPullBattleMsgInfoRsp_RetCode SSN2GPullBattleMsgInfoRsp::RET_ROOM_NOT_EXIST;
constexpr SSN2GPullBattleMsgInfoRsp_RetCode SSN2GPullBattleMsgInfoRsp::RET_SERVEICE_NOT_AVAILBLE;
constexpr SSN2GPullBattleMsgInfoRsp_RetCode SSN2GPullBattleMsgInfoRsp::RetCode_MIN;
constexpr SSN2GPullBattleMsgInfoRsp_RetCode SSN2GPullBattleMsgInfoRsp::RetCode_MAX;
constexpr int SSN2GPullBattleMsgInfoRsp::RetCode_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* SS_GAME_NODE_MSG_CMD_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_game_5fnode_5fmsg_2eproto);
  return file_level_enum_descriptors_game_5fnode_5fmsg_2eproto[2];
}
bool SS_GAME_NODE_MSG_CMD_IsValid(int value) {
  switch (value) {
    case 0:
    case 500:
    case 501:
    case 502:
    case 503:
    case 504:
    case 505:
    case 506:
    case 507:
    case 508:
    case 509:
    case 510:
    case 511:
    case 512:
    case 513:
    case 514:
    case 515:
      return true;
    default:
      return false;
  }
}


// ===================================================================

class SSG2NPullMsgInfoReq::_Internal {
 public:
};

SSG2NPullMsgInfoReq::SSG2NPullMsgInfoReq(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:pb.SSG2NPullMsgInfoReq)
}
SSG2NPullMsgInfoReq::SSG2NPullMsgInfoReq(const SSG2NPullMsgInfoReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&roomid_, &from.roomid_,
    static_cast<size_t>(reinterpret_cast<char*>(&accountid_) -
    reinterpret_cast<char*>(&roomid_)) + sizeof(accountid_));
  // @@protoc_insertion_point(copy_constructor:pb.SSG2NPullMsgInfoReq)
}

void SSG2NPullMsgInfoReq::SharedCtor() {
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&roomid_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&accountid_) -
      reinterpret_cast<char*>(&roomid_)) + sizeof(accountid_));
}

SSG2NPullMsgInfoReq::~SSG2NPullMsgInfoReq() {
  // @@protoc_insertion_point(destructor:pb.SSG2NPullMsgInfoReq)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SSG2NPullMsgInfoReq::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void SSG2NPullMsgInfoReq::ArenaDtor(void* object) {
  SSG2NPullMsgInfoReq* _this = reinterpret_cast< SSG2NPullMsgInfoReq* >(object);
  (void)_this;
}
void SSG2NPullMsgInfoReq::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SSG2NPullMsgInfoReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SSG2NPullMsgInfoReq& SSG2NPullMsgInfoReq::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SSG2NPullMsgInfoReq_game_5fnode_5fmsg_2eproto.base);
  return *internal_default_instance();
}


void SSG2NPullMsgInfoReq::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.SSG2NPullMsgInfoReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&roomid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&accountid_) -
      reinterpret_cast<char*>(&roomid_)) + sizeof(accountid_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SSG2NPullMsgInfoReq::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint64 roomid = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          roomid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 accountid = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          accountid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SSG2NPullMsgInfoReq::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.SSG2NPullMsgInfoReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 roomid = 1;
  if (this->roomid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_roomid(), target);
  }

  // uint32 accountid = 2;
  if (this->accountid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_accountid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.SSG2NPullMsgInfoReq)
  return target;
}

size_t SSG2NPullMsgInfoReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.SSG2NPullMsgInfoReq)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint64 roomid = 1;
  if (this->roomid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_roomid());
  }

  // uint32 accountid = 2;
  if (this->accountid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_accountid());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SSG2NPullMsgInfoReq::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.SSG2NPullMsgInfoReq)
  GOOGLE_DCHECK_NE(&from, this);
  const SSG2NPullMsgInfoReq* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SSG2NPullMsgInfoReq>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.SSG2NPullMsgInfoReq)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.SSG2NPullMsgInfoReq)
    MergeFrom(*source);
  }
}

void SSG2NPullMsgInfoReq::MergeFrom(const SSG2NPullMsgInfoReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.SSG2NPullMsgInfoReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.roomid() != 0) {
    _internal_set_roomid(from._internal_roomid());
  }
  if (from.accountid() != 0) {
    _internal_set_accountid(from._internal_accountid());
  }
}

void SSG2NPullMsgInfoReq::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.SSG2NPullMsgInfoReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SSG2NPullMsgInfoReq::CopyFrom(const SSG2NPullMsgInfoReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.SSG2NPullMsgInfoReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SSG2NPullMsgInfoReq::IsInitialized() const {
  return true;
}

void SSG2NPullMsgInfoReq::InternalSwap(SSG2NPullMsgInfoReq* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SSG2NPullMsgInfoReq, accountid_)
      + sizeof(SSG2NPullMsgInfoReq::accountid_)
      - PROTOBUF_FIELD_OFFSET(SSG2NPullMsgInfoReq, roomid_)>(
          reinterpret_cast<char*>(&roomid_),
          reinterpret_cast<char*>(&other->roomid_));
}

::PROTOBUF_NAMESPACE_ID::Metadata SSG2NPullMsgInfoReq::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class SSN2GPullMsgInfoRsp::_Internal {
 public:
  static const ::pb::RoomInfoMsg& roommsg(const SSN2GPullMsgInfoRsp* msg);
};

const ::pb::RoomInfoMsg&
SSN2GPullMsgInfoRsp::_Internal::roommsg(const SSN2GPullMsgInfoRsp* msg) {
  return *msg->roommsg_;
}
void SSN2GPullMsgInfoRsp::clear_roommsg() {
  if (GetArena() == nullptr && roommsg_ != nullptr) {
    delete roommsg_;
  }
  roommsg_ = nullptr;
}
void SSN2GPullMsgInfoRsp::clear_userlists() {
  userlists_.Clear();
}
SSN2GPullMsgInfoRsp::SSN2GPullMsgInfoRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  userlists_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:pb.SSN2GPullMsgInfoRsp)
}
SSN2GPullMsgInfoRsp::SSN2GPullMsgInfoRsp(const SSN2GPullMsgInfoRsp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      userlists_(from.userlists_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_roommsg()) {
    roommsg_ = new ::pb::RoomInfoMsg(*from.roommsg_);
  } else {
    roommsg_ = nullptr;
  }
  ::memcpy(&retcode_, &from.retcode_,
    static_cast<size_t>(reinterpret_cast<char*>(&accountid_) -
    reinterpret_cast<char*>(&retcode_)) + sizeof(accountid_));
  // @@protoc_insertion_point(copy_constructor:pb.SSN2GPullMsgInfoRsp)
}

void SSN2GPullMsgInfoRsp::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_SSN2GPullMsgInfoRsp_game_5fnode_5fmsg_2eproto.base);
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&roommsg_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&accountid_) -
      reinterpret_cast<char*>(&roommsg_)) + sizeof(accountid_));
}

SSN2GPullMsgInfoRsp::~SSN2GPullMsgInfoRsp() {
  // @@protoc_insertion_point(destructor:pb.SSN2GPullMsgInfoRsp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SSN2GPullMsgInfoRsp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete roommsg_;
}

void SSN2GPullMsgInfoRsp::ArenaDtor(void* object) {
  SSN2GPullMsgInfoRsp* _this = reinterpret_cast< SSN2GPullMsgInfoRsp* >(object);
  (void)_this;
}
void SSN2GPullMsgInfoRsp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SSN2GPullMsgInfoRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SSN2GPullMsgInfoRsp& SSN2GPullMsgInfoRsp::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SSN2GPullMsgInfoRsp_game_5fnode_5fmsg_2eproto.base);
  return *internal_default_instance();
}


void SSN2GPullMsgInfoRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.SSN2GPullMsgInfoRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  userlists_.Clear();
  if (GetArena() == nullptr && roommsg_ != nullptr) {
    delete roommsg_;
  }
  roommsg_ = nullptr;
  ::memset(&retcode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&accountid_) -
      reinterpret_cast<char*>(&retcode_)) + sizeof(accountid_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SSN2GPullMsgInfoRsp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .pb.SSN2GPullMsgInfoRsp.RetCode retcode = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_retcode(static_cast<::pb::SSN2GPullMsgInfoRsp_RetCode>(val));
        } else goto handle_unusual;
        continue;
      // uint32 accountid = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          accountid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .pb.RoomInfoMsg roomMsg = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_roommsg(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .pb.InRoomUserInfo userlists = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_userlists(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<34>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SSN2GPullMsgInfoRsp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.SSN2GPullMsgInfoRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .pb.SSN2GPullMsgInfoRsp.RetCode retcode = 1;
  if (this->retcode() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_retcode(), target);
  }

  // uint32 accountid = 2;
  if (this->accountid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_accountid(), target);
  }

  // .pb.RoomInfoMsg roomMsg = 3;
  if (this->has_roommsg()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::roommsg(this), target, stream);
  }

  // repeated .pb.InRoomUserInfo userlists = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_userlists_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(4, this->_internal_userlists(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.SSN2GPullMsgInfoRsp)
  return target;
}

size_t SSN2GPullMsgInfoRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.SSN2GPullMsgInfoRsp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .pb.InRoomUserInfo userlists = 4;
  total_size += 1UL * this->_internal_userlists_size();
  for (const auto& msg : this->userlists_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // .pb.RoomInfoMsg roomMsg = 3;
  if (this->has_roommsg()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *roommsg_);
  }

  // .pb.SSN2GPullMsgInfoRsp.RetCode retcode = 1;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_retcode());
  }

  // uint32 accountid = 2;
  if (this->accountid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_accountid());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SSN2GPullMsgInfoRsp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.SSN2GPullMsgInfoRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const SSN2GPullMsgInfoRsp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SSN2GPullMsgInfoRsp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.SSN2GPullMsgInfoRsp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.SSN2GPullMsgInfoRsp)
    MergeFrom(*source);
  }
}

void SSN2GPullMsgInfoRsp::MergeFrom(const SSN2GPullMsgInfoRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.SSN2GPullMsgInfoRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  userlists_.MergeFrom(from.userlists_);
  if (from.has_roommsg()) {
    _internal_mutable_roommsg()->::pb::RoomInfoMsg::MergeFrom(from._internal_roommsg());
  }
  if (from.retcode() != 0) {
    _internal_set_retcode(from._internal_retcode());
  }
  if (from.accountid() != 0) {
    _internal_set_accountid(from._internal_accountid());
  }
}

void SSN2GPullMsgInfoRsp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.SSN2GPullMsgInfoRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SSN2GPullMsgInfoRsp::CopyFrom(const SSN2GPullMsgInfoRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.SSN2GPullMsgInfoRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SSN2GPullMsgInfoRsp::IsInitialized() const {
  return true;
}

void SSN2GPullMsgInfoRsp::InternalSwap(SSN2GPullMsgInfoRsp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  userlists_.InternalSwap(&other->userlists_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SSN2GPullMsgInfoRsp, accountid_)
      + sizeof(SSN2GPullMsgInfoRsp::accountid_)
      - PROTOBUF_FIELD_OFFSET(SSN2GPullMsgInfoRsp, roommsg_)>(
          reinterpret_cast<char*>(&roommsg_),
          reinterpret_cast<char*>(&other->roommsg_));
}

::PROTOBUF_NAMESPACE_ID::Metadata SSN2GPullMsgInfoRsp::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class BattleServerMsg::_Internal {
 public:
};

BattleServerMsg::BattleServerMsg(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:pb.BattleServerMsg)
}
BattleServerMsg::BattleServerMsg(const BattleServerMsg& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  addr_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_addr().empty()) {
    addr_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_addr(), 
      GetArena());
  }
  token_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_token().empty()) {
    token_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_token(), 
      GetArena());
  }
  port_ = from.port_;
  // @@protoc_insertion_point(copy_constructor:pb.BattleServerMsg)
}

void BattleServerMsg::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_BattleServerMsg_game_5fnode_5fmsg_2eproto.base);
  addr_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  token_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  port_ = 0u;
}

BattleServerMsg::~BattleServerMsg() {
  // @@protoc_insertion_point(destructor:pb.BattleServerMsg)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void BattleServerMsg::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  addr_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  token_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void BattleServerMsg::ArenaDtor(void* object) {
  BattleServerMsg* _this = reinterpret_cast< BattleServerMsg* >(object);
  (void)_this;
}
void BattleServerMsg::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void BattleServerMsg::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const BattleServerMsg& BattleServerMsg::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_BattleServerMsg_game_5fnode_5fmsg_2eproto.base);
  return *internal_default_instance();
}


void BattleServerMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.BattleServerMsg)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  addr_.ClearToEmpty();
  token_.ClearToEmpty();
  port_ = 0u;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* BattleServerMsg::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string addr = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_addr();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "pb.BattleServerMsg.addr"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 port = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          port_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string token = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_token();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "pb.BattleServerMsg.token"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* BattleServerMsg::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.BattleServerMsg)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string addr = 1;
  if (this->addr().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_addr().data(), static_cast<int>(this->_internal_addr().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "pb.BattleServerMsg.addr");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_addr(), target);
  }

  // uint32 port = 2;
  if (this->port() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_port(), target);
  }

  // string token = 3;
  if (this->token().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_token().data(), static_cast<int>(this->_internal_token().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "pb.BattleServerMsg.token");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_token(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.BattleServerMsg)
  return target;
}

size_t BattleServerMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.BattleServerMsg)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string addr = 1;
  if (this->addr().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_addr());
  }

  // string token = 3;
  if (this->token().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_token());
  }

  // uint32 port = 2;
  if (this->port() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_port());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BattleServerMsg::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.BattleServerMsg)
  GOOGLE_DCHECK_NE(&from, this);
  const BattleServerMsg* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<BattleServerMsg>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.BattleServerMsg)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.BattleServerMsg)
    MergeFrom(*source);
  }
}

void BattleServerMsg::MergeFrom(const BattleServerMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.BattleServerMsg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.addr().size() > 0) {
    _internal_set_addr(from._internal_addr());
  }
  if (from.token().size() > 0) {
    _internal_set_token(from._internal_token());
  }
  if (from.port() != 0) {
    _internal_set_port(from._internal_port());
  }
}

void BattleServerMsg::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.BattleServerMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BattleServerMsg::CopyFrom(const BattleServerMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.BattleServerMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BattleServerMsg::IsInitialized() const {
  return true;
}

void BattleServerMsg::InternalSwap(BattleServerMsg* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  addr_.Swap(&other->addr_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  token_.Swap(&other->token_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(port_, other->port_);
}

::PROTOBUF_NAMESPACE_ID::Metadata BattleServerMsg::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class SSN2GPullBattleMsgInfoRsp::_Internal {
 public:
  static const ::pb::BattleServerMsg& battleservermsg(const SSN2GPullBattleMsgInfoRsp* msg);
};

const ::pb::BattleServerMsg&
SSN2GPullBattleMsgInfoRsp::_Internal::battleservermsg(const SSN2GPullBattleMsgInfoRsp* msg) {
  return *msg->battleservermsg_;
}
SSN2GPullBattleMsgInfoRsp::SSN2GPullBattleMsgInfoRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:pb.SSN2GPullBattleMsgInfoRsp)
}
SSN2GPullBattleMsgInfoRsp::SSN2GPullBattleMsgInfoRsp(const SSN2GPullBattleMsgInfoRsp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_battleservermsg()) {
    battleservermsg_ = new ::pb::BattleServerMsg(*from.battleservermsg_);
  } else {
    battleservermsg_ = nullptr;
  }
  ::memcpy(&accountid_, &from.accountid_,
    static_cast<size_t>(reinterpret_cast<char*>(&retcode_) -
    reinterpret_cast<char*>(&accountid_)) + sizeof(retcode_));
  // @@protoc_insertion_point(copy_constructor:pb.SSN2GPullBattleMsgInfoRsp)
}

void SSN2GPullBattleMsgInfoRsp::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_SSN2GPullBattleMsgInfoRsp_game_5fnode_5fmsg_2eproto.base);
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&battleservermsg_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&retcode_) -
      reinterpret_cast<char*>(&battleservermsg_)) + sizeof(retcode_));
}

SSN2GPullBattleMsgInfoRsp::~SSN2GPullBattleMsgInfoRsp() {
  // @@protoc_insertion_point(destructor:pb.SSN2GPullBattleMsgInfoRsp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SSN2GPullBattleMsgInfoRsp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete battleservermsg_;
}

void SSN2GPullBattleMsgInfoRsp::ArenaDtor(void* object) {
  SSN2GPullBattleMsgInfoRsp* _this = reinterpret_cast< SSN2GPullBattleMsgInfoRsp* >(object);
  (void)_this;
}
void SSN2GPullBattleMsgInfoRsp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SSN2GPullBattleMsgInfoRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SSN2GPullBattleMsgInfoRsp& SSN2GPullBattleMsgInfoRsp::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SSN2GPullBattleMsgInfoRsp_game_5fnode_5fmsg_2eproto.base);
  return *internal_default_instance();
}


void SSN2GPullBattleMsgInfoRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.SSN2GPullBattleMsgInfoRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && battleservermsg_ != nullptr) {
    delete battleservermsg_;
  }
  battleservermsg_ = nullptr;
  ::memset(&accountid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&retcode_) -
      reinterpret_cast<char*>(&accountid_)) + sizeof(retcode_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SSN2GPullBattleMsgInfoRsp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .pb.SSN2GPullBattleMsgInfoRsp.RetCode retcode = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_retcode(static_cast<::pb::SSN2GPullBattleMsgInfoRsp_RetCode>(val));
        } else goto handle_unusual;
        continue;
      // uint64 accountid = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          accountid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .pb.BattleServerMsg battleServerMsg = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_battleservermsg(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SSN2GPullBattleMsgInfoRsp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.SSN2GPullBattleMsgInfoRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .pb.SSN2GPullBattleMsgInfoRsp.RetCode retcode = 1;
  if (this->retcode() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_retcode(), target);
  }

  // uint64 accountid = 2;
  if (this->accountid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(2, this->_internal_accountid(), target);
  }

  // .pb.BattleServerMsg battleServerMsg = 3;
  if (this->has_battleservermsg()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::battleservermsg(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.SSN2GPullBattleMsgInfoRsp)
  return target;
}

size_t SSN2GPullBattleMsgInfoRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.SSN2GPullBattleMsgInfoRsp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .pb.BattleServerMsg battleServerMsg = 3;
  if (this->has_battleservermsg()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *battleservermsg_);
  }

  // uint64 accountid = 2;
  if (this->accountid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_accountid());
  }

  // .pb.SSN2GPullBattleMsgInfoRsp.RetCode retcode = 1;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_retcode());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SSN2GPullBattleMsgInfoRsp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.SSN2GPullBattleMsgInfoRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const SSN2GPullBattleMsgInfoRsp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SSN2GPullBattleMsgInfoRsp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.SSN2GPullBattleMsgInfoRsp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.SSN2GPullBattleMsgInfoRsp)
    MergeFrom(*source);
  }
}

void SSN2GPullBattleMsgInfoRsp::MergeFrom(const SSN2GPullBattleMsgInfoRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.SSN2GPullBattleMsgInfoRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_battleservermsg()) {
    _internal_mutable_battleservermsg()->::pb::BattleServerMsg::MergeFrom(from._internal_battleservermsg());
  }
  if (from.accountid() != 0) {
    _internal_set_accountid(from._internal_accountid());
  }
  if (from.retcode() != 0) {
    _internal_set_retcode(from._internal_retcode());
  }
}

void SSN2GPullBattleMsgInfoRsp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.SSN2GPullBattleMsgInfoRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SSN2GPullBattleMsgInfoRsp::CopyFrom(const SSN2GPullBattleMsgInfoRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.SSN2GPullBattleMsgInfoRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SSN2GPullBattleMsgInfoRsp::IsInitialized() const {
  return true;
}

void SSN2GPullBattleMsgInfoRsp::InternalSwap(SSN2GPullBattleMsgInfoRsp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SSN2GPullBattleMsgInfoRsp, retcode_)
      + sizeof(SSN2GPullBattleMsgInfoRsp::retcode_)
      - PROTOBUF_FIELD_OFFSET(SSN2GPullBattleMsgInfoRsp, battleservermsg_)>(
          reinterpret_cast<char*>(&battleservermsg_),
          reinterpret_cast<char*>(&other->battleservermsg_));
}

::PROTOBUF_NAMESPACE_ID::Metadata SSN2GPullBattleMsgInfoRsp::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class SSG2NCreateRoomReq::_Internal {
 public:
  static const ::pb::TryCreateRoomCsReq& req(const SSG2NCreateRoomReq* msg);
};

const ::pb::TryCreateRoomCsReq&
SSG2NCreateRoomReq::_Internal::req(const SSG2NCreateRoomReq* msg) {
  return *msg->req_;
}
void SSG2NCreateRoomReq::clear_req() {
  if (GetArena() == nullptr && req_ != nullptr) {
    delete req_;
  }
  req_ = nullptr;
}
SSG2NCreateRoomReq::SSG2NCreateRoomReq(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:pb.SSG2NCreateRoomReq)
}
SSG2NCreateRoomReq::SSG2NCreateRoomReq(const SSG2NCreateRoomReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_req()) {
    req_ = new ::pb::TryCreateRoomCsReq(*from.req_);
  } else {
    req_ = nullptr;
  }
  accountid_ = from.accountid_;
  // @@protoc_insertion_point(copy_constructor:pb.SSG2NCreateRoomReq)
}

void SSG2NCreateRoomReq::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_SSG2NCreateRoomReq_game_5fnode_5fmsg_2eproto.base);
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&req_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&accountid_) -
      reinterpret_cast<char*>(&req_)) + sizeof(accountid_));
}

SSG2NCreateRoomReq::~SSG2NCreateRoomReq() {
  // @@protoc_insertion_point(destructor:pb.SSG2NCreateRoomReq)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SSG2NCreateRoomReq::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete req_;
}

void SSG2NCreateRoomReq::ArenaDtor(void* object) {
  SSG2NCreateRoomReq* _this = reinterpret_cast< SSG2NCreateRoomReq* >(object);
  (void)_this;
}
void SSG2NCreateRoomReq::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SSG2NCreateRoomReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SSG2NCreateRoomReq& SSG2NCreateRoomReq::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SSG2NCreateRoomReq_game_5fnode_5fmsg_2eproto.base);
  return *internal_default_instance();
}


void SSG2NCreateRoomReq::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.SSG2NCreateRoomReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && req_ != nullptr) {
    delete req_;
  }
  req_ = nullptr;
  accountid_ = PROTOBUF_ULONGLONG(0);
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SSG2NCreateRoomReq::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint64 accountid = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          accountid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .pb.TryCreateRoomCsReq req = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_req(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SSG2NCreateRoomReq::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.SSG2NCreateRoomReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 accountid = 1;
  if (this->accountid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_accountid(), target);
  }

  // .pb.TryCreateRoomCsReq req = 2;
  if (this->has_req()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::req(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.SSG2NCreateRoomReq)
  return target;
}

size_t SSG2NCreateRoomReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.SSG2NCreateRoomReq)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .pb.TryCreateRoomCsReq req = 2;
  if (this->has_req()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *req_);
  }

  // uint64 accountid = 1;
  if (this->accountid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_accountid());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SSG2NCreateRoomReq::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.SSG2NCreateRoomReq)
  GOOGLE_DCHECK_NE(&from, this);
  const SSG2NCreateRoomReq* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SSG2NCreateRoomReq>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.SSG2NCreateRoomReq)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.SSG2NCreateRoomReq)
    MergeFrom(*source);
  }
}

void SSG2NCreateRoomReq::MergeFrom(const SSG2NCreateRoomReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.SSG2NCreateRoomReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_req()) {
    _internal_mutable_req()->::pb::TryCreateRoomCsReq::MergeFrom(from._internal_req());
  }
  if (from.accountid() != 0) {
    _internal_set_accountid(from._internal_accountid());
  }
}

void SSG2NCreateRoomReq::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.SSG2NCreateRoomReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SSG2NCreateRoomReq::CopyFrom(const SSG2NCreateRoomReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.SSG2NCreateRoomReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SSG2NCreateRoomReq::IsInitialized() const {
  return true;
}

void SSG2NCreateRoomReq::InternalSwap(SSG2NCreateRoomReq* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SSG2NCreateRoomReq, accountid_)
      + sizeof(SSG2NCreateRoomReq::accountid_)
      - PROTOBUF_FIELD_OFFSET(SSG2NCreateRoomReq, req_)>(
          reinterpret_cast<char*>(&req_),
          reinterpret_cast<char*>(&other->req_));
}

::PROTOBUF_NAMESPACE_ID::Metadata SSG2NCreateRoomReq::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class SSN2GCreateRoomRsp::_Internal {
 public:
  static const ::pb::TryCreateRoomScRsp& rsp(const SSN2GCreateRoomRsp* msg);
};

const ::pb::TryCreateRoomScRsp&
SSN2GCreateRoomRsp::_Internal::rsp(const SSN2GCreateRoomRsp* msg) {
  return *msg->rsp_;
}
void SSN2GCreateRoomRsp::clear_rsp() {
  if (GetArena() == nullptr && rsp_ != nullptr) {
    delete rsp_;
  }
  rsp_ = nullptr;
}
SSN2GCreateRoomRsp::SSN2GCreateRoomRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:pb.SSN2GCreateRoomRsp)
}
SSN2GCreateRoomRsp::SSN2GCreateRoomRsp(const SSN2GCreateRoomRsp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_rsp()) {
    rsp_ = new ::pb::TryCreateRoomScRsp(*from.rsp_);
  } else {
    rsp_ = nullptr;
  }
  accountid_ = from.accountid_;
  // @@protoc_insertion_point(copy_constructor:pb.SSN2GCreateRoomRsp)
}

void SSN2GCreateRoomRsp::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_SSN2GCreateRoomRsp_game_5fnode_5fmsg_2eproto.base);
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&rsp_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&accountid_) -
      reinterpret_cast<char*>(&rsp_)) + sizeof(accountid_));
}

SSN2GCreateRoomRsp::~SSN2GCreateRoomRsp() {
  // @@protoc_insertion_point(destructor:pb.SSN2GCreateRoomRsp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SSN2GCreateRoomRsp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete rsp_;
}

void SSN2GCreateRoomRsp::ArenaDtor(void* object) {
  SSN2GCreateRoomRsp* _this = reinterpret_cast< SSN2GCreateRoomRsp* >(object);
  (void)_this;
}
void SSN2GCreateRoomRsp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SSN2GCreateRoomRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SSN2GCreateRoomRsp& SSN2GCreateRoomRsp::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SSN2GCreateRoomRsp_game_5fnode_5fmsg_2eproto.base);
  return *internal_default_instance();
}


void SSN2GCreateRoomRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.SSN2GCreateRoomRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && rsp_ != nullptr) {
    delete rsp_;
  }
  rsp_ = nullptr;
  accountid_ = PROTOBUF_ULONGLONG(0);
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SSN2GCreateRoomRsp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint64 accountid = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          accountid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .pb.TryCreateRoomScRsp rsp = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_rsp(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SSN2GCreateRoomRsp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.SSN2GCreateRoomRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 accountid = 1;
  if (this->accountid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_accountid(), target);
  }

  // .pb.TryCreateRoomScRsp rsp = 2;
  if (this->has_rsp()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::rsp(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.SSN2GCreateRoomRsp)
  return target;
}

size_t SSN2GCreateRoomRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.SSN2GCreateRoomRsp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .pb.TryCreateRoomScRsp rsp = 2;
  if (this->has_rsp()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *rsp_);
  }

  // uint64 accountid = 1;
  if (this->accountid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_accountid());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SSN2GCreateRoomRsp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.SSN2GCreateRoomRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const SSN2GCreateRoomRsp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SSN2GCreateRoomRsp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.SSN2GCreateRoomRsp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.SSN2GCreateRoomRsp)
    MergeFrom(*source);
  }
}

void SSN2GCreateRoomRsp::MergeFrom(const SSN2GCreateRoomRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.SSN2GCreateRoomRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_rsp()) {
    _internal_mutable_rsp()->::pb::TryCreateRoomScRsp::MergeFrom(from._internal_rsp());
  }
  if (from.accountid() != 0) {
    _internal_set_accountid(from._internal_accountid());
  }
}

void SSN2GCreateRoomRsp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.SSN2GCreateRoomRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SSN2GCreateRoomRsp::CopyFrom(const SSN2GCreateRoomRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.SSN2GCreateRoomRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SSN2GCreateRoomRsp::IsInitialized() const {
  return true;
}

void SSN2GCreateRoomRsp::InternalSwap(SSN2GCreateRoomRsp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SSN2GCreateRoomRsp, accountid_)
      + sizeof(SSN2GCreateRoomRsp::accountid_)
      - PROTOBUF_FIELD_OFFSET(SSN2GCreateRoomRsp, rsp_)>(
          reinterpret_cast<char*>(&rsp_),
          reinterpret_cast<char*>(&other->rsp_));
}

::PROTOBUF_NAMESPACE_ID::Metadata SSN2GCreateRoomRsp::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class SSG2NEnterRoomReq::_Internal {
 public:
  static const ::pb::TryEnterRoomCsReq& req(const SSG2NEnterRoomReq* msg);
};

const ::pb::TryEnterRoomCsReq&
SSG2NEnterRoomReq::_Internal::req(const SSG2NEnterRoomReq* msg) {
  return *msg->req_;
}
void SSG2NEnterRoomReq::clear_req() {
  if (GetArena() == nullptr && req_ != nullptr) {
    delete req_;
  }
  req_ = nullptr;
}
SSG2NEnterRoomReq::SSG2NEnterRoomReq(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:pb.SSG2NEnterRoomReq)
}
SSG2NEnterRoomReq::SSG2NEnterRoomReq(const SSG2NEnterRoomReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_req()) {
    req_ = new ::pb::TryEnterRoomCsReq(*from.req_);
  } else {
    req_ = nullptr;
  }
  ::memcpy(&accountid_, &from.accountid_,
    static_cast<size_t>(reinterpret_cast<char*>(&roomid_) -
    reinterpret_cast<char*>(&accountid_)) + sizeof(roomid_));
  // @@protoc_insertion_point(copy_constructor:pb.SSG2NEnterRoomReq)
}

void SSG2NEnterRoomReq::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_SSG2NEnterRoomReq_game_5fnode_5fmsg_2eproto.base);
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&req_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&roomid_) -
      reinterpret_cast<char*>(&req_)) + sizeof(roomid_));
}

SSG2NEnterRoomReq::~SSG2NEnterRoomReq() {
  // @@protoc_insertion_point(destructor:pb.SSG2NEnterRoomReq)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SSG2NEnterRoomReq::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete req_;
}

void SSG2NEnterRoomReq::ArenaDtor(void* object) {
  SSG2NEnterRoomReq* _this = reinterpret_cast< SSG2NEnterRoomReq* >(object);
  (void)_this;
}
void SSG2NEnterRoomReq::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SSG2NEnterRoomReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SSG2NEnterRoomReq& SSG2NEnterRoomReq::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SSG2NEnterRoomReq_game_5fnode_5fmsg_2eproto.base);
  return *internal_default_instance();
}


void SSG2NEnterRoomReq::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.SSG2NEnterRoomReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && req_ != nullptr) {
    delete req_;
  }
  req_ = nullptr;
  ::memset(&accountid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&roomid_) -
      reinterpret_cast<char*>(&accountid_)) + sizeof(roomid_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SSG2NEnterRoomReq::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint64 accountid = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          accountid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint64 RoomID = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          roomid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .pb.TryEnterRoomCsReq req = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_req(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SSG2NEnterRoomReq::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.SSG2NEnterRoomReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 accountid = 1;
  if (this->accountid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_accountid(), target);
  }

  // uint64 RoomID = 2;
  if (this->roomid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(2, this->_internal_roomid(), target);
  }

  // .pb.TryEnterRoomCsReq req = 3;
  if (this->has_req()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::req(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.SSG2NEnterRoomReq)
  return target;
}

size_t SSG2NEnterRoomReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.SSG2NEnterRoomReq)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .pb.TryEnterRoomCsReq req = 3;
  if (this->has_req()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *req_);
  }

  // uint64 accountid = 1;
  if (this->accountid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_accountid());
  }

  // uint64 RoomID = 2;
  if (this->roomid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_roomid());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SSG2NEnterRoomReq::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.SSG2NEnterRoomReq)
  GOOGLE_DCHECK_NE(&from, this);
  const SSG2NEnterRoomReq* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SSG2NEnterRoomReq>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.SSG2NEnterRoomReq)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.SSG2NEnterRoomReq)
    MergeFrom(*source);
  }
}

void SSG2NEnterRoomReq::MergeFrom(const SSG2NEnterRoomReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.SSG2NEnterRoomReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_req()) {
    _internal_mutable_req()->::pb::TryEnterRoomCsReq::MergeFrom(from._internal_req());
  }
  if (from.accountid() != 0) {
    _internal_set_accountid(from._internal_accountid());
  }
  if (from.roomid() != 0) {
    _internal_set_roomid(from._internal_roomid());
  }
}

void SSG2NEnterRoomReq::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.SSG2NEnterRoomReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SSG2NEnterRoomReq::CopyFrom(const SSG2NEnterRoomReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.SSG2NEnterRoomReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SSG2NEnterRoomReq::IsInitialized() const {
  return true;
}

void SSG2NEnterRoomReq::InternalSwap(SSG2NEnterRoomReq* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SSG2NEnterRoomReq, roomid_)
      + sizeof(SSG2NEnterRoomReq::roomid_)
      - PROTOBUF_FIELD_OFFSET(SSG2NEnterRoomReq, req_)>(
          reinterpret_cast<char*>(&req_),
          reinterpret_cast<char*>(&other->req_));
}

::PROTOBUF_NAMESPACE_ID::Metadata SSG2NEnterRoomReq::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class SSN2GEnterRoomRsp::_Internal {
 public:
  static const ::pb::TryEnterRoomScRsp& rsp(const SSN2GEnterRoomRsp* msg);
};

const ::pb::TryEnterRoomScRsp&
SSN2GEnterRoomRsp::_Internal::rsp(const SSN2GEnterRoomRsp* msg) {
  return *msg->rsp_;
}
void SSN2GEnterRoomRsp::clear_rsp() {
  if (GetArena() == nullptr && rsp_ != nullptr) {
    delete rsp_;
  }
  rsp_ = nullptr;
}
SSN2GEnterRoomRsp::SSN2GEnterRoomRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:pb.SSN2GEnterRoomRsp)
}
SSN2GEnterRoomRsp::SSN2GEnterRoomRsp(const SSN2GEnterRoomRsp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_rsp()) {
    rsp_ = new ::pb::TryEnterRoomScRsp(*from.rsp_);
  } else {
    rsp_ = nullptr;
  }
  accountid_ = from.accountid_;
  // @@protoc_insertion_point(copy_constructor:pb.SSN2GEnterRoomRsp)
}

void SSN2GEnterRoomRsp::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_SSN2GEnterRoomRsp_game_5fnode_5fmsg_2eproto.base);
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&rsp_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&accountid_) -
      reinterpret_cast<char*>(&rsp_)) + sizeof(accountid_));
}

SSN2GEnterRoomRsp::~SSN2GEnterRoomRsp() {
  // @@protoc_insertion_point(destructor:pb.SSN2GEnterRoomRsp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SSN2GEnterRoomRsp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete rsp_;
}

void SSN2GEnterRoomRsp::ArenaDtor(void* object) {
  SSN2GEnterRoomRsp* _this = reinterpret_cast< SSN2GEnterRoomRsp* >(object);
  (void)_this;
}
void SSN2GEnterRoomRsp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SSN2GEnterRoomRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SSN2GEnterRoomRsp& SSN2GEnterRoomRsp::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SSN2GEnterRoomRsp_game_5fnode_5fmsg_2eproto.base);
  return *internal_default_instance();
}


void SSN2GEnterRoomRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.SSN2GEnterRoomRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && rsp_ != nullptr) {
    delete rsp_;
  }
  rsp_ = nullptr;
  accountid_ = PROTOBUF_ULONGLONG(0);
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SSN2GEnterRoomRsp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint64 accountid = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          accountid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .pb.TryEnterRoomScRsp rsp = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_rsp(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SSN2GEnterRoomRsp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.SSN2GEnterRoomRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 accountid = 1;
  if (this->accountid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_accountid(), target);
  }

  // .pb.TryEnterRoomScRsp rsp = 2;
  if (this->has_rsp()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::rsp(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.SSN2GEnterRoomRsp)
  return target;
}

size_t SSN2GEnterRoomRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.SSN2GEnterRoomRsp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .pb.TryEnterRoomScRsp rsp = 2;
  if (this->has_rsp()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *rsp_);
  }

  // uint64 accountid = 1;
  if (this->accountid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_accountid());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SSN2GEnterRoomRsp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.SSN2GEnterRoomRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const SSN2GEnterRoomRsp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SSN2GEnterRoomRsp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.SSN2GEnterRoomRsp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.SSN2GEnterRoomRsp)
    MergeFrom(*source);
  }
}

void SSN2GEnterRoomRsp::MergeFrom(const SSN2GEnterRoomRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.SSN2GEnterRoomRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_rsp()) {
    _internal_mutable_rsp()->::pb::TryEnterRoomScRsp::MergeFrom(from._internal_rsp());
  }
  if (from.accountid() != 0) {
    _internal_set_accountid(from._internal_accountid());
  }
}

void SSN2GEnterRoomRsp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.SSN2GEnterRoomRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SSN2GEnterRoomRsp::CopyFrom(const SSN2GEnterRoomRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.SSN2GEnterRoomRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SSN2GEnterRoomRsp::IsInitialized() const {
  return true;
}

void SSN2GEnterRoomRsp::InternalSwap(SSN2GEnterRoomRsp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SSN2GEnterRoomRsp, accountid_)
      + sizeof(SSN2GEnterRoomRsp::accountid_)
      - PROTOBUF_FIELD_OFFSET(SSN2GEnterRoomRsp, rsp_)>(
          reinterpret_cast<char*>(&rsp_),
          reinterpret_cast<char*>(&other->rsp_));
}

::PROTOBUF_NAMESPACE_ID::Metadata SSN2GEnterRoomRsp::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class SSG2NLeaveRoomReq::_Internal {
 public:
  static const ::pb::TryLeaveRoomCsReq& req(const SSG2NLeaveRoomReq* msg);
};

const ::pb::TryLeaveRoomCsReq&
SSG2NLeaveRoomReq::_Internal::req(const SSG2NLeaveRoomReq* msg) {
  return *msg->req_;
}
void SSG2NLeaveRoomReq::clear_req() {
  if (GetArena() == nullptr && req_ != nullptr) {
    delete req_;
  }
  req_ = nullptr;
}
SSG2NLeaveRoomReq::SSG2NLeaveRoomReq(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:pb.SSG2NLeaveRoomReq)
}
SSG2NLeaveRoomReq::SSG2NLeaveRoomReq(const SSG2NLeaveRoomReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_req()) {
    req_ = new ::pb::TryLeaveRoomCsReq(*from.req_);
  } else {
    req_ = nullptr;
  }
  ::memcpy(&accountid_, &from.accountid_,
    static_cast<size_t>(reinterpret_cast<char*>(&roomid_) -
    reinterpret_cast<char*>(&accountid_)) + sizeof(roomid_));
  // @@protoc_insertion_point(copy_constructor:pb.SSG2NLeaveRoomReq)
}

void SSG2NLeaveRoomReq::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_SSG2NLeaveRoomReq_game_5fnode_5fmsg_2eproto.base);
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&req_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&roomid_) -
      reinterpret_cast<char*>(&req_)) + sizeof(roomid_));
}

SSG2NLeaveRoomReq::~SSG2NLeaveRoomReq() {
  // @@protoc_insertion_point(destructor:pb.SSG2NLeaveRoomReq)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SSG2NLeaveRoomReq::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete req_;
}

void SSG2NLeaveRoomReq::ArenaDtor(void* object) {
  SSG2NLeaveRoomReq* _this = reinterpret_cast< SSG2NLeaveRoomReq* >(object);
  (void)_this;
}
void SSG2NLeaveRoomReq::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SSG2NLeaveRoomReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SSG2NLeaveRoomReq& SSG2NLeaveRoomReq::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SSG2NLeaveRoomReq_game_5fnode_5fmsg_2eproto.base);
  return *internal_default_instance();
}


void SSG2NLeaveRoomReq::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.SSG2NLeaveRoomReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && req_ != nullptr) {
    delete req_;
  }
  req_ = nullptr;
  ::memset(&accountid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&roomid_) -
      reinterpret_cast<char*>(&accountid_)) + sizeof(roomid_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SSG2NLeaveRoomReq::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint64 accountid = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          accountid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint64 RoomID = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          roomid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .pb.TryLeaveRoomCsReq req = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_req(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SSG2NLeaveRoomReq::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.SSG2NLeaveRoomReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 accountid = 1;
  if (this->accountid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_accountid(), target);
  }

  // uint64 RoomID = 2;
  if (this->roomid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(2, this->_internal_roomid(), target);
  }

  // .pb.TryLeaveRoomCsReq req = 3;
  if (this->has_req()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::req(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.SSG2NLeaveRoomReq)
  return target;
}

size_t SSG2NLeaveRoomReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.SSG2NLeaveRoomReq)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .pb.TryLeaveRoomCsReq req = 3;
  if (this->has_req()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *req_);
  }

  // uint64 accountid = 1;
  if (this->accountid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_accountid());
  }

  // uint64 RoomID = 2;
  if (this->roomid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_roomid());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SSG2NLeaveRoomReq::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.SSG2NLeaveRoomReq)
  GOOGLE_DCHECK_NE(&from, this);
  const SSG2NLeaveRoomReq* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SSG2NLeaveRoomReq>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.SSG2NLeaveRoomReq)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.SSG2NLeaveRoomReq)
    MergeFrom(*source);
  }
}

void SSG2NLeaveRoomReq::MergeFrom(const SSG2NLeaveRoomReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.SSG2NLeaveRoomReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_req()) {
    _internal_mutable_req()->::pb::TryLeaveRoomCsReq::MergeFrom(from._internal_req());
  }
  if (from.accountid() != 0) {
    _internal_set_accountid(from._internal_accountid());
  }
  if (from.roomid() != 0) {
    _internal_set_roomid(from._internal_roomid());
  }
}

void SSG2NLeaveRoomReq::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.SSG2NLeaveRoomReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SSG2NLeaveRoomReq::CopyFrom(const SSG2NLeaveRoomReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.SSG2NLeaveRoomReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SSG2NLeaveRoomReq::IsInitialized() const {
  return true;
}

void SSG2NLeaveRoomReq::InternalSwap(SSG2NLeaveRoomReq* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SSG2NLeaveRoomReq, roomid_)
      + sizeof(SSG2NLeaveRoomReq::roomid_)
      - PROTOBUF_FIELD_OFFSET(SSG2NLeaveRoomReq, req_)>(
          reinterpret_cast<char*>(&req_),
          reinterpret_cast<char*>(&other->req_));
}

::PROTOBUF_NAMESPACE_ID::Metadata SSG2NLeaveRoomReq::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class SSN2GLeaveRoomRsp::_Internal {
 public:
  static const ::pb::TryLeaveRoomScRsp& rsp(const SSN2GLeaveRoomRsp* msg);
};

const ::pb::TryLeaveRoomScRsp&
SSN2GLeaveRoomRsp::_Internal::rsp(const SSN2GLeaveRoomRsp* msg) {
  return *msg->rsp_;
}
void SSN2GLeaveRoomRsp::clear_rsp() {
  if (GetArena() == nullptr && rsp_ != nullptr) {
    delete rsp_;
  }
  rsp_ = nullptr;
}
SSN2GLeaveRoomRsp::SSN2GLeaveRoomRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:pb.SSN2GLeaveRoomRsp)
}
SSN2GLeaveRoomRsp::SSN2GLeaveRoomRsp(const SSN2GLeaveRoomRsp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_rsp()) {
    rsp_ = new ::pb::TryLeaveRoomScRsp(*from.rsp_);
  } else {
    rsp_ = nullptr;
  }
  accountid_ = from.accountid_;
  // @@protoc_insertion_point(copy_constructor:pb.SSN2GLeaveRoomRsp)
}

void SSN2GLeaveRoomRsp::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_SSN2GLeaveRoomRsp_game_5fnode_5fmsg_2eproto.base);
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&rsp_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&accountid_) -
      reinterpret_cast<char*>(&rsp_)) + sizeof(accountid_));
}

SSN2GLeaveRoomRsp::~SSN2GLeaveRoomRsp() {
  // @@protoc_insertion_point(destructor:pb.SSN2GLeaveRoomRsp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SSN2GLeaveRoomRsp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete rsp_;
}

void SSN2GLeaveRoomRsp::ArenaDtor(void* object) {
  SSN2GLeaveRoomRsp* _this = reinterpret_cast< SSN2GLeaveRoomRsp* >(object);
  (void)_this;
}
void SSN2GLeaveRoomRsp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SSN2GLeaveRoomRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SSN2GLeaveRoomRsp& SSN2GLeaveRoomRsp::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SSN2GLeaveRoomRsp_game_5fnode_5fmsg_2eproto.base);
  return *internal_default_instance();
}


void SSN2GLeaveRoomRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.SSN2GLeaveRoomRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && rsp_ != nullptr) {
    delete rsp_;
  }
  rsp_ = nullptr;
  accountid_ = PROTOBUF_ULONGLONG(0);
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SSN2GLeaveRoomRsp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint64 accountid = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          accountid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .pb.TryLeaveRoomScRsp rsp = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_rsp(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SSN2GLeaveRoomRsp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.SSN2GLeaveRoomRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 accountid = 1;
  if (this->accountid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_accountid(), target);
  }

  // .pb.TryLeaveRoomScRsp rsp = 2;
  if (this->has_rsp()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::rsp(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.SSN2GLeaveRoomRsp)
  return target;
}

size_t SSN2GLeaveRoomRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.SSN2GLeaveRoomRsp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .pb.TryLeaveRoomScRsp rsp = 2;
  if (this->has_rsp()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *rsp_);
  }

  // uint64 accountid = 1;
  if (this->accountid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_accountid());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SSN2GLeaveRoomRsp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.SSN2GLeaveRoomRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const SSN2GLeaveRoomRsp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SSN2GLeaveRoomRsp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.SSN2GLeaveRoomRsp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.SSN2GLeaveRoomRsp)
    MergeFrom(*source);
  }
}

void SSN2GLeaveRoomRsp::MergeFrom(const SSN2GLeaveRoomRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.SSN2GLeaveRoomRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_rsp()) {
    _internal_mutable_rsp()->::pb::TryLeaveRoomScRsp::MergeFrom(from._internal_rsp());
  }
  if (from.accountid() != 0) {
    _internal_set_accountid(from._internal_accountid());
  }
}

void SSN2GLeaveRoomRsp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.SSN2GLeaveRoomRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SSN2GLeaveRoomRsp::CopyFrom(const SSN2GLeaveRoomRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.SSN2GLeaveRoomRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SSN2GLeaveRoomRsp::IsInitialized() const {
  return true;
}

void SSN2GLeaveRoomRsp::InternalSwap(SSN2GLeaveRoomRsp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SSN2GLeaveRoomRsp, accountid_)
      + sizeof(SSN2GLeaveRoomRsp::accountid_)
      - PROTOBUF_FIELD_OFFSET(SSN2GLeaveRoomRsp, rsp_)>(
          reinterpret_cast<char*>(&rsp_),
          reinterpret_cast<char*>(&other->rsp_));
}

::PROTOBUF_NAMESPACE_ID::Metadata SSN2GLeaveRoomRsp::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class SSG2NChooseLevelReq::_Internal {
 public:
  static const ::pb::ChooseLevelCsReq& req(const SSG2NChooseLevelReq* msg);
};

const ::pb::ChooseLevelCsReq&
SSG2NChooseLevelReq::_Internal::req(const SSG2NChooseLevelReq* msg) {
  return *msg->req_;
}
void SSG2NChooseLevelReq::clear_req() {
  if (GetArena() == nullptr && req_ != nullptr) {
    delete req_;
  }
  req_ = nullptr;
}
SSG2NChooseLevelReq::SSG2NChooseLevelReq(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:pb.SSG2NChooseLevelReq)
}
SSG2NChooseLevelReq::SSG2NChooseLevelReq(const SSG2NChooseLevelReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_req()) {
    req_ = new ::pb::ChooseLevelCsReq(*from.req_);
  } else {
    req_ = nullptr;
  }
  ::memcpy(&accountid_, &from.accountid_,
    static_cast<size_t>(reinterpret_cast<char*>(&roomid_) -
    reinterpret_cast<char*>(&accountid_)) + sizeof(roomid_));
  // @@protoc_insertion_point(copy_constructor:pb.SSG2NChooseLevelReq)
}

void SSG2NChooseLevelReq::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_SSG2NChooseLevelReq_game_5fnode_5fmsg_2eproto.base);
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&req_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&roomid_) -
      reinterpret_cast<char*>(&req_)) + sizeof(roomid_));
}

SSG2NChooseLevelReq::~SSG2NChooseLevelReq() {
  // @@protoc_insertion_point(destructor:pb.SSG2NChooseLevelReq)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SSG2NChooseLevelReq::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete req_;
}

void SSG2NChooseLevelReq::ArenaDtor(void* object) {
  SSG2NChooseLevelReq* _this = reinterpret_cast< SSG2NChooseLevelReq* >(object);
  (void)_this;
}
void SSG2NChooseLevelReq::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SSG2NChooseLevelReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SSG2NChooseLevelReq& SSG2NChooseLevelReq::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SSG2NChooseLevelReq_game_5fnode_5fmsg_2eproto.base);
  return *internal_default_instance();
}


void SSG2NChooseLevelReq::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.SSG2NChooseLevelReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && req_ != nullptr) {
    delete req_;
  }
  req_ = nullptr;
  ::memset(&accountid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&roomid_) -
      reinterpret_cast<char*>(&accountid_)) + sizeof(roomid_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SSG2NChooseLevelReq::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint64 accountid = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          accountid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint64 RoomID = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          roomid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .pb.ChooseLevelCsReq req = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_req(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SSG2NChooseLevelReq::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.SSG2NChooseLevelReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 accountid = 1;
  if (this->accountid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_accountid(), target);
  }

  // uint64 RoomID = 2;
  if (this->roomid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(2, this->_internal_roomid(), target);
  }

  // .pb.ChooseLevelCsReq req = 3;
  if (this->has_req()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::req(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.SSG2NChooseLevelReq)
  return target;
}

size_t SSG2NChooseLevelReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.SSG2NChooseLevelReq)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .pb.ChooseLevelCsReq req = 3;
  if (this->has_req()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *req_);
  }

  // uint64 accountid = 1;
  if (this->accountid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_accountid());
  }

  // uint64 RoomID = 2;
  if (this->roomid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_roomid());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SSG2NChooseLevelReq::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.SSG2NChooseLevelReq)
  GOOGLE_DCHECK_NE(&from, this);
  const SSG2NChooseLevelReq* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SSG2NChooseLevelReq>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.SSG2NChooseLevelReq)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.SSG2NChooseLevelReq)
    MergeFrom(*source);
  }
}

void SSG2NChooseLevelReq::MergeFrom(const SSG2NChooseLevelReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.SSG2NChooseLevelReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_req()) {
    _internal_mutable_req()->::pb::ChooseLevelCsReq::MergeFrom(from._internal_req());
  }
  if (from.accountid() != 0) {
    _internal_set_accountid(from._internal_accountid());
  }
  if (from.roomid() != 0) {
    _internal_set_roomid(from._internal_roomid());
  }
}

void SSG2NChooseLevelReq::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.SSG2NChooseLevelReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SSG2NChooseLevelReq::CopyFrom(const SSG2NChooseLevelReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.SSG2NChooseLevelReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SSG2NChooseLevelReq::IsInitialized() const {
  return true;
}

void SSG2NChooseLevelReq::InternalSwap(SSG2NChooseLevelReq* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SSG2NChooseLevelReq, roomid_)
      + sizeof(SSG2NChooseLevelReq::roomid_)
      - PROTOBUF_FIELD_OFFSET(SSG2NChooseLevelReq, req_)>(
          reinterpret_cast<char*>(&req_),
          reinterpret_cast<char*>(&other->req_));
}

::PROTOBUF_NAMESPACE_ID::Metadata SSG2NChooseLevelReq::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class SSN2GChooseLevelRsp::_Internal {
 public:
  static const ::pb::ChooseLevelScRsp& rsp(const SSN2GChooseLevelRsp* msg);
};

const ::pb::ChooseLevelScRsp&
SSN2GChooseLevelRsp::_Internal::rsp(const SSN2GChooseLevelRsp* msg) {
  return *msg->rsp_;
}
void SSN2GChooseLevelRsp::clear_rsp() {
  if (GetArena() == nullptr && rsp_ != nullptr) {
    delete rsp_;
  }
  rsp_ = nullptr;
}
SSN2GChooseLevelRsp::SSN2GChooseLevelRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:pb.SSN2GChooseLevelRsp)
}
SSN2GChooseLevelRsp::SSN2GChooseLevelRsp(const SSN2GChooseLevelRsp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_rsp()) {
    rsp_ = new ::pb::ChooseLevelScRsp(*from.rsp_);
  } else {
    rsp_ = nullptr;
  }
  accountid_ = from.accountid_;
  // @@protoc_insertion_point(copy_constructor:pb.SSN2GChooseLevelRsp)
}

void SSN2GChooseLevelRsp::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_SSN2GChooseLevelRsp_game_5fnode_5fmsg_2eproto.base);
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&rsp_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&accountid_) -
      reinterpret_cast<char*>(&rsp_)) + sizeof(accountid_));
}

SSN2GChooseLevelRsp::~SSN2GChooseLevelRsp() {
  // @@protoc_insertion_point(destructor:pb.SSN2GChooseLevelRsp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SSN2GChooseLevelRsp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete rsp_;
}

void SSN2GChooseLevelRsp::ArenaDtor(void* object) {
  SSN2GChooseLevelRsp* _this = reinterpret_cast< SSN2GChooseLevelRsp* >(object);
  (void)_this;
}
void SSN2GChooseLevelRsp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SSN2GChooseLevelRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SSN2GChooseLevelRsp& SSN2GChooseLevelRsp::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SSN2GChooseLevelRsp_game_5fnode_5fmsg_2eproto.base);
  return *internal_default_instance();
}


void SSN2GChooseLevelRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.SSN2GChooseLevelRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && rsp_ != nullptr) {
    delete rsp_;
  }
  rsp_ = nullptr;
  accountid_ = 0u;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SSN2GChooseLevelRsp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint32 accountid = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          accountid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .pb.ChooseLevelScRsp rsp = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_rsp(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SSN2GChooseLevelRsp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.SSN2GChooseLevelRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 accountid = 1;
  if (this->accountid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_accountid(), target);
  }

  // .pb.ChooseLevelScRsp rsp = 2;
  if (this->has_rsp()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::rsp(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.SSN2GChooseLevelRsp)
  return target;
}

size_t SSN2GChooseLevelRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.SSN2GChooseLevelRsp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .pb.ChooseLevelScRsp rsp = 2;
  if (this->has_rsp()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *rsp_);
  }

  // uint32 accountid = 1;
  if (this->accountid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_accountid());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SSN2GChooseLevelRsp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.SSN2GChooseLevelRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const SSN2GChooseLevelRsp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SSN2GChooseLevelRsp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.SSN2GChooseLevelRsp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.SSN2GChooseLevelRsp)
    MergeFrom(*source);
  }
}

void SSN2GChooseLevelRsp::MergeFrom(const SSN2GChooseLevelRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.SSN2GChooseLevelRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_rsp()) {
    _internal_mutable_rsp()->::pb::ChooseLevelScRsp::MergeFrom(from._internal_rsp());
  }
  if (from.accountid() != 0) {
    _internal_set_accountid(from._internal_accountid());
  }
}

void SSN2GChooseLevelRsp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.SSN2GChooseLevelRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SSN2GChooseLevelRsp::CopyFrom(const SSN2GChooseLevelRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.SSN2GChooseLevelRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SSN2GChooseLevelRsp::IsInitialized() const {
  return true;
}

void SSN2GChooseLevelRsp::InternalSwap(SSN2GChooseLevelRsp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SSN2GChooseLevelRsp, accountid_)
      + sizeof(SSN2GChooseLevelRsp::accountid_)
      - PROTOBUF_FIELD_OFFSET(SSN2GChooseLevelRsp, rsp_)>(
          reinterpret_cast<char*>(&rsp_),
          reinterpret_cast<char*>(&other->rsp_));
}

::PROTOBUF_NAMESPACE_ID::Metadata SSN2GChooseLevelRsp::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class SSG2NReadyInRoomReq::_Internal {
 public:
  static const ::pb::ReadyInRoomCsReq& req(const SSG2NReadyInRoomReq* msg);
};

const ::pb::ReadyInRoomCsReq&
SSG2NReadyInRoomReq::_Internal::req(const SSG2NReadyInRoomReq* msg) {
  return *msg->req_;
}
void SSG2NReadyInRoomReq::clear_req() {
  if (GetArena() == nullptr && req_ != nullptr) {
    delete req_;
  }
  req_ = nullptr;
}
SSG2NReadyInRoomReq::SSG2NReadyInRoomReq(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:pb.SSG2NReadyInRoomReq)
}
SSG2NReadyInRoomReq::SSG2NReadyInRoomReq(const SSG2NReadyInRoomReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_req()) {
    req_ = new ::pb::ReadyInRoomCsReq(*from.req_);
  } else {
    req_ = nullptr;
  }
  ::memcpy(&accountid_, &from.accountid_,
    static_cast<size_t>(reinterpret_cast<char*>(&roomid_) -
    reinterpret_cast<char*>(&accountid_)) + sizeof(roomid_));
  // @@protoc_insertion_point(copy_constructor:pb.SSG2NReadyInRoomReq)
}

void SSG2NReadyInRoomReq::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_SSG2NReadyInRoomReq_game_5fnode_5fmsg_2eproto.base);
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&req_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&roomid_) -
      reinterpret_cast<char*>(&req_)) + sizeof(roomid_));
}

SSG2NReadyInRoomReq::~SSG2NReadyInRoomReq() {
  // @@protoc_insertion_point(destructor:pb.SSG2NReadyInRoomReq)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SSG2NReadyInRoomReq::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete req_;
}

void SSG2NReadyInRoomReq::ArenaDtor(void* object) {
  SSG2NReadyInRoomReq* _this = reinterpret_cast< SSG2NReadyInRoomReq* >(object);
  (void)_this;
}
void SSG2NReadyInRoomReq::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SSG2NReadyInRoomReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SSG2NReadyInRoomReq& SSG2NReadyInRoomReq::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SSG2NReadyInRoomReq_game_5fnode_5fmsg_2eproto.base);
  return *internal_default_instance();
}


void SSG2NReadyInRoomReq::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.SSG2NReadyInRoomReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && req_ != nullptr) {
    delete req_;
  }
  req_ = nullptr;
  ::memset(&accountid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&roomid_) -
      reinterpret_cast<char*>(&accountid_)) + sizeof(roomid_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SSG2NReadyInRoomReq::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint64 accountid = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          accountid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint64 RoomID = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          roomid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .pb.ReadyInRoomCsReq req = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_req(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SSG2NReadyInRoomReq::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.SSG2NReadyInRoomReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 accountid = 1;
  if (this->accountid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_accountid(), target);
  }

  // uint64 RoomID = 2;
  if (this->roomid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(2, this->_internal_roomid(), target);
  }

  // .pb.ReadyInRoomCsReq req = 3;
  if (this->has_req()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::req(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.SSG2NReadyInRoomReq)
  return target;
}

size_t SSG2NReadyInRoomReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.SSG2NReadyInRoomReq)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .pb.ReadyInRoomCsReq req = 3;
  if (this->has_req()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *req_);
  }

  // uint64 accountid = 1;
  if (this->accountid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_accountid());
  }

  // uint64 RoomID = 2;
  if (this->roomid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_roomid());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SSG2NReadyInRoomReq::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.SSG2NReadyInRoomReq)
  GOOGLE_DCHECK_NE(&from, this);
  const SSG2NReadyInRoomReq* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SSG2NReadyInRoomReq>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.SSG2NReadyInRoomReq)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.SSG2NReadyInRoomReq)
    MergeFrom(*source);
  }
}

void SSG2NReadyInRoomReq::MergeFrom(const SSG2NReadyInRoomReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.SSG2NReadyInRoomReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_req()) {
    _internal_mutable_req()->::pb::ReadyInRoomCsReq::MergeFrom(from._internal_req());
  }
  if (from.accountid() != 0) {
    _internal_set_accountid(from._internal_accountid());
  }
  if (from.roomid() != 0) {
    _internal_set_roomid(from._internal_roomid());
  }
}

void SSG2NReadyInRoomReq::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.SSG2NReadyInRoomReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SSG2NReadyInRoomReq::CopyFrom(const SSG2NReadyInRoomReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.SSG2NReadyInRoomReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SSG2NReadyInRoomReq::IsInitialized() const {
  return true;
}

void SSG2NReadyInRoomReq::InternalSwap(SSG2NReadyInRoomReq* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SSG2NReadyInRoomReq, roomid_)
      + sizeof(SSG2NReadyInRoomReq::roomid_)
      - PROTOBUF_FIELD_OFFSET(SSG2NReadyInRoomReq, req_)>(
          reinterpret_cast<char*>(&req_),
          reinterpret_cast<char*>(&other->req_));
}

::PROTOBUF_NAMESPACE_ID::Metadata SSG2NReadyInRoomReq::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class SSN2GReadyInRoomRsp::_Internal {
 public:
  static const ::pb::ReadyInRoomScRsp& rsp(const SSN2GReadyInRoomRsp* msg);
};

const ::pb::ReadyInRoomScRsp&
SSN2GReadyInRoomRsp::_Internal::rsp(const SSN2GReadyInRoomRsp* msg) {
  return *msg->rsp_;
}
void SSN2GReadyInRoomRsp::clear_rsp() {
  if (GetArena() == nullptr && rsp_ != nullptr) {
    delete rsp_;
  }
  rsp_ = nullptr;
}
SSN2GReadyInRoomRsp::SSN2GReadyInRoomRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:pb.SSN2GReadyInRoomRsp)
}
SSN2GReadyInRoomRsp::SSN2GReadyInRoomRsp(const SSN2GReadyInRoomRsp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_rsp()) {
    rsp_ = new ::pb::ReadyInRoomScRsp(*from.rsp_);
  } else {
    rsp_ = nullptr;
  }
  accountid_ = from.accountid_;
  // @@protoc_insertion_point(copy_constructor:pb.SSN2GReadyInRoomRsp)
}

void SSN2GReadyInRoomRsp::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_SSN2GReadyInRoomRsp_game_5fnode_5fmsg_2eproto.base);
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&rsp_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&accountid_) -
      reinterpret_cast<char*>(&rsp_)) + sizeof(accountid_));
}

SSN2GReadyInRoomRsp::~SSN2GReadyInRoomRsp() {
  // @@protoc_insertion_point(destructor:pb.SSN2GReadyInRoomRsp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SSN2GReadyInRoomRsp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete rsp_;
}

void SSN2GReadyInRoomRsp::ArenaDtor(void* object) {
  SSN2GReadyInRoomRsp* _this = reinterpret_cast< SSN2GReadyInRoomRsp* >(object);
  (void)_this;
}
void SSN2GReadyInRoomRsp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SSN2GReadyInRoomRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SSN2GReadyInRoomRsp& SSN2GReadyInRoomRsp::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SSN2GReadyInRoomRsp_game_5fnode_5fmsg_2eproto.base);
  return *internal_default_instance();
}


void SSN2GReadyInRoomRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.SSN2GReadyInRoomRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && rsp_ != nullptr) {
    delete rsp_;
  }
  rsp_ = nullptr;
  accountid_ = PROTOBUF_ULONGLONG(0);
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SSN2GReadyInRoomRsp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint64 accountid = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          accountid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .pb.ReadyInRoomScRsp rsp = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_rsp(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SSN2GReadyInRoomRsp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.SSN2GReadyInRoomRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 accountid = 1;
  if (this->accountid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_accountid(), target);
  }

  // .pb.ReadyInRoomScRsp rsp = 2;
  if (this->has_rsp()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::rsp(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.SSN2GReadyInRoomRsp)
  return target;
}

size_t SSN2GReadyInRoomRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.SSN2GReadyInRoomRsp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .pb.ReadyInRoomScRsp rsp = 2;
  if (this->has_rsp()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *rsp_);
  }

  // uint64 accountid = 1;
  if (this->accountid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_accountid());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SSN2GReadyInRoomRsp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.SSN2GReadyInRoomRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const SSN2GReadyInRoomRsp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SSN2GReadyInRoomRsp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.SSN2GReadyInRoomRsp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.SSN2GReadyInRoomRsp)
    MergeFrom(*source);
  }
}

void SSN2GReadyInRoomRsp::MergeFrom(const SSN2GReadyInRoomRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.SSN2GReadyInRoomRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_rsp()) {
    _internal_mutable_rsp()->::pb::ReadyInRoomScRsp::MergeFrom(from._internal_rsp());
  }
  if (from.accountid() != 0) {
    _internal_set_accountid(from._internal_accountid());
  }
}

void SSN2GReadyInRoomRsp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.SSN2GReadyInRoomRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SSN2GReadyInRoomRsp::CopyFrom(const SSN2GReadyInRoomRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.SSN2GReadyInRoomRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SSN2GReadyInRoomRsp::IsInitialized() const {
  return true;
}

void SSN2GReadyInRoomRsp::InternalSwap(SSN2GReadyInRoomRsp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SSN2GReadyInRoomRsp, accountid_)
      + sizeof(SSN2GReadyInRoomRsp::accountid_)
      - PROTOBUF_FIELD_OFFSET(SSN2GReadyInRoomRsp, rsp_)>(
          reinterpret_cast<char*>(&rsp_),
          reinterpret_cast<char*>(&other->rsp_));
}

::PROTOBUF_NAMESPACE_ID::Metadata SSN2GReadyInRoomRsp::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class SSG2NUserDisConnectRoomNotify::_Internal {
 public:
};

SSG2NUserDisConnectRoomNotify::SSG2NUserDisConnectRoomNotify(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:pb.SSG2NUserDisConnectRoomNotify)
}
SSG2NUserDisConnectRoomNotify::SSG2NUserDisConnectRoomNotify(const SSG2NUserDisConnectRoomNotify& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&accountid_, &from.accountid_,
    static_cast<size_t>(reinterpret_cast<char*>(&roomid_) -
    reinterpret_cast<char*>(&accountid_)) + sizeof(roomid_));
  // @@protoc_insertion_point(copy_constructor:pb.SSG2NUserDisConnectRoomNotify)
}

void SSG2NUserDisConnectRoomNotify::SharedCtor() {
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&accountid_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&roomid_) -
      reinterpret_cast<char*>(&accountid_)) + sizeof(roomid_));
}

SSG2NUserDisConnectRoomNotify::~SSG2NUserDisConnectRoomNotify() {
  // @@protoc_insertion_point(destructor:pb.SSG2NUserDisConnectRoomNotify)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SSG2NUserDisConnectRoomNotify::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void SSG2NUserDisConnectRoomNotify::ArenaDtor(void* object) {
  SSG2NUserDisConnectRoomNotify* _this = reinterpret_cast< SSG2NUserDisConnectRoomNotify* >(object);
  (void)_this;
}
void SSG2NUserDisConnectRoomNotify::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SSG2NUserDisConnectRoomNotify::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SSG2NUserDisConnectRoomNotify& SSG2NUserDisConnectRoomNotify::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SSG2NUserDisConnectRoomNotify_game_5fnode_5fmsg_2eproto.base);
  return *internal_default_instance();
}


void SSG2NUserDisConnectRoomNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.SSG2NUserDisConnectRoomNotify)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&accountid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&roomid_) -
      reinterpret_cast<char*>(&accountid_)) + sizeof(roomid_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SSG2NUserDisConnectRoomNotify::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint64 accountid = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          accountid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint64 roomid = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          roomid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SSG2NUserDisConnectRoomNotify::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.SSG2NUserDisConnectRoomNotify)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 accountid = 1;
  if (this->accountid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_accountid(), target);
  }

  // uint64 roomid = 2;
  if (this->roomid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(2, this->_internal_roomid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.SSG2NUserDisConnectRoomNotify)
  return target;
}

size_t SSG2NUserDisConnectRoomNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.SSG2NUserDisConnectRoomNotify)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint64 accountid = 1;
  if (this->accountid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_accountid());
  }

  // uint64 roomid = 2;
  if (this->roomid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_roomid());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SSG2NUserDisConnectRoomNotify::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.SSG2NUserDisConnectRoomNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const SSG2NUserDisConnectRoomNotify* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SSG2NUserDisConnectRoomNotify>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.SSG2NUserDisConnectRoomNotify)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.SSG2NUserDisConnectRoomNotify)
    MergeFrom(*source);
  }
}

void SSG2NUserDisConnectRoomNotify::MergeFrom(const SSG2NUserDisConnectRoomNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.SSG2NUserDisConnectRoomNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.accountid() != 0) {
    _internal_set_accountid(from._internal_accountid());
  }
  if (from.roomid() != 0) {
    _internal_set_roomid(from._internal_roomid());
  }
}

void SSG2NUserDisConnectRoomNotify::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.SSG2NUserDisConnectRoomNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SSG2NUserDisConnectRoomNotify::CopyFrom(const SSG2NUserDisConnectRoomNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.SSG2NUserDisConnectRoomNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SSG2NUserDisConnectRoomNotify::IsInitialized() const {
  return true;
}

void SSG2NUserDisConnectRoomNotify::InternalSwap(SSG2NUserDisConnectRoomNotify* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SSG2NUserDisConnectRoomNotify, roomid_)
      + sizeof(SSG2NUserDisConnectRoomNotify::roomid_)
      - PROTOBUF_FIELD_OFFSET(SSG2NUserDisConnectRoomNotify, accountid_)>(
          reinterpret_cast<char*>(&accountid_),
          reinterpret_cast<char*>(&other->accountid_));
}

::PROTOBUF_NAMESPACE_ID::Metadata SSG2NUserDisConnectRoomNotify::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class SSN2GUserDisConnecteTimeoutNotify::_Internal {
 public:
};

SSN2GUserDisConnecteTimeoutNotify::SSN2GUserDisConnecteTimeoutNotify(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:pb.SSN2GUserDisConnecteTimeoutNotify)
}
SSN2GUserDisConnecteTimeoutNotify::SSN2GUserDisConnecteTimeoutNotify(const SSN2GUserDisConnecteTimeoutNotify& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&accountid_, &from.accountid_,
    static_cast<size_t>(reinterpret_cast<char*>(&roomid_) -
    reinterpret_cast<char*>(&accountid_)) + sizeof(roomid_));
  // @@protoc_insertion_point(copy_constructor:pb.SSN2GUserDisConnecteTimeoutNotify)
}

void SSN2GUserDisConnecteTimeoutNotify::SharedCtor() {
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&accountid_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&roomid_) -
      reinterpret_cast<char*>(&accountid_)) + sizeof(roomid_));
}

SSN2GUserDisConnecteTimeoutNotify::~SSN2GUserDisConnecteTimeoutNotify() {
  // @@protoc_insertion_point(destructor:pb.SSN2GUserDisConnecteTimeoutNotify)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SSN2GUserDisConnecteTimeoutNotify::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void SSN2GUserDisConnecteTimeoutNotify::ArenaDtor(void* object) {
  SSN2GUserDisConnecteTimeoutNotify* _this = reinterpret_cast< SSN2GUserDisConnecteTimeoutNotify* >(object);
  (void)_this;
}
void SSN2GUserDisConnecteTimeoutNotify::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SSN2GUserDisConnecteTimeoutNotify::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SSN2GUserDisConnecteTimeoutNotify& SSN2GUserDisConnecteTimeoutNotify::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SSN2GUserDisConnecteTimeoutNotify_game_5fnode_5fmsg_2eproto.base);
  return *internal_default_instance();
}


void SSN2GUserDisConnecteTimeoutNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.SSN2GUserDisConnecteTimeoutNotify)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&accountid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&roomid_) -
      reinterpret_cast<char*>(&accountid_)) + sizeof(roomid_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SSN2GUserDisConnecteTimeoutNotify::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint64 accountid = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          accountid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint64 roomid = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          roomid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SSN2GUserDisConnecteTimeoutNotify::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.SSN2GUserDisConnecteTimeoutNotify)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 accountid = 1;
  if (this->accountid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_accountid(), target);
  }

  // uint64 roomid = 2;
  if (this->roomid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(2, this->_internal_roomid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.SSN2GUserDisConnecteTimeoutNotify)
  return target;
}

size_t SSN2GUserDisConnecteTimeoutNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.SSN2GUserDisConnecteTimeoutNotify)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint64 accountid = 1;
  if (this->accountid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_accountid());
  }

  // uint64 roomid = 2;
  if (this->roomid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_roomid());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SSN2GUserDisConnecteTimeoutNotify::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.SSN2GUserDisConnecteTimeoutNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const SSN2GUserDisConnecteTimeoutNotify* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SSN2GUserDisConnecteTimeoutNotify>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.SSN2GUserDisConnecteTimeoutNotify)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.SSN2GUserDisConnecteTimeoutNotify)
    MergeFrom(*source);
  }
}

void SSN2GUserDisConnecteTimeoutNotify::MergeFrom(const SSN2GUserDisConnecteTimeoutNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.SSN2GUserDisConnecteTimeoutNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.accountid() != 0) {
    _internal_set_accountid(from._internal_accountid());
  }
  if (from.roomid() != 0) {
    _internal_set_roomid(from._internal_roomid());
  }
}

void SSN2GUserDisConnecteTimeoutNotify::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.SSN2GUserDisConnecteTimeoutNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SSN2GUserDisConnecteTimeoutNotify::CopyFrom(const SSN2GUserDisConnecteTimeoutNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.SSN2GUserDisConnecteTimeoutNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SSN2GUserDisConnecteTimeoutNotify::IsInitialized() const {
  return true;
}

void SSN2GUserDisConnecteTimeoutNotify::InternalSwap(SSN2GUserDisConnecteTimeoutNotify* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SSN2GUserDisConnecteTimeoutNotify, roomid_)
      + sizeof(SSN2GUserDisConnecteTimeoutNotify::roomid_)
      - PROTOBUF_FIELD_OFFSET(SSN2GUserDisConnecteTimeoutNotify, accountid_)>(
          reinterpret_cast<char*>(&accountid_),
          reinterpret_cast<char*>(&other->accountid_));
}

::PROTOBUF_NAMESPACE_ID::Metadata SSN2GUserDisConnecteTimeoutNotify::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace pb
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::pb::SSG2NPullMsgInfoReq* Arena::CreateMaybeMessage< ::pb::SSG2NPullMsgInfoReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::pb::SSG2NPullMsgInfoReq >(arena);
}
template<> PROTOBUF_NOINLINE ::pb::SSN2GPullMsgInfoRsp* Arena::CreateMaybeMessage< ::pb::SSN2GPullMsgInfoRsp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::pb::SSN2GPullMsgInfoRsp >(arena);
}
template<> PROTOBUF_NOINLINE ::pb::BattleServerMsg* Arena::CreateMaybeMessage< ::pb::BattleServerMsg >(Arena* arena) {
  return Arena::CreateMessageInternal< ::pb::BattleServerMsg >(arena);
}
template<> PROTOBUF_NOINLINE ::pb::SSN2GPullBattleMsgInfoRsp* Arena::CreateMaybeMessage< ::pb::SSN2GPullBattleMsgInfoRsp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::pb::SSN2GPullBattleMsgInfoRsp >(arena);
}
template<> PROTOBUF_NOINLINE ::pb::SSG2NCreateRoomReq* Arena::CreateMaybeMessage< ::pb::SSG2NCreateRoomReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::pb::SSG2NCreateRoomReq >(arena);
}
template<> PROTOBUF_NOINLINE ::pb::SSN2GCreateRoomRsp* Arena::CreateMaybeMessage< ::pb::SSN2GCreateRoomRsp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::pb::SSN2GCreateRoomRsp >(arena);
}
template<> PROTOBUF_NOINLINE ::pb::SSG2NEnterRoomReq* Arena::CreateMaybeMessage< ::pb::SSG2NEnterRoomReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::pb::SSG2NEnterRoomReq >(arena);
}
template<> PROTOBUF_NOINLINE ::pb::SSN2GEnterRoomRsp* Arena::CreateMaybeMessage< ::pb::SSN2GEnterRoomRsp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::pb::SSN2GEnterRoomRsp >(arena);
}
template<> PROTOBUF_NOINLINE ::pb::SSG2NLeaveRoomReq* Arena::CreateMaybeMessage< ::pb::SSG2NLeaveRoomReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::pb::SSG2NLeaveRoomReq >(arena);
}
template<> PROTOBUF_NOINLINE ::pb::SSN2GLeaveRoomRsp* Arena::CreateMaybeMessage< ::pb::SSN2GLeaveRoomRsp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::pb::SSN2GLeaveRoomRsp >(arena);
}
template<> PROTOBUF_NOINLINE ::pb::SSG2NChooseLevelReq* Arena::CreateMaybeMessage< ::pb::SSG2NChooseLevelReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::pb::SSG2NChooseLevelReq >(arena);
}
template<> PROTOBUF_NOINLINE ::pb::SSN2GChooseLevelRsp* Arena::CreateMaybeMessage< ::pb::SSN2GChooseLevelRsp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::pb::SSN2GChooseLevelRsp >(arena);
}
template<> PROTOBUF_NOINLINE ::pb::SSG2NReadyInRoomReq* Arena::CreateMaybeMessage< ::pb::SSG2NReadyInRoomReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::pb::SSG2NReadyInRoomReq >(arena);
}
template<> PROTOBUF_NOINLINE ::pb::SSN2GReadyInRoomRsp* Arena::CreateMaybeMessage< ::pb::SSN2GReadyInRoomRsp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::pb::SSN2GReadyInRoomRsp >(arena);
}
template<> PROTOBUF_NOINLINE ::pb::SSG2NUserDisConnectRoomNotify* Arena::CreateMaybeMessage< ::pb::SSG2NUserDisConnectRoomNotify >(Arena* arena) {
  return Arena::CreateMessageInternal< ::pb::SSG2NUserDisConnectRoomNotify >(arena);
}
template<> PROTOBUF_NOINLINE ::pb::SSN2GUserDisConnecteTimeoutNotify* Arena::CreateMaybeMessage< ::pb::SSN2GUserDisConnecteTimeoutNotify >(Arena* arena) {
  return Arena::CreateMessageInternal< ::pb::SSN2GUserDisConnecteTimeoutNotify >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
