// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: node_room_msg.proto

#include "node_room_msg.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_game_5fnode_5fmsg_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_SSG2NChooseLevelReq_game_5fnode_5fmsg_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_game_5fnode_5fmsg_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_SSG2NCreateRoomReq_game_5fnode_5fmsg_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_game_5fnode_5fmsg_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_SSG2NEnterRoomReq_game_5fnode_5fmsg_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_game_5fnode_5fmsg_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_SSG2NLeaveRoomReq_game_5fnode_5fmsg_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_game_5fnode_5fmsg_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_SSG2NPullMsgInfoReq_game_5fnode_5fmsg_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_game_5fnode_5fmsg_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_SSG2NReadyInRoomReq_game_5fnode_5fmsg_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_game_5fnode_5fmsg_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_SSN2GChooseLevelRsp_game_5fnode_5fmsg_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_game_5fnode_5fmsg_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_SSN2GCreateRoomRsp_game_5fnode_5fmsg_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_game_5fnode_5fmsg_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_SSN2GEnterRoomRsp_game_5fnode_5fmsg_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_game_5fnode_5fmsg_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_SSN2GLeaveRoomRsp_game_5fnode_5fmsg_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_game_5fnode_5fmsg_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_SSN2GPullBattleMsgInfoRsp_game_5fnode_5fmsg_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_game_5fnode_5fmsg_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_SSN2GPullMsgInfoRsp_game_5fnode_5fmsg_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_game_5fnode_5fmsg_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_SSN2GReadyInRoomRsp_game_5fnode_5fmsg_2eproto;
namespace pb {
class SSN2RPullMsgReqDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SSN2RPullMsgReq> _instance;
} _SSN2RPullMsgReq_default_instance_;
class SSR2NPullRoomMsgRspDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SSR2NPullRoomMsgRsp> _instance;
} _SSR2NPullRoomMsgRsp_default_instance_;
class SSR2NPullRoomMsgRSPDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SSR2NPullRoomMsgRSP> _instance;
} _SSR2NPullRoomMsgRSP_default_instance_;
class SSN2RCreateRoomReqDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SSN2RCreateRoomReq> _instance;
} _SSN2RCreateRoomReq_default_instance_;
class SSR2NCreateRoomRspDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SSR2NCreateRoomRsp> _instance;
} _SSR2NCreateRoomRsp_default_instance_;
class SSN2REnterRoomReqDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SSN2REnterRoomReq> _instance;
} _SSN2REnterRoomReq_default_instance_;
class SSR2NEnterRoomRspDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SSR2NEnterRoomRsp> _instance;
} _SSR2NEnterRoomRsp_default_instance_;
class SSN2RLeaveRoomReqDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SSN2RLeaveRoomReq> _instance;
} _SSN2RLeaveRoomReq_default_instance_;
class SSR2NLeaveRoomRspDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SSR2NLeaveRoomRsp> _instance;
} _SSR2NLeaveRoomRsp_default_instance_;
class SSN2RChooseLevelReqDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SSN2RChooseLevelReq> _instance;
} _SSN2RChooseLevelReq_default_instance_;
class SSR2NChooseLevelRspDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SSR2NChooseLevelRsp> _instance;
} _SSR2NChooseLevelRsp_default_instance_;
class SSN2RReadyInRoomReqDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SSN2RReadyInRoomReq> _instance;
} _SSN2RReadyInRoomReq_default_instance_;
class SSR2NReadyInRoomRspDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SSR2NReadyInRoomRsp> _instance;
} _SSR2NReadyInRoomRsp_default_instance_;
}  // namespace pb
static void InitDefaultsscc_info_SSN2RChooseLevelReq_node_5froom_5fmsg_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pb::_SSN2RChooseLevelReq_default_instance_;
    new (ptr) ::pb::SSN2RChooseLevelReq();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_SSN2RChooseLevelReq_node_5froom_5fmsg_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_SSN2RChooseLevelReq_node_5froom_5fmsg_2eproto}, {
      &scc_info_SSG2NChooseLevelReq_game_5fnode_5fmsg_2eproto.base,}};

static void InitDefaultsscc_info_SSN2RCreateRoomReq_node_5froom_5fmsg_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pb::_SSN2RCreateRoomReq_default_instance_;
    new (ptr) ::pb::SSN2RCreateRoomReq();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_SSN2RCreateRoomReq_node_5froom_5fmsg_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_SSN2RCreateRoomReq_node_5froom_5fmsg_2eproto}, {
      &scc_info_SSG2NCreateRoomReq_game_5fnode_5fmsg_2eproto.base,}};

static void InitDefaultsscc_info_SSN2REnterRoomReq_node_5froom_5fmsg_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pb::_SSN2REnterRoomReq_default_instance_;
    new (ptr) ::pb::SSN2REnterRoomReq();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_SSN2REnterRoomReq_node_5froom_5fmsg_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_SSN2REnterRoomReq_node_5froom_5fmsg_2eproto}, {
      &scc_info_SSG2NEnterRoomReq_game_5fnode_5fmsg_2eproto.base,}};

static void InitDefaultsscc_info_SSN2RLeaveRoomReq_node_5froom_5fmsg_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pb::_SSN2RLeaveRoomReq_default_instance_;
    new (ptr) ::pb::SSN2RLeaveRoomReq();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_SSN2RLeaveRoomReq_node_5froom_5fmsg_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_SSN2RLeaveRoomReq_node_5froom_5fmsg_2eproto}, {
      &scc_info_SSG2NLeaveRoomReq_game_5fnode_5fmsg_2eproto.base,}};

static void InitDefaultsscc_info_SSN2RPullMsgReq_node_5froom_5fmsg_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pb::_SSN2RPullMsgReq_default_instance_;
    new (ptr) ::pb::SSN2RPullMsgReq();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_SSN2RPullMsgReq_node_5froom_5fmsg_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_SSN2RPullMsgReq_node_5froom_5fmsg_2eproto}, {
      &scc_info_SSG2NPullMsgInfoReq_game_5fnode_5fmsg_2eproto.base,}};

static void InitDefaultsscc_info_SSN2RReadyInRoomReq_node_5froom_5fmsg_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pb::_SSN2RReadyInRoomReq_default_instance_;
    new (ptr) ::pb::SSN2RReadyInRoomReq();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_SSN2RReadyInRoomReq_node_5froom_5fmsg_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_SSN2RReadyInRoomReq_node_5froom_5fmsg_2eproto}, {
      &scc_info_SSG2NReadyInRoomReq_game_5fnode_5fmsg_2eproto.base,}};

static void InitDefaultsscc_info_SSR2NChooseLevelRsp_node_5froom_5fmsg_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pb::_SSR2NChooseLevelRsp_default_instance_;
    new (ptr) ::pb::SSR2NChooseLevelRsp();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_SSR2NChooseLevelRsp_node_5froom_5fmsg_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_SSR2NChooseLevelRsp_node_5froom_5fmsg_2eproto}, {
      &scc_info_SSN2GChooseLevelRsp_game_5fnode_5fmsg_2eproto.base,}};

static void InitDefaultsscc_info_SSR2NCreateRoomRsp_node_5froom_5fmsg_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pb::_SSR2NCreateRoomRsp_default_instance_;
    new (ptr) ::pb::SSR2NCreateRoomRsp();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_SSR2NCreateRoomRsp_node_5froom_5fmsg_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_SSR2NCreateRoomRsp_node_5froom_5fmsg_2eproto}, {
      &scc_info_SSN2GCreateRoomRsp_game_5fnode_5fmsg_2eproto.base,}};

static void InitDefaultsscc_info_SSR2NEnterRoomRsp_node_5froom_5fmsg_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pb::_SSR2NEnterRoomRsp_default_instance_;
    new (ptr) ::pb::SSR2NEnterRoomRsp();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_SSR2NEnterRoomRsp_node_5froom_5fmsg_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_SSR2NEnterRoomRsp_node_5froom_5fmsg_2eproto}, {
      &scc_info_SSN2GEnterRoomRsp_game_5fnode_5fmsg_2eproto.base,}};

static void InitDefaultsscc_info_SSR2NLeaveRoomRsp_node_5froom_5fmsg_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pb::_SSR2NLeaveRoomRsp_default_instance_;
    new (ptr) ::pb::SSR2NLeaveRoomRsp();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_SSR2NLeaveRoomRsp_node_5froom_5fmsg_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_SSR2NLeaveRoomRsp_node_5froom_5fmsg_2eproto}, {
      &scc_info_SSN2GLeaveRoomRsp_game_5fnode_5fmsg_2eproto.base,}};

static void InitDefaultsscc_info_SSR2NPullRoomMsgRSP_node_5froom_5fmsg_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pb::_SSR2NPullRoomMsgRSP_default_instance_;
    new (ptr) ::pb::SSR2NPullRoomMsgRSP();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_SSR2NPullRoomMsgRSP_node_5froom_5fmsg_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_SSR2NPullRoomMsgRSP_node_5froom_5fmsg_2eproto}, {
      &scc_info_SSN2GPullBattleMsgInfoRsp_game_5fnode_5fmsg_2eproto.base,}};

static void InitDefaultsscc_info_SSR2NPullRoomMsgRsp_node_5froom_5fmsg_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pb::_SSR2NPullRoomMsgRsp_default_instance_;
    new (ptr) ::pb::SSR2NPullRoomMsgRsp();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_SSR2NPullRoomMsgRsp_node_5froom_5fmsg_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_SSR2NPullRoomMsgRsp_node_5froom_5fmsg_2eproto}, {
      &scc_info_SSN2GPullMsgInfoRsp_game_5fnode_5fmsg_2eproto.base,}};

static void InitDefaultsscc_info_SSR2NReadyInRoomRsp_node_5froom_5fmsg_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pb::_SSR2NReadyInRoomRsp_default_instance_;
    new (ptr) ::pb::SSR2NReadyInRoomRsp();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_SSR2NReadyInRoomRsp_node_5froom_5fmsg_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_SSR2NReadyInRoomRsp_node_5froom_5fmsg_2eproto}, {
      &scc_info_SSN2GReadyInRoomRsp_game_5fnode_5fmsg_2eproto.base,}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_node_5froom_5fmsg_2eproto[13];
static const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* file_level_enum_descriptors_node_5froom_5fmsg_2eproto[1];
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_node_5froom_5fmsg_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_node_5froom_5fmsg_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::pb::SSN2RPullMsgReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::pb::SSN2RPullMsgReq, request_id_),
  PROTOBUF_FIELD_OFFSET(::pb::SSN2RPullMsgReq, req_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::pb::SSR2NPullRoomMsgRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::pb::SSR2NPullRoomMsgRsp, request_id_),
  PROTOBUF_FIELD_OFFSET(::pb::SSR2NPullRoomMsgRsp, rsp_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::pb::SSR2NPullRoomMsgRSP, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::pb::SSR2NPullRoomMsgRSP, request_id_),
  PROTOBUF_FIELD_OFFSET(::pb::SSR2NPullRoomMsgRSP, rsp_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::pb::SSN2RCreateRoomReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::pb::SSN2RCreateRoomReq, request_id_),
  PROTOBUF_FIELD_OFFSET(::pb::SSN2RCreateRoomReq, req_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::pb::SSR2NCreateRoomRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::pb::SSR2NCreateRoomRsp, request_id_),
  PROTOBUF_FIELD_OFFSET(::pb::SSR2NCreateRoomRsp, rsp_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::pb::SSN2REnterRoomReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::pb::SSN2REnterRoomReq, request_id_),
  PROTOBUF_FIELD_OFFSET(::pb::SSN2REnterRoomReq, req_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::pb::SSR2NEnterRoomRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::pb::SSR2NEnterRoomRsp, request_id_),
  PROTOBUF_FIELD_OFFSET(::pb::SSR2NEnterRoomRsp, rsp_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::pb::SSN2RLeaveRoomReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::pb::SSN2RLeaveRoomReq, request_id_),
  PROTOBUF_FIELD_OFFSET(::pb::SSN2RLeaveRoomReq, req_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::pb::SSR2NLeaveRoomRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::pb::SSR2NLeaveRoomRsp, request_id_),
  PROTOBUF_FIELD_OFFSET(::pb::SSR2NLeaveRoomRsp, rsp_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::pb::SSN2RChooseLevelReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::pb::SSN2RChooseLevelReq, request_id_),
  PROTOBUF_FIELD_OFFSET(::pb::SSN2RChooseLevelReq, req_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::pb::SSR2NChooseLevelRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::pb::SSR2NChooseLevelRsp, request_id_),
  PROTOBUF_FIELD_OFFSET(::pb::SSR2NChooseLevelRsp, rsp_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::pb::SSN2RReadyInRoomReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::pb::SSN2RReadyInRoomReq, request_id_),
  PROTOBUF_FIELD_OFFSET(::pb::SSN2RReadyInRoomReq, req_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::pb::SSR2NReadyInRoomRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::pb::SSR2NReadyInRoomRsp, request_id_),
  PROTOBUF_FIELD_OFFSET(::pb::SSR2NReadyInRoomRsp, rsp_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::pb::SSN2RPullMsgReq)},
  { 7, -1, sizeof(::pb::SSR2NPullRoomMsgRsp)},
  { 14, -1, sizeof(::pb::SSR2NPullRoomMsgRSP)},
  { 21, -1, sizeof(::pb::SSN2RCreateRoomReq)},
  { 28, -1, sizeof(::pb::SSR2NCreateRoomRsp)},
  { 35, -1, sizeof(::pb::SSN2REnterRoomReq)},
  { 42, -1, sizeof(::pb::SSR2NEnterRoomRsp)},
  { 49, -1, sizeof(::pb::SSN2RLeaveRoomReq)},
  { 56, -1, sizeof(::pb::SSR2NLeaveRoomRsp)},
  { 63, -1, sizeof(::pb::SSN2RChooseLevelReq)},
  { 70, -1, sizeof(::pb::SSR2NChooseLevelRsp)},
  { 77, -1, sizeof(::pb::SSN2RReadyInRoomReq)},
  { 84, -1, sizeof(::pb::SSR2NReadyInRoomRsp)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::pb::_SSN2RPullMsgReq_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::pb::_SSR2NPullRoomMsgRsp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::pb::_SSR2NPullRoomMsgRSP_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::pb::_SSN2RCreateRoomReq_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::pb::_SSR2NCreateRoomRsp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::pb::_SSN2REnterRoomReq_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::pb::_SSR2NEnterRoomRsp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::pb::_SSN2RLeaveRoomReq_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::pb::_SSR2NLeaveRoomRsp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::pb::_SSN2RChooseLevelReq_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::pb::_SSR2NChooseLevelRsp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::pb::_SSN2RReadyInRoomReq_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::pb::_SSR2NReadyInRoomRsp_default_instance_),
};

const char descriptor_table_protodef_node_5froom_5fmsg_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\023node_room_msg.proto\022\002pb\032\013CsCmd.proto\032\023"
  "game_node_msg.proto\"K\n\017SSN2RPullMsgReq\022\022"
  "\n\nrequest_id\030\001 \001(\r\022$\n\003req\030\002 \001(\0132\027.pb.SSG"
  "2NPullMsgInfoReq\"O\n\023SSR2NPullRoomMsgRsp\022"
  "\022\n\nrequest_id\030\001 \001(\r\022$\n\003rsp\030\002 \001(\0132\027.pb.SS"
  "N2GPullMsgInfoRsp\"U\n\023SSR2NPullRoomMsgRSP"
  "\022\022\n\nrequest_id\030\001 \001(\r\022*\n\003rsp\030\002 \001(\0132\035.pb.S"
  "SN2GPullBattleMsgInfoRsp\"M\n\022SSN2RCreateR"
  "oomReq\022\022\n\nrequest_id\030\001 \001(\004\022#\n\003req\030\002 \001(\0132"
  "\026.pb.SSG2NCreateRoomReq\"M\n\022SSR2NCreateRo"
  "omRsp\022\022\n\nrequest_id\030\001 \001(\004\022#\n\003rsp\030\002 \001(\0132\026"
  ".pb.SSN2GCreateRoomRsp\"K\n\021SSN2REnterRoom"
  "Req\022\022\n\nrequest_id\030\001 \001(\004\022\"\n\003req\030\002 \001(\0132\025.p"
  "b.SSG2NEnterRoomReq\"K\n\021SSR2NEnterRoomRsp"
  "\022\022\n\nrequest_id\030\001 \001(\004\022\"\n\003rsp\030\002 \001(\0132\025.pb.S"
  "SN2GEnterRoomRsp\"K\n\021SSN2RLeaveRoomReq\022\022\n"
  "\nrequest_id\030\001 \001(\004\022\"\n\003req\030\002 \001(\0132\025.pb.SSG2"
  "NLeaveRoomReq\"K\n\021SSR2NLeaveRoomRsp\022\022\n\nre"
  "quest_id\030\001 \001(\004\022\"\n\003rsp\030\002 \001(\0132\025.pb.SSN2GLe"
  "aveRoomRsp\"O\n\023SSN2RChooseLevelReq\022\022\n\nreq"
  "uest_id\030\001 \001(\004\022$\n\003req\030\002 \001(\0132\027.pb.SSG2NCho"
  "oseLevelReq\"O\n\023SSR2NChooseLevelRsp\022\022\n\nre"
  "quest_id\030\001 \001(\004\022$\n\003rsp\030\002 \001(\0132\027.pb.SSN2GCh"
  "ooseLevelRsp\"O\n\023SSN2RReadyInRoomReq\022\022\n\nr"
  "equest_id\030\001 \001(\004\022$\n\003req\030\002 \001(\0132\027.pb.SSG2NR"
  "eadyInRoomReq\"O\n\023SSR2NReadyInRoomRsp\022\022\n\n"
  "request_id\030\001 \001(\004\022$\n\003rsp\030\002 \001(\0132\027.pb.SSN2G"
  "ReadyInRoomRsp*\223\004\n\024SS_NODE_ROOM_MSG_CMD\022"
  "\027\n\023SS_NODE_MSG_DEFAULT\020\000\022\"\n\035SS_NODE_ROOM"
  "_PULLROOMINFO_REQ\020\330\004\022\"\n\035SS_ROOM_NODE_PUL"
  "LROOMINFO_RSP\020\331\004\022 \n\033SS_NODE_ROOM_CREATER"
  "OOM_REQ\020\332\004\022 \n\033SS_ROOM_NODE_CREATEROOM_RS"
  "P\020\333\004\022\037\n\032SS_NODE_ROOM_ENTERROOM_REQ\020\334\004\022\037\n"
  "\032SS_ROOM_NODE_ENTERROOM_RSP\020\335\004\022\037\n\032SS_NOD"
  "E_ROOM_LEAVEROOM_REQ\020\336\004\022\037\n\032SS_ROOM_NODE_"
  "LEAVEROOM_RSP\020\337\004\022!\n\034SS_NODE_ROOM_CHOOSEL"
  "EVEL_REQ\020\340\004\022!\n\034SS_ROOM_NODE_CHOOSELEVEL_"
  "RSP\020\341\004\022\037\n\032SS_NODE_ROOM_READYROOM_REQ\020\342\004\022"
  "\037\n\032SS_ROOM_NODE_READYROOM_RSP\020\343\004\022$\n\037SS_N"
  "ODE_ROOM_PULLBATTLEINFO_REQ\020\344\004\022$\n\037SS_ROO"
  "M_NODE_PULLBATTLEINFO_RSP\020\345\004b\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_node_5froom_5fmsg_2eproto_deps[2] = {
  &::descriptor_table_CsCmd_2eproto,
  &::descriptor_table_game_5fnode_5fmsg_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_node_5froom_5fmsg_2eproto_sccs[13] = {
  &scc_info_SSN2RChooseLevelReq_node_5froom_5fmsg_2eproto.base,
  &scc_info_SSN2RCreateRoomReq_node_5froom_5fmsg_2eproto.base,
  &scc_info_SSN2REnterRoomReq_node_5froom_5fmsg_2eproto.base,
  &scc_info_SSN2RLeaveRoomReq_node_5froom_5fmsg_2eproto.base,
  &scc_info_SSN2RPullMsgReq_node_5froom_5fmsg_2eproto.base,
  &scc_info_SSN2RReadyInRoomReq_node_5froom_5fmsg_2eproto.base,
  &scc_info_SSR2NChooseLevelRsp_node_5froom_5fmsg_2eproto.base,
  &scc_info_SSR2NCreateRoomRsp_node_5froom_5fmsg_2eproto.base,
  &scc_info_SSR2NEnterRoomRsp_node_5froom_5fmsg_2eproto.base,
  &scc_info_SSR2NLeaveRoomRsp_node_5froom_5fmsg_2eproto.base,
  &scc_info_SSR2NPullRoomMsgRSP_node_5froom_5fmsg_2eproto.base,
  &scc_info_SSR2NPullRoomMsgRsp_node_5froom_5fmsg_2eproto.base,
  &scc_info_SSR2NReadyInRoomRsp_node_5froom_5fmsg_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_node_5froom_5fmsg_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_node_5froom_5fmsg_2eproto = {
  false, false, descriptor_table_protodef_node_5froom_5fmsg_2eproto, "node_room_msg.proto", 1636,
  &descriptor_table_node_5froom_5fmsg_2eproto_once, descriptor_table_node_5froom_5fmsg_2eproto_sccs, descriptor_table_node_5froom_5fmsg_2eproto_deps, 13, 2,
  schemas, file_default_instances, TableStruct_node_5froom_5fmsg_2eproto::offsets,
  file_level_metadata_node_5froom_5fmsg_2eproto, 13, file_level_enum_descriptors_node_5froom_5fmsg_2eproto, file_level_service_descriptors_node_5froom_5fmsg_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_node_5froom_5fmsg_2eproto = (static_cast<void>(::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_node_5froom_5fmsg_2eproto)), true);
namespace pb {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* SS_NODE_ROOM_MSG_CMD_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_node_5froom_5fmsg_2eproto);
  return file_level_enum_descriptors_node_5froom_5fmsg_2eproto[0];
}
bool SS_NODE_ROOM_MSG_CMD_IsValid(int value) {
  switch (value) {
    case 0:
    case 600:
    case 601:
    case 602:
    case 603:
    case 604:
    case 605:
    case 606:
    case 607:
    case 608:
    case 609:
    case 610:
    case 611:
    case 612:
    case 613:
      return true;
    default:
      return false;
  }
}


// ===================================================================

class SSN2RPullMsgReq::_Internal {
 public:
  static const ::pb::SSG2NPullMsgInfoReq& req(const SSN2RPullMsgReq* msg);
};

const ::pb::SSG2NPullMsgInfoReq&
SSN2RPullMsgReq::_Internal::req(const SSN2RPullMsgReq* msg) {
  return *msg->req_;
}
void SSN2RPullMsgReq::clear_req() {
  if (GetArena() == nullptr && req_ != nullptr) {
    delete req_;
  }
  req_ = nullptr;
}
SSN2RPullMsgReq::SSN2RPullMsgReq(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:pb.SSN2RPullMsgReq)
}
SSN2RPullMsgReq::SSN2RPullMsgReq(const SSN2RPullMsgReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_req()) {
    req_ = new ::pb::SSG2NPullMsgInfoReq(*from.req_);
  } else {
    req_ = nullptr;
  }
  request_id_ = from.request_id_;
  // @@protoc_insertion_point(copy_constructor:pb.SSN2RPullMsgReq)
}

void SSN2RPullMsgReq::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_SSN2RPullMsgReq_node_5froom_5fmsg_2eproto.base);
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&req_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&request_id_) -
      reinterpret_cast<char*>(&req_)) + sizeof(request_id_));
}

SSN2RPullMsgReq::~SSN2RPullMsgReq() {
  // @@protoc_insertion_point(destructor:pb.SSN2RPullMsgReq)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SSN2RPullMsgReq::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete req_;
}

void SSN2RPullMsgReq::ArenaDtor(void* object) {
  SSN2RPullMsgReq* _this = reinterpret_cast< SSN2RPullMsgReq* >(object);
  (void)_this;
}
void SSN2RPullMsgReq::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SSN2RPullMsgReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SSN2RPullMsgReq& SSN2RPullMsgReq::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SSN2RPullMsgReq_node_5froom_5fmsg_2eproto.base);
  return *internal_default_instance();
}


void SSN2RPullMsgReq::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.SSN2RPullMsgReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && req_ != nullptr) {
    delete req_;
  }
  req_ = nullptr;
  request_id_ = 0u;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SSN2RPullMsgReq::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint32 request_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          request_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .pb.SSG2NPullMsgInfoReq req = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_req(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SSN2RPullMsgReq::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.SSN2RPullMsgReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 request_id = 1;
  if (this->request_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_request_id(), target);
  }

  // .pb.SSG2NPullMsgInfoReq req = 2;
  if (this->has_req()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::req(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.SSN2RPullMsgReq)
  return target;
}

size_t SSN2RPullMsgReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.SSN2RPullMsgReq)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .pb.SSG2NPullMsgInfoReq req = 2;
  if (this->has_req()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *req_);
  }

  // uint32 request_id = 1;
  if (this->request_id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_request_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SSN2RPullMsgReq::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.SSN2RPullMsgReq)
  GOOGLE_DCHECK_NE(&from, this);
  const SSN2RPullMsgReq* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SSN2RPullMsgReq>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.SSN2RPullMsgReq)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.SSN2RPullMsgReq)
    MergeFrom(*source);
  }
}

void SSN2RPullMsgReq::MergeFrom(const SSN2RPullMsgReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.SSN2RPullMsgReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_req()) {
    _internal_mutable_req()->::pb::SSG2NPullMsgInfoReq::MergeFrom(from._internal_req());
  }
  if (from.request_id() != 0) {
    _internal_set_request_id(from._internal_request_id());
  }
}

void SSN2RPullMsgReq::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.SSN2RPullMsgReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SSN2RPullMsgReq::CopyFrom(const SSN2RPullMsgReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.SSN2RPullMsgReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SSN2RPullMsgReq::IsInitialized() const {
  return true;
}

void SSN2RPullMsgReq::InternalSwap(SSN2RPullMsgReq* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SSN2RPullMsgReq, request_id_)
      + sizeof(SSN2RPullMsgReq::request_id_)
      - PROTOBUF_FIELD_OFFSET(SSN2RPullMsgReq, req_)>(
          reinterpret_cast<char*>(&req_),
          reinterpret_cast<char*>(&other->req_));
}

::PROTOBUF_NAMESPACE_ID::Metadata SSN2RPullMsgReq::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class SSR2NPullRoomMsgRsp::_Internal {
 public:
  static const ::pb::SSN2GPullMsgInfoRsp& rsp(const SSR2NPullRoomMsgRsp* msg);
};

const ::pb::SSN2GPullMsgInfoRsp&
SSR2NPullRoomMsgRsp::_Internal::rsp(const SSR2NPullRoomMsgRsp* msg) {
  return *msg->rsp_;
}
void SSR2NPullRoomMsgRsp::clear_rsp() {
  if (GetArena() == nullptr && rsp_ != nullptr) {
    delete rsp_;
  }
  rsp_ = nullptr;
}
SSR2NPullRoomMsgRsp::SSR2NPullRoomMsgRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:pb.SSR2NPullRoomMsgRsp)
}
SSR2NPullRoomMsgRsp::SSR2NPullRoomMsgRsp(const SSR2NPullRoomMsgRsp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_rsp()) {
    rsp_ = new ::pb::SSN2GPullMsgInfoRsp(*from.rsp_);
  } else {
    rsp_ = nullptr;
  }
  request_id_ = from.request_id_;
  // @@protoc_insertion_point(copy_constructor:pb.SSR2NPullRoomMsgRsp)
}

void SSR2NPullRoomMsgRsp::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_SSR2NPullRoomMsgRsp_node_5froom_5fmsg_2eproto.base);
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&rsp_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&request_id_) -
      reinterpret_cast<char*>(&rsp_)) + sizeof(request_id_));
}

SSR2NPullRoomMsgRsp::~SSR2NPullRoomMsgRsp() {
  // @@protoc_insertion_point(destructor:pb.SSR2NPullRoomMsgRsp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SSR2NPullRoomMsgRsp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete rsp_;
}

void SSR2NPullRoomMsgRsp::ArenaDtor(void* object) {
  SSR2NPullRoomMsgRsp* _this = reinterpret_cast< SSR2NPullRoomMsgRsp* >(object);
  (void)_this;
}
void SSR2NPullRoomMsgRsp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SSR2NPullRoomMsgRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SSR2NPullRoomMsgRsp& SSR2NPullRoomMsgRsp::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SSR2NPullRoomMsgRsp_node_5froom_5fmsg_2eproto.base);
  return *internal_default_instance();
}


void SSR2NPullRoomMsgRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.SSR2NPullRoomMsgRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && rsp_ != nullptr) {
    delete rsp_;
  }
  rsp_ = nullptr;
  request_id_ = 0u;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SSR2NPullRoomMsgRsp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint32 request_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          request_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .pb.SSN2GPullMsgInfoRsp rsp = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_rsp(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SSR2NPullRoomMsgRsp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.SSR2NPullRoomMsgRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 request_id = 1;
  if (this->request_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_request_id(), target);
  }

  // .pb.SSN2GPullMsgInfoRsp rsp = 2;
  if (this->has_rsp()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::rsp(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.SSR2NPullRoomMsgRsp)
  return target;
}

size_t SSR2NPullRoomMsgRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.SSR2NPullRoomMsgRsp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .pb.SSN2GPullMsgInfoRsp rsp = 2;
  if (this->has_rsp()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *rsp_);
  }

  // uint32 request_id = 1;
  if (this->request_id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_request_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SSR2NPullRoomMsgRsp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.SSR2NPullRoomMsgRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const SSR2NPullRoomMsgRsp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SSR2NPullRoomMsgRsp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.SSR2NPullRoomMsgRsp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.SSR2NPullRoomMsgRsp)
    MergeFrom(*source);
  }
}

void SSR2NPullRoomMsgRsp::MergeFrom(const SSR2NPullRoomMsgRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.SSR2NPullRoomMsgRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_rsp()) {
    _internal_mutable_rsp()->::pb::SSN2GPullMsgInfoRsp::MergeFrom(from._internal_rsp());
  }
  if (from.request_id() != 0) {
    _internal_set_request_id(from._internal_request_id());
  }
}

void SSR2NPullRoomMsgRsp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.SSR2NPullRoomMsgRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SSR2NPullRoomMsgRsp::CopyFrom(const SSR2NPullRoomMsgRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.SSR2NPullRoomMsgRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SSR2NPullRoomMsgRsp::IsInitialized() const {
  return true;
}

void SSR2NPullRoomMsgRsp::InternalSwap(SSR2NPullRoomMsgRsp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SSR2NPullRoomMsgRsp, request_id_)
      + sizeof(SSR2NPullRoomMsgRsp::request_id_)
      - PROTOBUF_FIELD_OFFSET(SSR2NPullRoomMsgRsp, rsp_)>(
          reinterpret_cast<char*>(&rsp_),
          reinterpret_cast<char*>(&other->rsp_));
}

::PROTOBUF_NAMESPACE_ID::Metadata SSR2NPullRoomMsgRsp::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class SSR2NPullRoomMsgRSP::_Internal {
 public:
  static const ::pb::SSN2GPullBattleMsgInfoRsp& rsp(const SSR2NPullRoomMsgRSP* msg);
};

const ::pb::SSN2GPullBattleMsgInfoRsp&
SSR2NPullRoomMsgRSP::_Internal::rsp(const SSR2NPullRoomMsgRSP* msg) {
  return *msg->rsp_;
}
void SSR2NPullRoomMsgRSP::clear_rsp() {
  if (GetArena() == nullptr && rsp_ != nullptr) {
    delete rsp_;
  }
  rsp_ = nullptr;
}
SSR2NPullRoomMsgRSP::SSR2NPullRoomMsgRSP(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:pb.SSR2NPullRoomMsgRSP)
}
SSR2NPullRoomMsgRSP::SSR2NPullRoomMsgRSP(const SSR2NPullRoomMsgRSP& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_rsp()) {
    rsp_ = new ::pb::SSN2GPullBattleMsgInfoRsp(*from.rsp_);
  } else {
    rsp_ = nullptr;
  }
  request_id_ = from.request_id_;
  // @@protoc_insertion_point(copy_constructor:pb.SSR2NPullRoomMsgRSP)
}

void SSR2NPullRoomMsgRSP::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_SSR2NPullRoomMsgRSP_node_5froom_5fmsg_2eproto.base);
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&rsp_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&request_id_) -
      reinterpret_cast<char*>(&rsp_)) + sizeof(request_id_));
}

SSR2NPullRoomMsgRSP::~SSR2NPullRoomMsgRSP() {
  // @@protoc_insertion_point(destructor:pb.SSR2NPullRoomMsgRSP)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SSR2NPullRoomMsgRSP::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete rsp_;
}

void SSR2NPullRoomMsgRSP::ArenaDtor(void* object) {
  SSR2NPullRoomMsgRSP* _this = reinterpret_cast< SSR2NPullRoomMsgRSP* >(object);
  (void)_this;
}
void SSR2NPullRoomMsgRSP::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SSR2NPullRoomMsgRSP::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SSR2NPullRoomMsgRSP& SSR2NPullRoomMsgRSP::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SSR2NPullRoomMsgRSP_node_5froom_5fmsg_2eproto.base);
  return *internal_default_instance();
}


void SSR2NPullRoomMsgRSP::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.SSR2NPullRoomMsgRSP)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && rsp_ != nullptr) {
    delete rsp_;
  }
  rsp_ = nullptr;
  request_id_ = 0u;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SSR2NPullRoomMsgRSP::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint32 request_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          request_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .pb.SSN2GPullBattleMsgInfoRsp rsp = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_rsp(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SSR2NPullRoomMsgRSP::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.SSR2NPullRoomMsgRSP)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 request_id = 1;
  if (this->request_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_request_id(), target);
  }

  // .pb.SSN2GPullBattleMsgInfoRsp rsp = 2;
  if (this->has_rsp()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::rsp(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.SSR2NPullRoomMsgRSP)
  return target;
}

size_t SSR2NPullRoomMsgRSP::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.SSR2NPullRoomMsgRSP)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .pb.SSN2GPullBattleMsgInfoRsp rsp = 2;
  if (this->has_rsp()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *rsp_);
  }

  // uint32 request_id = 1;
  if (this->request_id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_request_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SSR2NPullRoomMsgRSP::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.SSR2NPullRoomMsgRSP)
  GOOGLE_DCHECK_NE(&from, this);
  const SSR2NPullRoomMsgRSP* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SSR2NPullRoomMsgRSP>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.SSR2NPullRoomMsgRSP)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.SSR2NPullRoomMsgRSP)
    MergeFrom(*source);
  }
}

void SSR2NPullRoomMsgRSP::MergeFrom(const SSR2NPullRoomMsgRSP& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.SSR2NPullRoomMsgRSP)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_rsp()) {
    _internal_mutable_rsp()->::pb::SSN2GPullBattleMsgInfoRsp::MergeFrom(from._internal_rsp());
  }
  if (from.request_id() != 0) {
    _internal_set_request_id(from._internal_request_id());
  }
}

void SSR2NPullRoomMsgRSP::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.SSR2NPullRoomMsgRSP)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SSR2NPullRoomMsgRSP::CopyFrom(const SSR2NPullRoomMsgRSP& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.SSR2NPullRoomMsgRSP)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SSR2NPullRoomMsgRSP::IsInitialized() const {
  return true;
}

void SSR2NPullRoomMsgRSP::InternalSwap(SSR2NPullRoomMsgRSP* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SSR2NPullRoomMsgRSP, request_id_)
      + sizeof(SSR2NPullRoomMsgRSP::request_id_)
      - PROTOBUF_FIELD_OFFSET(SSR2NPullRoomMsgRSP, rsp_)>(
          reinterpret_cast<char*>(&rsp_),
          reinterpret_cast<char*>(&other->rsp_));
}

::PROTOBUF_NAMESPACE_ID::Metadata SSR2NPullRoomMsgRSP::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class SSN2RCreateRoomReq::_Internal {
 public:
  static const ::pb::SSG2NCreateRoomReq& req(const SSN2RCreateRoomReq* msg);
};

const ::pb::SSG2NCreateRoomReq&
SSN2RCreateRoomReq::_Internal::req(const SSN2RCreateRoomReq* msg) {
  return *msg->req_;
}
void SSN2RCreateRoomReq::clear_req() {
  if (GetArena() == nullptr && req_ != nullptr) {
    delete req_;
  }
  req_ = nullptr;
}
SSN2RCreateRoomReq::SSN2RCreateRoomReq(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:pb.SSN2RCreateRoomReq)
}
SSN2RCreateRoomReq::SSN2RCreateRoomReq(const SSN2RCreateRoomReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_req()) {
    req_ = new ::pb::SSG2NCreateRoomReq(*from.req_);
  } else {
    req_ = nullptr;
  }
  request_id_ = from.request_id_;
  // @@protoc_insertion_point(copy_constructor:pb.SSN2RCreateRoomReq)
}

void SSN2RCreateRoomReq::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_SSN2RCreateRoomReq_node_5froom_5fmsg_2eproto.base);
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&req_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&request_id_) -
      reinterpret_cast<char*>(&req_)) + sizeof(request_id_));
}

SSN2RCreateRoomReq::~SSN2RCreateRoomReq() {
  // @@protoc_insertion_point(destructor:pb.SSN2RCreateRoomReq)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SSN2RCreateRoomReq::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete req_;
}

void SSN2RCreateRoomReq::ArenaDtor(void* object) {
  SSN2RCreateRoomReq* _this = reinterpret_cast< SSN2RCreateRoomReq* >(object);
  (void)_this;
}
void SSN2RCreateRoomReq::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SSN2RCreateRoomReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SSN2RCreateRoomReq& SSN2RCreateRoomReq::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SSN2RCreateRoomReq_node_5froom_5fmsg_2eproto.base);
  return *internal_default_instance();
}


void SSN2RCreateRoomReq::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.SSN2RCreateRoomReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && req_ != nullptr) {
    delete req_;
  }
  req_ = nullptr;
  request_id_ = PROTOBUF_ULONGLONG(0);
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SSN2RCreateRoomReq::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint64 request_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          request_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .pb.SSG2NCreateRoomReq req = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_req(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SSN2RCreateRoomReq::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.SSN2RCreateRoomReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 request_id = 1;
  if (this->request_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_request_id(), target);
  }

  // .pb.SSG2NCreateRoomReq req = 2;
  if (this->has_req()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::req(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.SSN2RCreateRoomReq)
  return target;
}

size_t SSN2RCreateRoomReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.SSN2RCreateRoomReq)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .pb.SSG2NCreateRoomReq req = 2;
  if (this->has_req()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *req_);
  }

  // uint64 request_id = 1;
  if (this->request_id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_request_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SSN2RCreateRoomReq::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.SSN2RCreateRoomReq)
  GOOGLE_DCHECK_NE(&from, this);
  const SSN2RCreateRoomReq* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SSN2RCreateRoomReq>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.SSN2RCreateRoomReq)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.SSN2RCreateRoomReq)
    MergeFrom(*source);
  }
}

void SSN2RCreateRoomReq::MergeFrom(const SSN2RCreateRoomReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.SSN2RCreateRoomReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_req()) {
    _internal_mutable_req()->::pb::SSG2NCreateRoomReq::MergeFrom(from._internal_req());
  }
  if (from.request_id() != 0) {
    _internal_set_request_id(from._internal_request_id());
  }
}

void SSN2RCreateRoomReq::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.SSN2RCreateRoomReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SSN2RCreateRoomReq::CopyFrom(const SSN2RCreateRoomReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.SSN2RCreateRoomReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SSN2RCreateRoomReq::IsInitialized() const {
  return true;
}

void SSN2RCreateRoomReq::InternalSwap(SSN2RCreateRoomReq* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SSN2RCreateRoomReq, request_id_)
      + sizeof(SSN2RCreateRoomReq::request_id_)
      - PROTOBUF_FIELD_OFFSET(SSN2RCreateRoomReq, req_)>(
          reinterpret_cast<char*>(&req_),
          reinterpret_cast<char*>(&other->req_));
}

::PROTOBUF_NAMESPACE_ID::Metadata SSN2RCreateRoomReq::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class SSR2NCreateRoomRsp::_Internal {
 public:
  static const ::pb::SSN2GCreateRoomRsp& rsp(const SSR2NCreateRoomRsp* msg);
};

const ::pb::SSN2GCreateRoomRsp&
SSR2NCreateRoomRsp::_Internal::rsp(const SSR2NCreateRoomRsp* msg) {
  return *msg->rsp_;
}
void SSR2NCreateRoomRsp::clear_rsp() {
  if (GetArena() == nullptr && rsp_ != nullptr) {
    delete rsp_;
  }
  rsp_ = nullptr;
}
SSR2NCreateRoomRsp::SSR2NCreateRoomRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:pb.SSR2NCreateRoomRsp)
}
SSR2NCreateRoomRsp::SSR2NCreateRoomRsp(const SSR2NCreateRoomRsp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_rsp()) {
    rsp_ = new ::pb::SSN2GCreateRoomRsp(*from.rsp_);
  } else {
    rsp_ = nullptr;
  }
  request_id_ = from.request_id_;
  // @@protoc_insertion_point(copy_constructor:pb.SSR2NCreateRoomRsp)
}

void SSR2NCreateRoomRsp::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_SSR2NCreateRoomRsp_node_5froom_5fmsg_2eproto.base);
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&rsp_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&request_id_) -
      reinterpret_cast<char*>(&rsp_)) + sizeof(request_id_));
}

SSR2NCreateRoomRsp::~SSR2NCreateRoomRsp() {
  // @@protoc_insertion_point(destructor:pb.SSR2NCreateRoomRsp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SSR2NCreateRoomRsp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete rsp_;
}

void SSR2NCreateRoomRsp::ArenaDtor(void* object) {
  SSR2NCreateRoomRsp* _this = reinterpret_cast< SSR2NCreateRoomRsp* >(object);
  (void)_this;
}
void SSR2NCreateRoomRsp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SSR2NCreateRoomRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SSR2NCreateRoomRsp& SSR2NCreateRoomRsp::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SSR2NCreateRoomRsp_node_5froom_5fmsg_2eproto.base);
  return *internal_default_instance();
}


void SSR2NCreateRoomRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.SSR2NCreateRoomRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && rsp_ != nullptr) {
    delete rsp_;
  }
  rsp_ = nullptr;
  request_id_ = PROTOBUF_ULONGLONG(0);
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SSR2NCreateRoomRsp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint64 request_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          request_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .pb.SSN2GCreateRoomRsp rsp = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_rsp(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SSR2NCreateRoomRsp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.SSR2NCreateRoomRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 request_id = 1;
  if (this->request_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_request_id(), target);
  }

  // .pb.SSN2GCreateRoomRsp rsp = 2;
  if (this->has_rsp()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::rsp(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.SSR2NCreateRoomRsp)
  return target;
}

size_t SSR2NCreateRoomRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.SSR2NCreateRoomRsp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .pb.SSN2GCreateRoomRsp rsp = 2;
  if (this->has_rsp()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *rsp_);
  }

  // uint64 request_id = 1;
  if (this->request_id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_request_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SSR2NCreateRoomRsp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.SSR2NCreateRoomRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const SSR2NCreateRoomRsp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SSR2NCreateRoomRsp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.SSR2NCreateRoomRsp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.SSR2NCreateRoomRsp)
    MergeFrom(*source);
  }
}

void SSR2NCreateRoomRsp::MergeFrom(const SSR2NCreateRoomRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.SSR2NCreateRoomRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_rsp()) {
    _internal_mutable_rsp()->::pb::SSN2GCreateRoomRsp::MergeFrom(from._internal_rsp());
  }
  if (from.request_id() != 0) {
    _internal_set_request_id(from._internal_request_id());
  }
}

void SSR2NCreateRoomRsp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.SSR2NCreateRoomRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SSR2NCreateRoomRsp::CopyFrom(const SSR2NCreateRoomRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.SSR2NCreateRoomRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SSR2NCreateRoomRsp::IsInitialized() const {
  return true;
}

void SSR2NCreateRoomRsp::InternalSwap(SSR2NCreateRoomRsp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SSR2NCreateRoomRsp, request_id_)
      + sizeof(SSR2NCreateRoomRsp::request_id_)
      - PROTOBUF_FIELD_OFFSET(SSR2NCreateRoomRsp, rsp_)>(
          reinterpret_cast<char*>(&rsp_),
          reinterpret_cast<char*>(&other->rsp_));
}

::PROTOBUF_NAMESPACE_ID::Metadata SSR2NCreateRoomRsp::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class SSN2REnterRoomReq::_Internal {
 public:
  static const ::pb::SSG2NEnterRoomReq& req(const SSN2REnterRoomReq* msg);
};

const ::pb::SSG2NEnterRoomReq&
SSN2REnterRoomReq::_Internal::req(const SSN2REnterRoomReq* msg) {
  return *msg->req_;
}
void SSN2REnterRoomReq::clear_req() {
  if (GetArena() == nullptr && req_ != nullptr) {
    delete req_;
  }
  req_ = nullptr;
}
SSN2REnterRoomReq::SSN2REnterRoomReq(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:pb.SSN2REnterRoomReq)
}
SSN2REnterRoomReq::SSN2REnterRoomReq(const SSN2REnterRoomReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_req()) {
    req_ = new ::pb::SSG2NEnterRoomReq(*from.req_);
  } else {
    req_ = nullptr;
  }
  request_id_ = from.request_id_;
  // @@protoc_insertion_point(copy_constructor:pb.SSN2REnterRoomReq)
}

void SSN2REnterRoomReq::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_SSN2REnterRoomReq_node_5froom_5fmsg_2eproto.base);
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&req_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&request_id_) -
      reinterpret_cast<char*>(&req_)) + sizeof(request_id_));
}

SSN2REnterRoomReq::~SSN2REnterRoomReq() {
  // @@protoc_insertion_point(destructor:pb.SSN2REnterRoomReq)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SSN2REnterRoomReq::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete req_;
}

void SSN2REnterRoomReq::ArenaDtor(void* object) {
  SSN2REnterRoomReq* _this = reinterpret_cast< SSN2REnterRoomReq* >(object);
  (void)_this;
}
void SSN2REnterRoomReq::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SSN2REnterRoomReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SSN2REnterRoomReq& SSN2REnterRoomReq::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SSN2REnterRoomReq_node_5froom_5fmsg_2eproto.base);
  return *internal_default_instance();
}


void SSN2REnterRoomReq::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.SSN2REnterRoomReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && req_ != nullptr) {
    delete req_;
  }
  req_ = nullptr;
  request_id_ = PROTOBUF_ULONGLONG(0);
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SSN2REnterRoomReq::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint64 request_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          request_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .pb.SSG2NEnterRoomReq req = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_req(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SSN2REnterRoomReq::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.SSN2REnterRoomReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 request_id = 1;
  if (this->request_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_request_id(), target);
  }

  // .pb.SSG2NEnterRoomReq req = 2;
  if (this->has_req()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::req(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.SSN2REnterRoomReq)
  return target;
}

size_t SSN2REnterRoomReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.SSN2REnterRoomReq)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .pb.SSG2NEnterRoomReq req = 2;
  if (this->has_req()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *req_);
  }

  // uint64 request_id = 1;
  if (this->request_id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_request_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SSN2REnterRoomReq::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.SSN2REnterRoomReq)
  GOOGLE_DCHECK_NE(&from, this);
  const SSN2REnterRoomReq* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SSN2REnterRoomReq>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.SSN2REnterRoomReq)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.SSN2REnterRoomReq)
    MergeFrom(*source);
  }
}

void SSN2REnterRoomReq::MergeFrom(const SSN2REnterRoomReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.SSN2REnterRoomReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_req()) {
    _internal_mutable_req()->::pb::SSG2NEnterRoomReq::MergeFrom(from._internal_req());
  }
  if (from.request_id() != 0) {
    _internal_set_request_id(from._internal_request_id());
  }
}

void SSN2REnterRoomReq::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.SSN2REnterRoomReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SSN2REnterRoomReq::CopyFrom(const SSN2REnterRoomReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.SSN2REnterRoomReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SSN2REnterRoomReq::IsInitialized() const {
  return true;
}

void SSN2REnterRoomReq::InternalSwap(SSN2REnterRoomReq* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SSN2REnterRoomReq, request_id_)
      + sizeof(SSN2REnterRoomReq::request_id_)
      - PROTOBUF_FIELD_OFFSET(SSN2REnterRoomReq, req_)>(
          reinterpret_cast<char*>(&req_),
          reinterpret_cast<char*>(&other->req_));
}

::PROTOBUF_NAMESPACE_ID::Metadata SSN2REnterRoomReq::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class SSR2NEnterRoomRsp::_Internal {
 public:
  static const ::pb::SSN2GEnterRoomRsp& rsp(const SSR2NEnterRoomRsp* msg);
};

const ::pb::SSN2GEnterRoomRsp&
SSR2NEnterRoomRsp::_Internal::rsp(const SSR2NEnterRoomRsp* msg) {
  return *msg->rsp_;
}
void SSR2NEnterRoomRsp::clear_rsp() {
  if (GetArena() == nullptr && rsp_ != nullptr) {
    delete rsp_;
  }
  rsp_ = nullptr;
}
SSR2NEnterRoomRsp::SSR2NEnterRoomRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:pb.SSR2NEnterRoomRsp)
}
SSR2NEnterRoomRsp::SSR2NEnterRoomRsp(const SSR2NEnterRoomRsp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_rsp()) {
    rsp_ = new ::pb::SSN2GEnterRoomRsp(*from.rsp_);
  } else {
    rsp_ = nullptr;
  }
  request_id_ = from.request_id_;
  // @@protoc_insertion_point(copy_constructor:pb.SSR2NEnterRoomRsp)
}

void SSR2NEnterRoomRsp::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_SSR2NEnterRoomRsp_node_5froom_5fmsg_2eproto.base);
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&rsp_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&request_id_) -
      reinterpret_cast<char*>(&rsp_)) + sizeof(request_id_));
}

SSR2NEnterRoomRsp::~SSR2NEnterRoomRsp() {
  // @@protoc_insertion_point(destructor:pb.SSR2NEnterRoomRsp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SSR2NEnterRoomRsp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete rsp_;
}

void SSR2NEnterRoomRsp::ArenaDtor(void* object) {
  SSR2NEnterRoomRsp* _this = reinterpret_cast< SSR2NEnterRoomRsp* >(object);
  (void)_this;
}
void SSR2NEnterRoomRsp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SSR2NEnterRoomRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SSR2NEnterRoomRsp& SSR2NEnterRoomRsp::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SSR2NEnterRoomRsp_node_5froom_5fmsg_2eproto.base);
  return *internal_default_instance();
}


void SSR2NEnterRoomRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.SSR2NEnterRoomRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && rsp_ != nullptr) {
    delete rsp_;
  }
  rsp_ = nullptr;
  request_id_ = PROTOBUF_ULONGLONG(0);
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SSR2NEnterRoomRsp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint64 request_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          request_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .pb.SSN2GEnterRoomRsp rsp = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_rsp(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SSR2NEnterRoomRsp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.SSR2NEnterRoomRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 request_id = 1;
  if (this->request_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_request_id(), target);
  }

  // .pb.SSN2GEnterRoomRsp rsp = 2;
  if (this->has_rsp()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::rsp(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.SSR2NEnterRoomRsp)
  return target;
}

size_t SSR2NEnterRoomRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.SSR2NEnterRoomRsp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .pb.SSN2GEnterRoomRsp rsp = 2;
  if (this->has_rsp()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *rsp_);
  }

  // uint64 request_id = 1;
  if (this->request_id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_request_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SSR2NEnterRoomRsp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.SSR2NEnterRoomRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const SSR2NEnterRoomRsp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SSR2NEnterRoomRsp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.SSR2NEnterRoomRsp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.SSR2NEnterRoomRsp)
    MergeFrom(*source);
  }
}

void SSR2NEnterRoomRsp::MergeFrom(const SSR2NEnterRoomRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.SSR2NEnterRoomRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_rsp()) {
    _internal_mutable_rsp()->::pb::SSN2GEnterRoomRsp::MergeFrom(from._internal_rsp());
  }
  if (from.request_id() != 0) {
    _internal_set_request_id(from._internal_request_id());
  }
}

void SSR2NEnterRoomRsp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.SSR2NEnterRoomRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SSR2NEnterRoomRsp::CopyFrom(const SSR2NEnterRoomRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.SSR2NEnterRoomRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SSR2NEnterRoomRsp::IsInitialized() const {
  return true;
}

void SSR2NEnterRoomRsp::InternalSwap(SSR2NEnterRoomRsp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SSR2NEnterRoomRsp, request_id_)
      + sizeof(SSR2NEnterRoomRsp::request_id_)
      - PROTOBUF_FIELD_OFFSET(SSR2NEnterRoomRsp, rsp_)>(
          reinterpret_cast<char*>(&rsp_),
          reinterpret_cast<char*>(&other->rsp_));
}

::PROTOBUF_NAMESPACE_ID::Metadata SSR2NEnterRoomRsp::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class SSN2RLeaveRoomReq::_Internal {
 public:
  static const ::pb::SSG2NLeaveRoomReq& req(const SSN2RLeaveRoomReq* msg);
};

const ::pb::SSG2NLeaveRoomReq&
SSN2RLeaveRoomReq::_Internal::req(const SSN2RLeaveRoomReq* msg) {
  return *msg->req_;
}
void SSN2RLeaveRoomReq::clear_req() {
  if (GetArena() == nullptr && req_ != nullptr) {
    delete req_;
  }
  req_ = nullptr;
}
SSN2RLeaveRoomReq::SSN2RLeaveRoomReq(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:pb.SSN2RLeaveRoomReq)
}
SSN2RLeaveRoomReq::SSN2RLeaveRoomReq(const SSN2RLeaveRoomReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_req()) {
    req_ = new ::pb::SSG2NLeaveRoomReq(*from.req_);
  } else {
    req_ = nullptr;
  }
  request_id_ = from.request_id_;
  // @@protoc_insertion_point(copy_constructor:pb.SSN2RLeaveRoomReq)
}

void SSN2RLeaveRoomReq::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_SSN2RLeaveRoomReq_node_5froom_5fmsg_2eproto.base);
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&req_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&request_id_) -
      reinterpret_cast<char*>(&req_)) + sizeof(request_id_));
}

SSN2RLeaveRoomReq::~SSN2RLeaveRoomReq() {
  // @@protoc_insertion_point(destructor:pb.SSN2RLeaveRoomReq)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SSN2RLeaveRoomReq::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete req_;
}

void SSN2RLeaveRoomReq::ArenaDtor(void* object) {
  SSN2RLeaveRoomReq* _this = reinterpret_cast< SSN2RLeaveRoomReq* >(object);
  (void)_this;
}
void SSN2RLeaveRoomReq::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SSN2RLeaveRoomReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SSN2RLeaveRoomReq& SSN2RLeaveRoomReq::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SSN2RLeaveRoomReq_node_5froom_5fmsg_2eproto.base);
  return *internal_default_instance();
}


void SSN2RLeaveRoomReq::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.SSN2RLeaveRoomReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && req_ != nullptr) {
    delete req_;
  }
  req_ = nullptr;
  request_id_ = PROTOBUF_ULONGLONG(0);
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SSN2RLeaveRoomReq::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint64 request_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          request_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .pb.SSG2NLeaveRoomReq req = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_req(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SSN2RLeaveRoomReq::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.SSN2RLeaveRoomReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 request_id = 1;
  if (this->request_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_request_id(), target);
  }

  // .pb.SSG2NLeaveRoomReq req = 2;
  if (this->has_req()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::req(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.SSN2RLeaveRoomReq)
  return target;
}

size_t SSN2RLeaveRoomReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.SSN2RLeaveRoomReq)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .pb.SSG2NLeaveRoomReq req = 2;
  if (this->has_req()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *req_);
  }

  // uint64 request_id = 1;
  if (this->request_id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_request_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SSN2RLeaveRoomReq::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.SSN2RLeaveRoomReq)
  GOOGLE_DCHECK_NE(&from, this);
  const SSN2RLeaveRoomReq* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SSN2RLeaveRoomReq>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.SSN2RLeaveRoomReq)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.SSN2RLeaveRoomReq)
    MergeFrom(*source);
  }
}

void SSN2RLeaveRoomReq::MergeFrom(const SSN2RLeaveRoomReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.SSN2RLeaveRoomReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_req()) {
    _internal_mutable_req()->::pb::SSG2NLeaveRoomReq::MergeFrom(from._internal_req());
  }
  if (from.request_id() != 0) {
    _internal_set_request_id(from._internal_request_id());
  }
}

void SSN2RLeaveRoomReq::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.SSN2RLeaveRoomReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SSN2RLeaveRoomReq::CopyFrom(const SSN2RLeaveRoomReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.SSN2RLeaveRoomReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SSN2RLeaveRoomReq::IsInitialized() const {
  return true;
}

void SSN2RLeaveRoomReq::InternalSwap(SSN2RLeaveRoomReq* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SSN2RLeaveRoomReq, request_id_)
      + sizeof(SSN2RLeaveRoomReq::request_id_)
      - PROTOBUF_FIELD_OFFSET(SSN2RLeaveRoomReq, req_)>(
          reinterpret_cast<char*>(&req_),
          reinterpret_cast<char*>(&other->req_));
}

::PROTOBUF_NAMESPACE_ID::Metadata SSN2RLeaveRoomReq::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class SSR2NLeaveRoomRsp::_Internal {
 public:
  static const ::pb::SSN2GLeaveRoomRsp& rsp(const SSR2NLeaveRoomRsp* msg);
};

const ::pb::SSN2GLeaveRoomRsp&
SSR2NLeaveRoomRsp::_Internal::rsp(const SSR2NLeaveRoomRsp* msg) {
  return *msg->rsp_;
}
void SSR2NLeaveRoomRsp::clear_rsp() {
  if (GetArena() == nullptr && rsp_ != nullptr) {
    delete rsp_;
  }
  rsp_ = nullptr;
}
SSR2NLeaveRoomRsp::SSR2NLeaveRoomRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:pb.SSR2NLeaveRoomRsp)
}
SSR2NLeaveRoomRsp::SSR2NLeaveRoomRsp(const SSR2NLeaveRoomRsp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_rsp()) {
    rsp_ = new ::pb::SSN2GLeaveRoomRsp(*from.rsp_);
  } else {
    rsp_ = nullptr;
  }
  request_id_ = from.request_id_;
  // @@protoc_insertion_point(copy_constructor:pb.SSR2NLeaveRoomRsp)
}

void SSR2NLeaveRoomRsp::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_SSR2NLeaveRoomRsp_node_5froom_5fmsg_2eproto.base);
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&rsp_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&request_id_) -
      reinterpret_cast<char*>(&rsp_)) + sizeof(request_id_));
}

SSR2NLeaveRoomRsp::~SSR2NLeaveRoomRsp() {
  // @@protoc_insertion_point(destructor:pb.SSR2NLeaveRoomRsp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SSR2NLeaveRoomRsp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete rsp_;
}

void SSR2NLeaveRoomRsp::ArenaDtor(void* object) {
  SSR2NLeaveRoomRsp* _this = reinterpret_cast< SSR2NLeaveRoomRsp* >(object);
  (void)_this;
}
void SSR2NLeaveRoomRsp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SSR2NLeaveRoomRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SSR2NLeaveRoomRsp& SSR2NLeaveRoomRsp::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SSR2NLeaveRoomRsp_node_5froom_5fmsg_2eproto.base);
  return *internal_default_instance();
}


void SSR2NLeaveRoomRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.SSR2NLeaveRoomRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && rsp_ != nullptr) {
    delete rsp_;
  }
  rsp_ = nullptr;
  request_id_ = PROTOBUF_ULONGLONG(0);
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SSR2NLeaveRoomRsp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint64 request_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          request_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .pb.SSN2GLeaveRoomRsp rsp = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_rsp(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SSR2NLeaveRoomRsp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.SSR2NLeaveRoomRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 request_id = 1;
  if (this->request_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_request_id(), target);
  }

  // .pb.SSN2GLeaveRoomRsp rsp = 2;
  if (this->has_rsp()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::rsp(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.SSR2NLeaveRoomRsp)
  return target;
}

size_t SSR2NLeaveRoomRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.SSR2NLeaveRoomRsp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .pb.SSN2GLeaveRoomRsp rsp = 2;
  if (this->has_rsp()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *rsp_);
  }

  // uint64 request_id = 1;
  if (this->request_id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_request_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SSR2NLeaveRoomRsp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.SSR2NLeaveRoomRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const SSR2NLeaveRoomRsp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SSR2NLeaveRoomRsp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.SSR2NLeaveRoomRsp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.SSR2NLeaveRoomRsp)
    MergeFrom(*source);
  }
}

void SSR2NLeaveRoomRsp::MergeFrom(const SSR2NLeaveRoomRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.SSR2NLeaveRoomRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_rsp()) {
    _internal_mutable_rsp()->::pb::SSN2GLeaveRoomRsp::MergeFrom(from._internal_rsp());
  }
  if (from.request_id() != 0) {
    _internal_set_request_id(from._internal_request_id());
  }
}

void SSR2NLeaveRoomRsp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.SSR2NLeaveRoomRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SSR2NLeaveRoomRsp::CopyFrom(const SSR2NLeaveRoomRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.SSR2NLeaveRoomRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SSR2NLeaveRoomRsp::IsInitialized() const {
  return true;
}

void SSR2NLeaveRoomRsp::InternalSwap(SSR2NLeaveRoomRsp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SSR2NLeaveRoomRsp, request_id_)
      + sizeof(SSR2NLeaveRoomRsp::request_id_)
      - PROTOBUF_FIELD_OFFSET(SSR2NLeaveRoomRsp, rsp_)>(
          reinterpret_cast<char*>(&rsp_),
          reinterpret_cast<char*>(&other->rsp_));
}

::PROTOBUF_NAMESPACE_ID::Metadata SSR2NLeaveRoomRsp::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class SSN2RChooseLevelReq::_Internal {
 public:
  static const ::pb::SSG2NChooseLevelReq& req(const SSN2RChooseLevelReq* msg);
};

const ::pb::SSG2NChooseLevelReq&
SSN2RChooseLevelReq::_Internal::req(const SSN2RChooseLevelReq* msg) {
  return *msg->req_;
}
void SSN2RChooseLevelReq::clear_req() {
  if (GetArena() == nullptr && req_ != nullptr) {
    delete req_;
  }
  req_ = nullptr;
}
SSN2RChooseLevelReq::SSN2RChooseLevelReq(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:pb.SSN2RChooseLevelReq)
}
SSN2RChooseLevelReq::SSN2RChooseLevelReq(const SSN2RChooseLevelReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_req()) {
    req_ = new ::pb::SSG2NChooseLevelReq(*from.req_);
  } else {
    req_ = nullptr;
  }
  request_id_ = from.request_id_;
  // @@protoc_insertion_point(copy_constructor:pb.SSN2RChooseLevelReq)
}

void SSN2RChooseLevelReq::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_SSN2RChooseLevelReq_node_5froom_5fmsg_2eproto.base);
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&req_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&request_id_) -
      reinterpret_cast<char*>(&req_)) + sizeof(request_id_));
}

SSN2RChooseLevelReq::~SSN2RChooseLevelReq() {
  // @@protoc_insertion_point(destructor:pb.SSN2RChooseLevelReq)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SSN2RChooseLevelReq::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete req_;
}

void SSN2RChooseLevelReq::ArenaDtor(void* object) {
  SSN2RChooseLevelReq* _this = reinterpret_cast< SSN2RChooseLevelReq* >(object);
  (void)_this;
}
void SSN2RChooseLevelReq::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SSN2RChooseLevelReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SSN2RChooseLevelReq& SSN2RChooseLevelReq::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SSN2RChooseLevelReq_node_5froom_5fmsg_2eproto.base);
  return *internal_default_instance();
}


void SSN2RChooseLevelReq::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.SSN2RChooseLevelReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && req_ != nullptr) {
    delete req_;
  }
  req_ = nullptr;
  request_id_ = PROTOBUF_ULONGLONG(0);
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SSN2RChooseLevelReq::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint64 request_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          request_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .pb.SSG2NChooseLevelReq req = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_req(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SSN2RChooseLevelReq::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.SSN2RChooseLevelReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 request_id = 1;
  if (this->request_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_request_id(), target);
  }

  // .pb.SSG2NChooseLevelReq req = 2;
  if (this->has_req()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::req(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.SSN2RChooseLevelReq)
  return target;
}

size_t SSN2RChooseLevelReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.SSN2RChooseLevelReq)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .pb.SSG2NChooseLevelReq req = 2;
  if (this->has_req()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *req_);
  }

  // uint64 request_id = 1;
  if (this->request_id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_request_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SSN2RChooseLevelReq::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.SSN2RChooseLevelReq)
  GOOGLE_DCHECK_NE(&from, this);
  const SSN2RChooseLevelReq* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SSN2RChooseLevelReq>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.SSN2RChooseLevelReq)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.SSN2RChooseLevelReq)
    MergeFrom(*source);
  }
}

void SSN2RChooseLevelReq::MergeFrom(const SSN2RChooseLevelReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.SSN2RChooseLevelReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_req()) {
    _internal_mutable_req()->::pb::SSG2NChooseLevelReq::MergeFrom(from._internal_req());
  }
  if (from.request_id() != 0) {
    _internal_set_request_id(from._internal_request_id());
  }
}

void SSN2RChooseLevelReq::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.SSN2RChooseLevelReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SSN2RChooseLevelReq::CopyFrom(const SSN2RChooseLevelReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.SSN2RChooseLevelReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SSN2RChooseLevelReq::IsInitialized() const {
  return true;
}

void SSN2RChooseLevelReq::InternalSwap(SSN2RChooseLevelReq* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SSN2RChooseLevelReq, request_id_)
      + sizeof(SSN2RChooseLevelReq::request_id_)
      - PROTOBUF_FIELD_OFFSET(SSN2RChooseLevelReq, req_)>(
          reinterpret_cast<char*>(&req_),
          reinterpret_cast<char*>(&other->req_));
}

::PROTOBUF_NAMESPACE_ID::Metadata SSN2RChooseLevelReq::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class SSR2NChooseLevelRsp::_Internal {
 public:
  static const ::pb::SSN2GChooseLevelRsp& rsp(const SSR2NChooseLevelRsp* msg);
};

const ::pb::SSN2GChooseLevelRsp&
SSR2NChooseLevelRsp::_Internal::rsp(const SSR2NChooseLevelRsp* msg) {
  return *msg->rsp_;
}
void SSR2NChooseLevelRsp::clear_rsp() {
  if (GetArena() == nullptr && rsp_ != nullptr) {
    delete rsp_;
  }
  rsp_ = nullptr;
}
SSR2NChooseLevelRsp::SSR2NChooseLevelRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:pb.SSR2NChooseLevelRsp)
}
SSR2NChooseLevelRsp::SSR2NChooseLevelRsp(const SSR2NChooseLevelRsp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_rsp()) {
    rsp_ = new ::pb::SSN2GChooseLevelRsp(*from.rsp_);
  } else {
    rsp_ = nullptr;
  }
  request_id_ = from.request_id_;
  // @@protoc_insertion_point(copy_constructor:pb.SSR2NChooseLevelRsp)
}

void SSR2NChooseLevelRsp::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_SSR2NChooseLevelRsp_node_5froom_5fmsg_2eproto.base);
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&rsp_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&request_id_) -
      reinterpret_cast<char*>(&rsp_)) + sizeof(request_id_));
}

SSR2NChooseLevelRsp::~SSR2NChooseLevelRsp() {
  // @@protoc_insertion_point(destructor:pb.SSR2NChooseLevelRsp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SSR2NChooseLevelRsp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete rsp_;
}

void SSR2NChooseLevelRsp::ArenaDtor(void* object) {
  SSR2NChooseLevelRsp* _this = reinterpret_cast< SSR2NChooseLevelRsp* >(object);
  (void)_this;
}
void SSR2NChooseLevelRsp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SSR2NChooseLevelRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SSR2NChooseLevelRsp& SSR2NChooseLevelRsp::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SSR2NChooseLevelRsp_node_5froom_5fmsg_2eproto.base);
  return *internal_default_instance();
}


void SSR2NChooseLevelRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.SSR2NChooseLevelRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && rsp_ != nullptr) {
    delete rsp_;
  }
  rsp_ = nullptr;
  request_id_ = PROTOBUF_ULONGLONG(0);
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SSR2NChooseLevelRsp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint64 request_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          request_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .pb.SSN2GChooseLevelRsp rsp = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_rsp(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SSR2NChooseLevelRsp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.SSR2NChooseLevelRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 request_id = 1;
  if (this->request_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_request_id(), target);
  }

  // .pb.SSN2GChooseLevelRsp rsp = 2;
  if (this->has_rsp()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::rsp(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.SSR2NChooseLevelRsp)
  return target;
}

size_t SSR2NChooseLevelRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.SSR2NChooseLevelRsp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .pb.SSN2GChooseLevelRsp rsp = 2;
  if (this->has_rsp()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *rsp_);
  }

  // uint64 request_id = 1;
  if (this->request_id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_request_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SSR2NChooseLevelRsp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.SSR2NChooseLevelRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const SSR2NChooseLevelRsp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SSR2NChooseLevelRsp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.SSR2NChooseLevelRsp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.SSR2NChooseLevelRsp)
    MergeFrom(*source);
  }
}

void SSR2NChooseLevelRsp::MergeFrom(const SSR2NChooseLevelRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.SSR2NChooseLevelRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_rsp()) {
    _internal_mutable_rsp()->::pb::SSN2GChooseLevelRsp::MergeFrom(from._internal_rsp());
  }
  if (from.request_id() != 0) {
    _internal_set_request_id(from._internal_request_id());
  }
}

void SSR2NChooseLevelRsp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.SSR2NChooseLevelRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SSR2NChooseLevelRsp::CopyFrom(const SSR2NChooseLevelRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.SSR2NChooseLevelRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SSR2NChooseLevelRsp::IsInitialized() const {
  return true;
}

void SSR2NChooseLevelRsp::InternalSwap(SSR2NChooseLevelRsp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SSR2NChooseLevelRsp, request_id_)
      + sizeof(SSR2NChooseLevelRsp::request_id_)
      - PROTOBUF_FIELD_OFFSET(SSR2NChooseLevelRsp, rsp_)>(
          reinterpret_cast<char*>(&rsp_),
          reinterpret_cast<char*>(&other->rsp_));
}

::PROTOBUF_NAMESPACE_ID::Metadata SSR2NChooseLevelRsp::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class SSN2RReadyInRoomReq::_Internal {
 public:
  static const ::pb::SSG2NReadyInRoomReq& req(const SSN2RReadyInRoomReq* msg);
};

const ::pb::SSG2NReadyInRoomReq&
SSN2RReadyInRoomReq::_Internal::req(const SSN2RReadyInRoomReq* msg) {
  return *msg->req_;
}
void SSN2RReadyInRoomReq::clear_req() {
  if (GetArena() == nullptr && req_ != nullptr) {
    delete req_;
  }
  req_ = nullptr;
}
SSN2RReadyInRoomReq::SSN2RReadyInRoomReq(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:pb.SSN2RReadyInRoomReq)
}
SSN2RReadyInRoomReq::SSN2RReadyInRoomReq(const SSN2RReadyInRoomReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_req()) {
    req_ = new ::pb::SSG2NReadyInRoomReq(*from.req_);
  } else {
    req_ = nullptr;
  }
  request_id_ = from.request_id_;
  // @@protoc_insertion_point(copy_constructor:pb.SSN2RReadyInRoomReq)
}

void SSN2RReadyInRoomReq::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_SSN2RReadyInRoomReq_node_5froom_5fmsg_2eproto.base);
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&req_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&request_id_) -
      reinterpret_cast<char*>(&req_)) + sizeof(request_id_));
}

SSN2RReadyInRoomReq::~SSN2RReadyInRoomReq() {
  // @@protoc_insertion_point(destructor:pb.SSN2RReadyInRoomReq)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SSN2RReadyInRoomReq::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete req_;
}

void SSN2RReadyInRoomReq::ArenaDtor(void* object) {
  SSN2RReadyInRoomReq* _this = reinterpret_cast< SSN2RReadyInRoomReq* >(object);
  (void)_this;
}
void SSN2RReadyInRoomReq::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SSN2RReadyInRoomReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SSN2RReadyInRoomReq& SSN2RReadyInRoomReq::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SSN2RReadyInRoomReq_node_5froom_5fmsg_2eproto.base);
  return *internal_default_instance();
}


void SSN2RReadyInRoomReq::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.SSN2RReadyInRoomReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && req_ != nullptr) {
    delete req_;
  }
  req_ = nullptr;
  request_id_ = PROTOBUF_ULONGLONG(0);
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SSN2RReadyInRoomReq::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint64 request_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          request_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .pb.SSG2NReadyInRoomReq req = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_req(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SSN2RReadyInRoomReq::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.SSN2RReadyInRoomReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 request_id = 1;
  if (this->request_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_request_id(), target);
  }

  // .pb.SSG2NReadyInRoomReq req = 2;
  if (this->has_req()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::req(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.SSN2RReadyInRoomReq)
  return target;
}

size_t SSN2RReadyInRoomReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.SSN2RReadyInRoomReq)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .pb.SSG2NReadyInRoomReq req = 2;
  if (this->has_req()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *req_);
  }

  // uint64 request_id = 1;
  if (this->request_id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_request_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SSN2RReadyInRoomReq::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.SSN2RReadyInRoomReq)
  GOOGLE_DCHECK_NE(&from, this);
  const SSN2RReadyInRoomReq* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SSN2RReadyInRoomReq>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.SSN2RReadyInRoomReq)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.SSN2RReadyInRoomReq)
    MergeFrom(*source);
  }
}

void SSN2RReadyInRoomReq::MergeFrom(const SSN2RReadyInRoomReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.SSN2RReadyInRoomReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_req()) {
    _internal_mutable_req()->::pb::SSG2NReadyInRoomReq::MergeFrom(from._internal_req());
  }
  if (from.request_id() != 0) {
    _internal_set_request_id(from._internal_request_id());
  }
}

void SSN2RReadyInRoomReq::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.SSN2RReadyInRoomReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SSN2RReadyInRoomReq::CopyFrom(const SSN2RReadyInRoomReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.SSN2RReadyInRoomReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SSN2RReadyInRoomReq::IsInitialized() const {
  return true;
}

void SSN2RReadyInRoomReq::InternalSwap(SSN2RReadyInRoomReq* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SSN2RReadyInRoomReq, request_id_)
      + sizeof(SSN2RReadyInRoomReq::request_id_)
      - PROTOBUF_FIELD_OFFSET(SSN2RReadyInRoomReq, req_)>(
          reinterpret_cast<char*>(&req_),
          reinterpret_cast<char*>(&other->req_));
}

::PROTOBUF_NAMESPACE_ID::Metadata SSN2RReadyInRoomReq::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class SSR2NReadyInRoomRsp::_Internal {
 public:
  static const ::pb::SSN2GReadyInRoomRsp& rsp(const SSR2NReadyInRoomRsp* msg);
};

const ::pb::SSN2GReadyInRoomRsp&
SSR2NReadyInRoomRsp::_Internal::rsp(const SSR2NReadyInRoomRsp* msg) {
  return *msg->rsp_;
}
void SSR2NReadyInRoomRsp::clear_rsp() {
  if (GetArena() == nullptr && rsp_ != nullptr) {
    delete rsp_;
  }
  rsp_ = nullptr;
}
SSR2NReadyInRoomRsp::SSR2NReadyInRoomRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:pb.SSR2NReadyInRoomRsp)
}
SSR2NReadyInRoomRsp::SSR2NReadyInRoomRsp(const SSR2NReadyInRoomRsp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_rsp()) {
    rsp_ = new ::pb::SSN2GReadyInRoomRsp(*from.rsp_);
  } else {
    rsp_ = nullptr;
  }
  request_id_ = from.request_id_;
  // @@protoc_insertion_point(copy_constructor:pb.SSR2NReadyInRoomRsp)
}

void SSR2NReadyInRoomRsp::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_SSR2NReadyInRoomRsp_node_5froom_5fmsg_2eproto.base);
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&rsp_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&request_id_) -
      reinterpret_cast<char*>(&rsp_)) + sizeof(request_id_));
}

SSR2NReadyInRoomRsp::~SSR2NReadyInRoomRsp() {
  // @@protoc_insertion_point(destructor:pb.SSR2NReadyInRoomRsp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SSR2NReadyInRoomRsp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete rsp_;
}

void SSR2NReadyInRoomRsp::ArenaDtor(void* object) {
  SSR2NReadyInRoomRsp* _this = reinterpret_cast< SSR2NReadyInRoomRsp* >(object);
  (void)_this;
}
void SSR2NReadyInRoomRsp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SSR2NReadyInRoomRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SSR2NReadyInRoomRsp& SSR2NReadyInRoomRsp::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SSR2NReadyInRoomRsp_node_5froom_5fmsg_2eproto.base);
  return *internal_default_instance();
}


void SSR2NReadyInRoomRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.SSR2NReadyInRoomRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && rsp_ != nullptr) {
    delete rsp_;
  }
  rsp_ = nullptr;
  request_id_ = PROTOBUF_ULONGLONG(0);
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SSR2NReadyInRoomRsp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint64 request_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          request_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .pb.SSN2GReadyInRoomRsp rsp = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_rsp(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SSR2NReadyInRoomRsp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.SSR2NReadyInRoomRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 request_id = 1;
  if (this->request_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_request_id(), target);
  }

  // .pb.SSN2GReadyInRoomRsp rsp = 2;
  if (this->has_rsp()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::rsp(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.SSR2NReadyInRoomRsp)
  return target;
}

size_t SSR2NReadyInRoomRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.SSR2NReadyInRoomRsp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .pb.SSN2GReadyInRoomRsp rsp = 2;
  if (this->has_rsp()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *rsp_);
  }

  // uint64 request_id = 1;
  if (this->request_id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_request_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SSR2NReadyInRoomRsp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.SSR2NReadyInRoomRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const SSR2NReadyInRoomRsp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SSR2NReadyInRoomRsp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.SSR2NReadyInRoomRsp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.SSR2NReadyInRoomRsp)
    MergeFrom(*source);
  }
}

void SSR2NReadyInRoomRsp::MergeFrom(const SSR2NReadyInRoomRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.SSR2NReadyInRoomRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_rsp()) {
    _internal_mutable_rsp()->::pb::SSN2GReadyInRoomRsp::MergeFrom(from._internal_rsp());
  }
  if (from.request_id() != 0) {
    _internal_set_request_id(from._internal_request_id());
  }
}

void SSR2NReadyInRoomRsp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.SSR2NReadyInRoomRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SSR2NReadyInRoomRsp::CopyFrom(const SSR2NReadyInRoomRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.SSR2NReadyInRoomRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SSR2NReadyInRoomRsp::IsInitialized() const {
  return true;
}

void SSR2NReadyInRoomRsp::InternalSwap(SSR2NReadyInRoomRsp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SSR2NReadyInRoomRsp, request_id_)
      + sizeof(SSR2NReadyInRoomRsp::request_id_)
      - PROTOBUF_FIELD_OFFSET(SSR2NReadyInRoomRsp, rsp_)>(
          reinterpret_cast<char*>(&rsp_),
          reinterpret_cast<char*>(&other->rsp_));
}

::PROTOBUF_NAMESPACE_ID::Metadata SSR2NReadyInRoomRsp::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace pb
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::pb::SSN2RPullMsgReq* Arena::CreateMaybeMessage< ::pb::SSN2RPullMsgReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::pb::SSN2RPullMsgReq >(arena);
}
template<> PROTOBUF_NOINLINE ::pb::SSR2NPullRoomMsgRsp* Arena::CreateMaybeMessage< ::pb::SSR2NPullRoomMsgRsp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::pb::SSR2NPullRoomMsgRsp >(arena);
}
template<> PROTOBUF_NOINLINE ::pb::SSR2NPullRoomMsgRSP* Arena::CreateMaybeMessage< ::pb::SSR2NPullRoomMsgRSP >(Arena* arena) {
  return Arena::CreateMessageInternal< ::pb::SSR2NPullRoomMsgRSP >(arena);
}
template<> PROTOBUF_NOINLINE ::pb::SSN2RCreateRoomReq* Arena::CreateMaybeMessage< ::pb::SSN2RCreateRoomReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::pb::SSN2RCreateRoomReq >(arena);
}
template<> PROTOBUF_NOINLINE ::pb::SSR2NCreateRoomRsp* Arena::CreateMaybeMessage< ::pb::SSR2NCreateRoomRsp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::pb::SSR2NCreateRoomRsp >(arena);
}
template<> PROTOBUF_NOINLINE ::pb::SSN2REnterRoomReq* Arena::CreateMaybeMessage< ::pb::SSN2REnterRoomReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::pb::SSN2REnterRoomReq >(arena);
}
template<> PROTOBUF_NOINLINE ::pb::SSR2NEnterRoomRsp* Arena::CreateMaybeMessage< ::pb::SSR2NEnterRoomRsp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::pb::SSR2NEnterRoomRsp >(arena);
}
template<> PROTOBUF_NOINLINE ::pb::SSN2RLeaveRoomReq* Arena::CreateMaybeMessage< ::pb::SSN2RLeaveRoomReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::pb::SSN2RLeaveRoomReq >(arena);
}
template<> PROTOBUF_NOINLINE ::pb::SSR2NLeaveRoomRsp* Arena::CreateMaybeMessage< ::pb::SSR2NLeaveRoomRsp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::pb::SSR2NLeaveRoomRsp >(arena);
}
template<> PROTOBUF_NOINLINE ::pb::SSN2RChooseLevelReq* Arena::CreateMaybeMessage< ::pb::SSN2RChooseLevelReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::pb::SSN2RChooseLevelReq >(arena);
}
template<> PROTOBUF_NOINLINE ::pb::SSR2NChooseLevelRsp* Arena::CreateMaybeMessage< ::pb::SSR2NChooseLevelRsp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::pb::SSR2NChooseLevelRsp >(arena);
}
template<> PROTOBUF_NOINLINE ::pb::SSN2RReadyInRoomReq* Arena::CreateMaybeMessage< ::pb::SSN2RReadyInRoomReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::pb::SSN2RReadyInRoomReq >(arena);
}
template<> PROTOBUF_NOINLINE ::pb::SSR2NReadyInRoomRsp* Arena::CreateMaybeMessage< ::pb::SSR2NReadyInRoomRsp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::pb::SSR2NReadyInRoomRsp >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
